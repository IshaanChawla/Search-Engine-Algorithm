<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>14.1 &#8212; Function templates &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 14.1 &#8212; Function templates Comments Feed" href="http://www.learncpp.com/cpp-tutorial/141-function-templates/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"27.122.242.72","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[["2015","04","29"],["1"]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/141-function-templates\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='13.7 &#8212; Random file I/O' href='http://www.learncpp.com/cpp-tutorial/137-random-file-io/' />
<link rel='next' title='14.2 &#8212; Function template instances' href='http://www.learncpp.com/cpp-tutorial/142-function-template-instances/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/141-function-templates/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=200' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="14.1 -- Function templates" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/141-function-templates/" />
<meta property="og:description" content="The need for function templates In previous chapters, you&#039;ve learned how to write functions and classes that help make programs easier to write, safer, and more maintainable. While functions and cl..." />
<meta property="article:published_time" content="2008-04-19T00:54:25+00:00" />
<meta property="article:modified_time" content="2008-04-19T00:54:25+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-200 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-200 post type-post status-publish format-standard hentry category-cpp-tutorial tag-c tag-function-template tag-programming tag-templates tag-tutorial odd" id="post-200">
						<div class="post-headline">		<h1>14.1 &#8212; Function templates</h1>
		</div>		<div class="post-byline">By Alex, on April 18th, 2008</div>		<div class="post-bodycopy clearfix"><p><strong>The need for function templates</strong></p>
<p>In previous chapters, you&#8217;ve learned how to write functions and classes that help make programs easier to write, safer, and more maintainable.  While functions and classes are powerful and flexible tools for effective programming, in certain cases they can also be somewhat limiting because of C++&#8217;s requirement that you specify the type of all parameters.</p>
<p>For example, let&#8217;s say you wanted to write a function to calculate the maximum of two numbers.  You might do so like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3a3521653385" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3a3521653385-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3a3521653385-2">2</div><div class="crayon-num" data-line="crayon-555d74b72e3a3521653385-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3a3521653385-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3a3521653385-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3a3521653385-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b72e3a3521653385-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3a3521653385-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
<p>This function would work great -- for integers.  What happens later when you realize your max() function needs to work with doubles?  Traditionally, the answer would be to overload the max() function and create a new version that works with doubles:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3b3613693087" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3b3613693087-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3b3613693087-2">2</div><div class="crayon-num" data-line="crayon-555d74b72e3b3613693087-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3b3613693087-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3b3613693087-1"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3b3613693087-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b72e3b3613693087-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">dX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">dX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3b3613693087-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>Note that the code for the implementation of the double version of maximum() is exactly the same as for the int version of max()!  In fact, this implementation would work for all sorts of different types: chars, ints, doubles, and if you&#8217;ve overloaded the > operator, even classes!  However, because C++ requires you to make your variables specific types, you&#8217;re stuck writing one function for each type you wish to use.</p>
<p>Having to specify different &#8220;flavors&#8221; of the same function where the only thing that changes is the type of the parameters can become a severe maintenance headache and time-waster, and it also violates the general programming guideline that duplicate code should be minimized as much as possible.  Wouldn&#8217;t it be nice if we could write one version of max() that was able to work with parameters of ANY type?</p>
<p>This is where function templates come in!</p>
<p><strong>What is a function template?</strong></p>
<p>If you were to look up the word &#8220;template&#8221; in the dictionary, you&#8217;d find a definition that was similar to the following: &#8220;a template is a model that serves as a pattern for creating similar objects&#8221;.  One type of template that is very easy to understand is that of a stencil.  A stencil is an object (eg. a piece of cardboard) with a shape cut out of it (eg. the letter J).  By placing the stencil on top of another object, then spraying paint through the hole, you can very quickly produce stenciled patterns in many different colors!  Note that you only need to create a given stencil once -- you can then use it as many times as you like to create stenciled patterns in whatever color(s) you like.  Even better, you don&#8217;t have to decide the color of the stenciled pattern you want to create until you decide to actually use the stencil.</p>
<p>In C++, <strong>function templates</strong> are functions that serve as a pattern for creating other similar functions.  The basic idea behind function templates is to create a function without having to specify the exact type(s) of some or all of the variables.  Instead, we define the function using placeholder types, called <strong>template type parameters</strong>.  Once we have created a function using these placeholder types, we have effectively created a &#8220;function stencil&#8221;.</p>
<p>It turns out that you can&#8217;t call a function template directly -- this is because the compiler doesn&#8217;t know how to handle placeholder types directly.  Instead, when you call a template function, the compiler &#8220;stencils&#8221; out a copy of the template, replacing the placeholder types with the actual variable types in your function call!  Using this methodology, the compiler can create multiple &#8220;flavors&#8221; of a function from one template!  We&#8217;ll take a look at this process in more detail in the next lesson.</p>
<p><strong>Creating function templates in C++</strong></p>
<p>At this point, you&#8217;re probably wondering how to actually create function templates in C++.  It turns out, it&#8217;s not all that difficult.</p>
<p>Let&#8217;s take a look at the int version of max() again:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3be407381229" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3be407381229-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3be407381229-2">2</div><div class="crayon-num" data-line="crayon-555d74b72e3be407381229-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3be407381229-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3be407381229-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3be407381229-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b72e3be407381229-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3be407381229-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>Note that there are 3 places where specific types are used: parameters nX, nY, and the return value all specify that they must be integers.  To create a function template, we&#8217;re going to replace these specific types with placeholder types.  In this case, because we have only one type that needs replacing (int), we only need one template type parameter.  Let&#8217;s call our this placeholder type &#8220;Type&#8221;.  You can name your placeholder types almost anything you want, so long as it&#8217;s not a reserved word.  Here&#8217;s our new function with a placeholder type:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3c5446126826" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3c5446126826-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3c5446126826-2">2</div><div class="crayon-num" data-line="crayon-555d74b72e3c5446126826-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3c5446126826-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3c5446126826-1"><span class="crayon-e">Type </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-e">Type </span><span class="crayon-v">tX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Type </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3c5446126826-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b72e3c5446126826-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3c5446126826-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>(Note: I also changed the Hungarian notation on the variables to reflect that they are not necessarily integers any longer -- they are whatever type Type is!)</p>
<p>This is a good start -- however, it won&#8217;t compile because the compiler doesn&#8217;t know what &#8220;Type&#8221; means!  In order to tell the compiler that Type is meant to be a placeholder type, we need to formally tell the compiler that Type is a template type parameter.  This is done using what is called a <strong>template parameter declaration</strong>:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3cb727154411" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3cb727154411-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3cb727154411-2">2</div><div class="crayon-num" data-line="crayon-555d74b72e3cb727154411-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3cb727154411-4">4</div><div class="crayon-num" data-line="crayon-555d74b72e3cb727154411-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3cb727154411-1"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-r">typename</span><span class="crayon-h"> </span><span class="crayon-v">Type</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-c">// this is the template parameter declaration</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3cb727154411-2"><span class="crayon-e">Type </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-e">Type </span><span class="crayon-v">tX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Type </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74b72e3cb727154411-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3cb727154411-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74b72e3cb727154411-5"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>Believe it or not, we&#8217;re done!  This will compile!</p>
<p>Now, let&#8217;s take a slightly closer look at the template parameter declaration.  We start with the keyword <em>template</em> -- this tells the compiler that what follows is going to be a list of template parameters.  We place all of our parameters inside angled brackets (<>).  To create a template type parameter, use either the keyword <em>typename</em> or <em>class</em>.  There is no difference between the two keywords in this context, and you will usually see people use the class keyword.  However, we prefer the newer typename keyword, because it makes it clearer that the template type parameter doesn&#8217;t have to be a class.  After the typename or class keyword, all that&#8217;s left is to pick a name for your placeholder type.  Traditionally, with function that have only one template type parameter, the name &#8220;Type&#8221; (often shortened to &#8220;T&#8221;) is used.  If the template function uses multiple template type parameter, they can be separated by commas:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3d3631724194" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3d3631724194-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3d3631724194-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3d3631724194-1"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-r">typename</span><span class="crayon-h"> </span><span class="crayon-v">T1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-r">typename</span><span class="crayon-h"> </span><span class="crayon-v">T2</span><span class="crayon-o">&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3d3631724194-2"><span class="crayon-c">// template function here</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
<p><strong>Using function templates</strong></p>
<p>Using a function template is extremely straightforward -- you can use it just like any other function:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b72e3d9184607847" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b72e3d9184607847-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b72e3d9184607847-2">2</div><div class="crayon-num" data-line="crayon-555d74b72e3d9184607847-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b72e3d9184607847-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 7</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b72e3d9184607847-2"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-cn">6.34</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">18.523</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 18.523</span></div><div class="crayon-line" id="crayon-555d74b72e3d9184607847-3"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-s">'a'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'6'</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 'a'</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0013 seconds] -->
<p></p>
<p>Note that all three of these calls to max() have parameters of different types!</p>
<p>As you can see, template functions can save a lot of time, because you only need to write one function, and it will work with many different types.  Once you get used to writing function templates, you&#8217;ll find they actually don&#8217;t take any longer to write than functions with actual types.  Template functions reduce code maintenance, because duplicate code is reduced significantly.  And finally, template functions can be safer, because there is no need to copy functions and change types by hand whenever you need the function to work with a new type!</p>
<p>Template functions do have a few drawbacks, and we would be remiss not to mention them.  First, older compilers generally do not have very good template support.  However, modern compilers are much better at supporting and implementing template functionality properly.  Second, template functions produce crazy-looking error messages that are much harder to decipher than those of regular functions.  However, these drawbacks are fairly minor compared with the power and flexibility templates bring to your programming toolkit!</p>
<p>Note: The standard library already comes with a templated max() function.  If you use the statement &#8220;using namespace std;&#8221; the compiler will be unable to tell whether you want your version of max() or std::max().</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/142-function-template-instances/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 14.2 -- Function template instances</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter14" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/137-random-file-io/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 13.7 -- Random file I/O</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/141-function-templates/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-200" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/141-function-templates/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-200" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/141-function-templates/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-200" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/141-function-templates/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-200" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/141-function-templates/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a> &nbsp; <img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/tag-gray.gif" alt="" /> <a href="http://www.learncpp.com/tag/c/" rel="tag">c++</a>, <a href="http://www.learncpp.com/tag/function-template/" rel="tag">function template</a>, <a href="http://www.learncpp.com/tag/programming/" rel="tag">programming</a>, <a href="http://www.learncpp.com/tag/templates/" rel="tag">templates</a>, <a href="http://www.learncpp.com/tag/tutorial/" rel="tag">tutorial</a> &nbsp;   | <a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">14 comments to 14.1 &#8212; Function templates</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-13214">
		<div id="div-comment-13214" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/b89df05753edcfb9c82f3624aabcd4b0?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/b89df05753edcfb9c82f3624aabcd4b0?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Bruce</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-13214">
		April 26, 2008 at 5:45 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=13214#respond' onclick='return addComment.moveForm( "comment-13214", "13214", "respond", "200" )' aria-label='Reply to Bruce'> &middot; Reply</a></span>		 
		</div>
		<p>The usage of template should be</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b732312486924625" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b732312486924625-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732312486924625-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b732312486924625-1"><span class="crayon-t">template</span><span class="crayon-h"> </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732312486924625-2"><span class="crayon-c">//template function here</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>or I misunderstood something here?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-30265">
		<div id="div-comment-30265" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/cd3804484b7118898b290c754d2fee9d?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/cd3804484b7118898b290c754d2fee9d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.google.com' rel='external nofollow' class='url'>mohammad</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-30265">
		October 19, 2008 at 8:04 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=30265#respond' onclick='return addComment.moveForm( "comment-30265", "30265", "respond", "200" )' aria-label='Reply to mohammad'> &middot; Reply</a></span>		 
		</div>
		<p>2nd code part:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b732219242744358" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b732219242744358-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732219242744358-2">2</div><div class="crayon-num" data-line="crayon-555d74b732219242744358-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732219242744358-4">4</div><div class="crayon-num" data-line="crayon-555d74b732219242744358-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b732219242744358-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732219242744358-2"><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d74b732219242744358-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">dX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">dX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732219242744358-4"><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d74b732219242744358-5"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0019 seconds] -->
<p></p>
<p>the return should be a double not an int, so:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b732223585155459" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b732223585155459-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732223585155459-2">2</div><div class="crayon-num" data-line="crayon-555d74b732223585155459-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732223585155459-4">4</div><div class="crayon-num" data-line="crayon-555d74b732223585155459-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b732223585155459-1"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732223585155459-2"><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d74b732223585155459-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">dX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">dX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">dY</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732223585155459-4"><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d74b732223585155459-5"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0013 seconds] -->
<p></p>
<p>is better</p>
<p>[ Yes, thank you.  It&#8217;s fixed now. -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-32052">
		<div id="div-comment-32052" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/04be8c94422ecd251a776af98bfdb783?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/04be8c94422ecd251a776af98bfdb783?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abhijit Yelegaonkar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-32052">
		November 13, 2008 at 5:01 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=32052#respond' onclick='return addComment.moveForm( "comment-32052", "32052", "respond", "200" )' aria-label='Reply to Abhijit Yelegaonkar'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b73214c800511208" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b73214c800511208-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b73214c800511208-1"><span class="crayon-h"> </span><span class="crayon-v">Alex</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">We </span><span class="crayon-e">will </span><span class="crayon-e">always </span><span class="crayon-e">be </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">awe </span><span class="crayon-i">of</span><span class="crayon-h"> </span><span class="crayon-i">u</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-r">this</span><span class="crayon-h"> </span><span class="crayon-e">excellent </span><span class="crayon-v">tutorial</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-e">God </span><span class="crayon-i">Bless</span><span class="crayon-h"> </span><span class="crayon-v">u</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-51423">
		<div id="div-comment-51423" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/1348f386c762fcf266f4200cfd61fda5?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/1348f386c762fcf266f4200cfd61fda5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.google.ca' rel='external nofollow' class='url'>Unknown</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-51423">
		March 17, 2009 at 8:59 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=51423#respond' onclick='return addComment.moveForm( "comment-51423", "51423", "respond", "200" )' aria-label='Reply to Unknown'> &middot; Reply</a></span>		 
		</div>
		<p>Have you guys realized that once you declare &#8220;using namespace std;&#8221; in the beginning of your code&#8230;.There will be multiple errors in the code if you try to use the template.</p>
<p>For example:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b732024510080789" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b732024510080789-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-2">2</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-4">4</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-6">6</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-8">8</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-10">10</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-12">12</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-14">14</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b732024510080789-16">16</div><div class="crayon-num" data-line="crayon-555d74b732024510080789-17">17</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b732024510080789-1"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-2">&nbsp;</div><div class="crayon-line" id="crayon-555d74b732024510080789-3"><span class="crayon-t">template</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// this is the template parameter declaration</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-4"><span class="crayon-e">Type </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-e">Type </span><span class="crayon-v">tX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Type </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74b732024510080789-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74b732024510080789-7"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-8">&nbsp;</div><div class="crayon-line" id="crayon-555d74b732024510080789-9"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-10"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b732024510080789-11"><span class="crayon-h">	</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 7</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-12"><span class="crayon-h">	</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-cn">6.34</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">18.523</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 18.523</span></div><div class="crayon-line" id="crayon-555d74b732024510080789-13"><span class="crayon-h">	</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-s">'a'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'6'</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 'a'</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-14"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74b732024510080789-15"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b732024510080789-16"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d74b732024510080789-17"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0057 seconds] -->
<p>This creates an error while this doesn&#8217;t:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b73202e651037088" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b73202e651037088-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-2">2</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-4">4</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-6">6</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-8">8</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-10">10</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-12">12</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-14">14</div><div class="crayon-num" data-line="crayon-555d74b73202e651037088-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b73202e651037088-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b73202e651037088-1"><span class="crayon-t">template</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// this is the template parameter declaration</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-2"><span class="crayon-e">Type </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-e">Type </span><span class="crayon-v">tX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Type </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74b73202e651037088-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-v">tX</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">tY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74b73202e651037088-5"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-6">&nbsp;</div><div class="crayon-line" id="crayon-555d74b73202e651037088-7"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-8"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b73202e651037088-9"><span class="crayon-h">	</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 7</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-10"><span class="crayon-h">	</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-cn">6.34</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">18.523</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 18.523</span></div><div class="crayon-line" id="crayon-555d74b73202e651037088-11"><span class="crayon-h">	</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">max</span><span class="crayon-sy">(</span><span class="crayon-s">'a'</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'6'</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// returns 'a'</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74b73202e651037088-13"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-14"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74b73202e651037088-15"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b73202e651037088-16"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0055 seconds] -->
<p></p>
<p>[ This is because the local version of max() has a namespace collision with std::max().  I made a note of it at the bottom of the article.  Thanks for the heads up.  -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-69746">
		<div id="div-comment-69746" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/04de5839fda07398e884d1aa6d2d107d?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/04de5839fda07398e884d1aa6d2d107d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Puneet</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-69746">
		October 3, 2009 at 10:56 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=69746#respond' onclick='return addComment.moveForm( "comment-69746", "69746", "respond", "200" )' aria-label='Reply to Puneet'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b731f50077450194" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b731f50077450194-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b731f50077450194-1"><span class="crayon-e">Many </span><span class="crayon-e">people </span><span class="crayon-e">are </span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-e">able </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-e">explain </span><span class="crayon-e">things </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-i">such</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-e">clear </span><span class="crayon-v">way</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-r">This</span><span class="crayon-h"> </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-e">really </span><span class="crayon-v">helpful</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-v">Thanks</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-97780">
		<div id="div-comment-97780" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/ac44af223f644ebab74929b3b12c1984?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/ac44af223f644ebab74929b3b12c1984?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">zakaria</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-97780">
		September 3, 2012 at 11:57 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=97780#respond' onclick='return addComment.moveForm( "comment-97780", "97780", "respond", "200" )' aria-label='Reply to zakaria'> &middot; Reply</a></span>		 
		</div>
		<p>I think also u must write #include before int main()</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-72064">
		<div id="div-comment-72064" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2f9edb22d422b9e02a544163888a8a33?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2f9edb22d422b9e02a544163888a8a33?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">karmeloz</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-72064">
		November 10, 2009 at 11:11 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=72064#respond' onclick='return addComment.moveForm( "comment-72064", "72064", "respond", "200" )' aria-label='Reply to karmeloz'> &middot; Reply</a></span>		 
		</div>
		<p>when we use the keyword &#8220;template&#8221;, we tell the compiler that what follows is going to be a list of template parameters.<br />
so why do we need the additional keyword typename (or class) for each parameter ? is the keyword typename redudantant<br />
or does it have a specific function? thanks, Karmeloz</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-79326">
		<div id="div-comment-79326" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a497ea6b68d9675f366c0c49e1cb38c9?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a497ea6b68d9675f366c0c49e1cb38c9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.nickkusters.com' rel='external nofollow' class='url'>Nick</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-79326">
		February 28, 2010 at 5:42 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=79326#respond' onclick='return addComment.moveForm( "comment-79326", "79326", "respond", "200" )' aria-label='Reply to Nick'> &middot; Reply</a></span>		 
		</div>
		<p>Can you define these Template functions in seperate cpp files and have the definition in a .h file like normal functions?</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b731dae472047169" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b731dae472047169-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b731dae472047169-2">2</div><div class="crayon-num" data-line="crayon-555d74b731dae472047169-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b731dae472047169-1"><span class="crayon-c">// .h file def</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b731dae472047169-2"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-r">typename</span><span class="crayon-h"> </span><span class="crayon-v">T</span><span class="crayon-o">&gt;</span></div><div class="crayon-line" id="crayon-555d74b731dae472047169-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetArrayLength</span><span class="crayon-sy">(</span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-v">iArray</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b731dbb685796122" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b731dbb685796122-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b731dbb685796122-2">2</div><div class="crayon-num" data-line="crayon-555d74b731dbb685796122-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b731dbb685796122-4">4</div><div class="crayon-num" data-line="crayon-555d74b731dbb685796122-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b731dbb685796122-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b731dbb685796122-1"><span class="crayon-c">// .cpp file function</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b731dbb685796122-2"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-r">typename</span><span class="crayon-h"> </span><span class="crayon-v">T</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-c">// this is the template parameter declaration</span></div><div class="crayon-line" id="crayon-555d74b731dbb685796122-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetArrayLength</span><span class="crayon-sy">(</span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-v">iArray</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b731dbb685796122-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74b731dbb685796122-5"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">iArray</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">iArray</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b731dbb685796122-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p>If i then use the GetArrayLength() function from my main.cpp, I get the following build errors:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b731dc2071923805" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b731dc2071923805-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b731dc2071923805-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b731dc2071923805-1"><span class="crayon-i">Error</span><span class="crayon-h">	</span><span class="crayon-cn">1</span><span class="crayon-h">	</span><span class="crayon-e">error </span><span class="crayon-v">LNK2019</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">unresolved </span><span class="crayon-e">external </span><span class="crayon-i">symbol</span><span class="crayon-h"> </span><span class="crayon-s">"int __cdecl GetArrayLength&lt;int&gt;(int * const)"</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">?</span><span class="crayon-sy">?</span><span class="crayon-sy">$</span><span class="crayon-v">GetArrayLength</span><span class="crayon-sy">@</span><span class="crayon-v">H</span><span class="crayon-sy">@</span><span class="crayon-sy">@</span><span class="crayon-v">YAHQAH</span><span class="crayon-sy">@</span><span class="crayon-v">Z</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-e">referenced </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-t">function</span><span class="crayon-h"> </span><span class="crayon-e">_wmain	</span><span class="crayon-v">CPPTest</span><span class="crayon-sy">.</span><span class="crayon-e">obj	</span><span class="crayon-e">CPPTest</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b731dc2071923805-2"><span class="crayon-i">Error</span><span class="crayon-h">	</span><span class="crayon-cn">2</span><span class="crayon-h">	</span><span class="crayon-e">fatal </span><span class="crayon-e">error </span><span class="crayon-v">LNK1120</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-e">unresolved </span><span class="crayon-e">externals	</span><span class="crayon-v">CPPTest</span><span class="crayon-sy">.</span><span class="crayon-i">exe</span><span class="crayon-h">	</span><span class="crayon-cn">1</span><span class="crayon-h">	</span><span class="crayon-v">CPPTest</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0017 seconds] -->
<p></p>
<p>If I just define the function twice (once in my helper.cpp and once in my main.cpp), everything works as expected. Any idea what&#8217;s wrong here?</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-79327">
		<div id="div-comment-79327" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a497ea6b68d9675f366c0c49e1cb38c9?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a497ea6b68d9675f366c0c49e1cb38c9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.nickkusters.com' rel='external nofollow' class='url'>Nick</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-79327">
		February 28, 2010 at 5:47 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=79327#respond' onclick='return addComment.moveForm( "comment-79327", "79327", "respond", "200" )' aria-label='Reply to Nick'> &middot; Reply</a></span>		 
		</div>
		<p>I found your commend in chapter 14.3</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74b731cc5387256073" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74b731cc5387256073-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74b731cc5387256073-2">2</div><div class="crayon-num" data-line="crayon-555d74b731cc5387256073-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74b731cc5387256073-1"><span class="crayon-i">A</span><span class="crayon-h"> </span><span class="crayon-e">note </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">users </span><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-e">older </span><span class="crayon-e">compilers</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74b731cc5387256073-2">&nbsp;</div><div class="crayon-line" id="crayon-555d74b731cc5387256073-3"><span class="crayon-e">Some </span><span class="crayon-e">older </span><span class="crayon-e">compilers</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">eg</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-e">Visual </span><span class="crayon-i">Studio</span><span class="crayon-h"> </span><span class="crayon-cn">6</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-i">have</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-e">bug </span><span class="crayon-e">where </span><span class="crayon-e">the </span><span class="crayon-e">definition </span><span class="crayon-e">of </span><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">functions </span><span class="crayon-e">must </span><span class="crayon-e">be </span><span class="crayon-e">put </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">the </span><span class="crayon-e">same </span><span class="crayon-e">file </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">the </span><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-e">defined </span><span class="crayon-st">in</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-v">Thus</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">the </span><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">were </span><span class="crayon-e">defined </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">h</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">the </span><span class="crayon-t">function</span><span class="crayon-h"> </span><span class="crayon-e">definitions </span><span class="crayon-e">would </span><span class="crayon-e">have </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-e">also </span><span class="crayon-e">go </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-e">h</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-v">X</span><span class="crayon-sy">.</span><span class="crayon-v">cpp</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-r">This</span><span class="crayon-h"> </span><span class="crayon-e">issue </span><span class="crayon-e">should </span><span class="crayon-e">be </span><span class="crayon-e">fixed </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">most</span><span class="crayon-o">/</span><span class="crayon-e">all </span><span class="crayon-e">modern </span><span class="crayon-v">compilers</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0031 seconds] -->
<p></p>
<p>I am afraid this is still the case with Visual Studio 2008; if I just completely define the function in the .h file, it works as expected.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-84505">
		<div id="div-comment-84505" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/7c16e69efd5222585c91636b835ddbbb?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/7c16e69efd5222585c91636b835ddbbb?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Slice</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-84505">
		May 12, 2010 at 9:04 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=84505#respond' onclick='return addComment.moveForm( "comment-84505", "84505", "respond", "200" )' aria-label='Reply to Slice'> &middot; Reply</a></span>		 
		</div>
		<p>I&#8217;m running Microsoft Visual Studio 2008 Professional Edition, Version 9.0.21022.8 RTM with .NET Framework, Version 3.5 SP1, and I can confirm that it still doesn&#8217;t allow you to split a template into the typical header and source file arrangement. In order to get templates to work in that environment, one must still code the entire template definition inside the header file :(.</p>
<p>On the up side: my 1st linker error in the whole tutorial. W00!</p>
<p>Oh, and great tutorial Alex (if you still read these). I even stopped reading the book I was reading on C++ about halfway through and totally moved onto this and even started doing some graphics work at the same time because the information presented here was so clear and concise albeit littered with &#8220;it&#8217;s&#8221; when they should have been &#8220;its&#8221; :P. I will go back and finish the book at some point just in case I missed anything, but in the mean time onward I go.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-85934">
		<div id="div-comment-85934" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a39f449ad1718ab97013fd334b127cac?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a39f449ad1718ab97013fd334b127cac?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Clarisse</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-85934">
		June 4, 2010 at 7:32 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=85934#respond' onclick='return addComment.moveForm( "comment-85934", "85934", "respond", "200" )' aria-label='Reply to Clarisse'> &middot; Reply</a></span>		 
		</div>
		<p>The person who writes n this blog must be really happy with happy feelings =)</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-95018">
		<div id="div-comment-95018" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9e78582c659380d5075f8dd5836012d9?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9e78582c659380d5075f8dd5836012d9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">mslade</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-95018">
		December 8, 2010 at 6:42 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=95018#respond' onclick='return addComment.moveForm( "comment-95018", "95018", "respond", "200" )' aria-label='Reply to mslade'> &middot; Reply</a></span>		 
		</div>
		<p>It seems like template functions can violate encapsulation.  In your max() example, client code needs to know that it uses the &gt; operator, and that operator&gt;(the_type, the_type) needs to be defined for it to work.</p>
<p>Is there a way around this or am I just wrong?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-204214">
		<div id="div-comment-204214" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/aa7c44a56ee357e5f72aca6ac5a8d688?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/aa7c44a56ee357e5f72aca6ac5a8d688?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">DOBRESCU Mihai</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-204214">
		October 28, 2014 at 4:07 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=204214#respond' onclick='return addComment.moveForm( "comment-204214", "204214", "respond", "200" )' aria-label='Reply to DOBRESCU Mihai'> &middot; Reply</a></span>		 
		</div>
		<p>Hi,</p>
<p>       Maybe it would be clearer if the lesson contained a sample program, so that people do not become confused with the crazy-looking error messages that you have mentioned. I do appreciate your sense of humour, though.</p>
<p><code><br />
#include </p>
<p>template  // this is the template parameter declaration<br />
Type maximum(Type tX, Type tY)<br />
{<br />
    return (tX &gt; tY) ? tX : tY;<br />
}</p>
<p>int main()<br />
{<br />
    using namespace std;</p>
<p>    int nValue = maximum(3, 7); /* returns 7 */ cout &lt;&lt; nValue &lt;&lt; endl;<br />
    double dValue = maximum(6.34, 18.523); /* returns 18.523 */ cout &lt;&lt; dValue &lt;&lt; endl;<br />
    char chValue = maximum(&#039;a&#039;, &#039;6&#039;); /* returns &#039;a&#039; */ cout &lt;&lt; chValue &lt;&lt; endl;</p>
<p>    return 0;<br />
}</p>
<p><!--formatted--></code></p>
<p>       In the above excerpt, I have replaced all of the occurrences of max() with maximum() so that there is no collision between max() and std::max().</p>
<p>       The output for this sample program is:</p>
<p><code><br />
7<br />
18.523<br />
a<br />
</code></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-219762">
		<div id="div-comment-219762" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e823a6dbdf89f8957cb4df026fa1c4ce?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e823a6dbdf89f8957cb4df026fa1c4ce?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">AJB</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/141-function-templates/#comment-219762">
		November 17, 2014 at 6:42 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/141-function-templates/?replytocom=219762#respond' onclick='return addComment.moveForm( "comment-219762", "219762", "respond", "200" )' aria-label='Reply to AJB'> &middot; Reply</a></span>		 
		</div>
		<p>I have a question. I have this function, using vector of integers, and like to make it a template, so I can use it also to print doubles. How to do this ?</p>
<p>Need to include   string, iostream, vector, algorithm !</p>
<p>void PrintVector(std::vector &amp;A)<br />
{<br />
    //<br />
    // go through the vector using an iterator<br />
    //<br />
    std::vector::const_iterator it; // declare an read-only iterator<br />
    it = A.begin(); // assign it to the start of the vector</p>
<p>    // print only first 25 elements..<br />
    int nPrinted = 0;<br />
    int nMaxPrint = 25;<br />
    while (it != A.end()) // while it hasn&#8217;t reach the end<br />
    {<br />
        std::cout &lt;&lt; *it &lt;&lt; &quot; &quot;; // print the value of the element it points to<br />
        it++; // and iterate to the next element<br />
        nPrinted++;<br />
        if (nPrinted == nMaxPrint)<br />
        {<br />
            std::cout &lt;&lt; std::endl;<br />
            return;<br />
        }<br />
    }<br />
    std::cout &lt;&lt; std::endl;<br />
}</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/141-function-templates/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>seventeen &#8722; three = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4ODA4N3R5bTdtZjVxZ3o3ZGJwYWozMW04MTQ=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432188087" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='200' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="c676185362" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="95"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/141-function-templates\/":200};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/141-function-templates/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'200',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '200' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.808 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:01:27 -->

<!-- Compression = gzip -->
<!-- super cache -->

