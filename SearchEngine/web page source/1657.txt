<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>12.6 &#8212; Pure virtual functions, abstract base classes, and interface classes &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 12.6 &#8212; Pure virtual functions, abstract base classes, and interface classes Comments Feed" href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"76.79.182.114","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/126-pure-virtual-functions-abstract-base-classes-and-interface-classes\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='12.5 &#8212; The virtual table' href='http://www.learncpp.com/cpp-tutorial/125-the-virtual-table/' />
<link rel='next' title='7.13 &#8212; Command line arguments' href='http://www.learncpp.com/cpp-tutorial/713-command-line-arguments/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=184' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="12.6 -- Pure virtual functions, abstract base classes, and interface classes" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/" />
<meta property="og:description" content="Finally, we arrive at the end of our long journey through inheritance! This is the last topic we will cover on the subject. So congratulations in advance on making it through the hardest part of th..." />
<meta property="article:published_time" content="2008-02-14T00:09:36+00:00" />
<meta property="article:modified_time" content="2008-02-14T00:09:36+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-184 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-184 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-184">
						<div class="post-headline">		<h1>12.6 &#8212; Pure virtual functions, abstract base classes, and interface classes</h1>
		</div>		<div class="post-byline">By Alex, on February 13th, 2008</div>		<div class="post-bodycopy clearfix"><p>Finally, we arrive at the end of our long journey through inheritance! This is the last topic we will cover on the subject.  So congratulations in advance on making it through the hardest part of the language!</p>
<p><strong>Pure virtual (abstract) functions and abstract base classes</strong></p>
<p>So far, all of the virtual functions we have written have a body (a definition).  However, C++ allows you to create a special kind of virtual function called a <strong>pure virtual function</strong> (or <strong>abstract function</strong>) that has no body at all!  A pure virtual function simply acts as a placeholder that is meant to be redefined by derived classes.</p>
<p>To create a pure virtual function, rather than define a body for the function, we simply assign the function the value 0.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f43833104925" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f43833104925-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f43833104925-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f43833104925-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f43833104925-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f43833104925-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f43833104925-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f43833104925-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f43833104925-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f43833104925-9">9</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f43833104925-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f43833104925-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f43833104925-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f43833104925-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">SayHi</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Hi"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-c">// a normal non-virtual function&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d747c45f43833104925-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f43833104925-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Base"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-c">// a normal virtual function</span></div><div class="crayon-line" id="crayon-555d747c45f43833104925-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f43833104925-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// a pure virtual function</span></div><div class="crayon-line" id="crayon-555d747c45f43833104925-9"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0018 seconds] -->
<p></p>
<p>When we add a pure virtual function to our class, we are effectively saying, &#8220;it is up to the derived classes to implement this function&#8221;.</p>
<p>Using a pure virtual function has two main consequences: First, any class with one or more pure virtual functions becomes an <strong>abstract base class</strong>, which means that it can not be instantiated!  Consider what would happen if we could create an instance of Base:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f55730510032" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f55730510032-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f55730510032-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f55730510032-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f55730510032-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f55730510032-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f55730510032-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f55730510032-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f55730510032-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Base </span><span class="crayon-v">cBase</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// pretend this was legal</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f55730510032-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cBase</span><span class="crayon-sy">.</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// what would this do?</span></div><div class="crayon-line" id="crayon-555d747c45f55730510032-5"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Second, any derived class must define a body for this function, or that derived class will be considered an abstract base class as well.</p>
<p>Let&#8217;s take a look at an example of a pure virtual function in action.  In a previous lesson, we wrote a simple Animal base class and derived a Cat and a Dog class from it.  Here&#8217;s the code as we left it:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f5c574180135" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-10">10</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-12">12</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-14">14</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-16">16</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-18">18</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-20">20</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-22">22</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-24">24</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-26">26</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-28">28</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-30">30</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-32">32</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-34">34</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-36">36</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-38">38</div><div class="crayon-num" data-line="crayon-555d747c45f5c574180135-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f5c574180135-40">40</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f5c574180135-1"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-4"><span class="crayon-m">protected</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-6">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f5c574180135-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// We're making this constructor protected because</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// we don't want people creating Animal objects directly,</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// but we still want derived classes to be able to use it.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_strName</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-14">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f5c574180135-15"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"???"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-18"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-20"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Cat</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-21"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-22"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cat</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-27">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Meow"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-29"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-30">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f5c574180135-31"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Dog</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-32"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-33"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-34"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Dog</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-36"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f5c574180135-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-38">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f5c574180135-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Woof"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f5c574180135-40"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0049 seconds] -->
<p></p>
<p>We&#8217;ve prevented people from allocating objects of type Animal by making the constructor protected.  However, there&#8217;s one problem that has not been addressed.  It is still possible to create derived classes that do not redefine Speak().  For example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f63254539269" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f63254539269-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-10">10</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-12">12</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-14">14</div><div class="crayon-num" data-line="crayon-555d747c45f63254539269-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f63254539269-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f63254539269-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Cow</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f63254539269-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cow</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f63254539269-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f63254539269-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-8">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f63254539269-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// We forgot to redefine Speak</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-10"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f63254539269-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-12"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f63254539269-13"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cow </span><span class="crayon-e">cCow</span><span class="crayon-sy">(</span><span class="crayon-s">"Betsy"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f63254539269-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCow</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCow</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f63254539269-16"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>This will print:</p>
<pre>
Betsy says ???
</pre>
<p>What happened?  We forgot to redefine Speak, so cCow.Speak() resolved to Animal.Speak(), which isn&#8217;t what we wanted.</p>
<p>A better solution to this problem is to use a pure virtual function:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f6a858715644" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-10">10</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-12">12</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f6a858715644-14">14</div><div class="crayon-num" data-line="crayon-555d747c45f6a858715644-15">15</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f6a858715644-1"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line" id="crayon-555d747c45f6a858715644-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-4"><span class="crayon-m">protected</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d747c45f6a858715644-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-6">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f6a858715644-7"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f6a858715644-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_strName</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f6a858715644-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-12">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f6a858715644-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f6a858715644-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// pure virtual function</span></div><div class="crayon-line" id="crayon-555d747c45f6a858715644-15"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>There are a couple of things to note here.  First, Speak() is now a pure virtual function.  This means Animal is an abstract base class, and can not be instantiated.  Consequently, we do not need to make the constructor protected any longer (though it doesn&#8217;t hurt).  Second, because our Cow class was derived from Animal, but we did not define Cow::Speak(), Cow is also an abstract base class.  Now when we try to compile this code:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f71887660469" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f71887660469-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-10">10</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-12">12</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-14">14</div><div class="crayon-num" data-line="crayon-555d747c45f71887660469-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f71887660469-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f71887660469-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Cow</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f71887660469-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cow</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f71887660469-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f71887660469-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-8">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f71887660469-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// We forgot to redefine Speak</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-10"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f71887660469-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-12"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f71887660469-13"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cow </span><span class="crayon-e">cCow</span><span class="crayon-sy">(</span><span class="crayon-s">"Betsy"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f71887660469-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCow</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCow</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f71887660469-16"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0021 seconds] -->
<p></p>
<p>The compiler will give us a warning because Cow is an abstract base class and we can not create instances of abstract base classes:</p>
<pre>
C:\Test.cpp(141) : error C2259: &#039;Cow&#039; : cannot instantiate abstract class due to following members:
        C:Test.cpp(128) : see declaration of &#039;Cow&#039;
C:\Test.cpp(141) : warning C4259: &#039;const char *__thiscall Animal::Speak(void)&#039; : pure virtual function was not defined
</pre>
<p>This tells us that we will only be able to instantiate Cow if Cow provides a body for Speak().</p>
<p>Let&#8217;s go ahead and do that:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f78124026402" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f78124026402-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-10">10</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-12">12</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-14">14</div><div class="crayon-num" data-line="crayon-555d747c45f78124026402-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f78124026402-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f78124026402-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Cow</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f78124026402-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cow</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f78124026402-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f78124026402-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-8">&nbsp;</div><div class="crayon-line" id="crayon-555d747c45f78124026402-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Moo"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-10"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f78124026402-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-12"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c45f78124026402-13"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cow </span><span class="crayon-e">cCow</span><span class="crayon-sy">(</span><span class="crayon-s">"Betsy"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f78124026402-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCow</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCow</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f78124026402-16"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0025 seconds] -->
<p></p>
<p>Now this program will compile and print:</p>
<pre>
Betsy says Moo
</pre>
<p>A pure virtual function is useful when we have a function that we want to put in the base class, but only the derived classes know what it should return.  A pure virtual function makes it so the base class can not be instantiated, and the derived classes are forced to define these function before they can be instantiated.  This helps ensure the derived classes do not forget to redefine functions that the base class was expecting them to.</p>
<p><strong>Interface classes</strong></p>
<p>An <strong>interface class</strong> is a class that has no members variables, and where all of the functions are pure virtual!  In other words, the class is purely a definition, and has no actual implementation.  Interfaces are useful when you want to define the functionality that derived classes must implement, but leave the details of how the derived class implements that functionality entirely up to the derived class.</p>
<p>Interface classes are often named beginning with an I.  Here&#8217;s a sample interface class:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f7f589964085" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f7f589964085-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f7f589964085-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f7f589964085-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f7f589964085-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f7f589964085-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f7f589964085-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f7f589964085-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f7f589964085-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">IErrorLog</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f7f589964085-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f7f589964085-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">OpenLog</span><span class="crayon-sy">(</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">strFilename</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f7f589964085-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">CloseLog</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f7f589964085-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f7f589964085-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">WriteError</span><span class="crayon-sy">(</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">strErrorMessage</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f7f589964085-7"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p>Any class inheriting from IErrorLog must provide implementations for all three functions in order to be instantiated.  You could derive a class named FileErrorLog, where OpenLog() opens a file on disk, CloseLog() closes it, and WriteError() writes the message to the file.  You could derive another class called ScreenErrorLog, where OpenLog() and CloseLog() do nothing, and WriteError() prints the message in a pop-up message box on the screen.</p>
<p>Now, let&#8217;s say you need to write some code that uses an error log.  If you write your code so it includes FileErrorLog or ScreenErrorLog directly, then you&#8217;re effectively stuck using that kind of error log.  For example, the following function effectively forces callers of MySqrt() to use a FileErrorLog, which may or may not be what they want.  </p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f87726236817" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f87726236817-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f87726236817-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f87726236817-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f87726236817-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f87726236817-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f87726236817-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f87726236817-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f87726236817-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f87726236817-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f87726236817-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f87726236817-1"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">MySqrt</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">FileErrorLog</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cLog</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f87726236817-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f87726236817-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f87726236817-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f87726236817-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cLog</span><span class="crayon-sy">.</span><span class="crayon-e">WriteError</span><span class="crayon-sy">(</span><span class="crayon-s">"Tried to take square root of value less than 0"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f87726236817-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f87726236817-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f87726236817-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span></div><div class="crayon-line" id="crayon-555d747c45f87726236817-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f87726236817-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p></p>
<p>A much better way to implement this function is to use IErrorLog instead:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c45f8d588867737" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c45f8d588867737-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f8d588867737-2">2</div><div class="crayon-num" data-line="crayon-555d747c45f8d588867737-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f8d588867737-4">4</div><div class="crayon-num" data-line="crayon-555d747c45f8d588867737-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f8d588867737-6">6</div><div class="crayon-num" data-line="crayon-555d747c45f8d588867737-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f8d588867737-8">8</div><div class="crayon-num" data-line="crayon-555d747c45f8d588867737-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c45f8d588867737-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c45f8d588867737-1"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">MySqrt</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">IErrorLog</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cLog</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f8d588867737-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f8d588867737-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f8d588867737-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c45f8d588867737-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cLog</span><span class="crayon-sy">.</span><span class="crayon-e">WriteError</span><span class="crayon-sy">(</span><span class="crayon-s">"Tried to take square root of value less than 0"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f8d588867737-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c45f8d588867737-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f8d588867737-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span></div><div class="crayon-line" id="crayon-555d747c45f8d588867737-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c45f8d588867737-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p></p>
<p>Now the caller can pass in any class that conforms to the IErrorLog interface.  If they want the error to go to a file, they can pass in an instance of FileErrorLog.  If they want it to go to the screen, they can pass in an instance of ScreenErrorLog.  Or if they want to do something you haven&#8217;t even thought of, such as sending an email to someone when there&#8217;s an error, they can derive a new class from IErrorLog (eg. EmailErrorLog) and use an instance of that!  By using IErrorLog, your function becomes more independent and flexible.</p>
<p>Interface classes have become extremely popular because they are easy to use, easy to extend, and easy to maintain.  In fact, some modern languages, such as Java and C#, have added an &#8220;interface&#8221; keyword that allows programmers to directly define an interface class without having to explicitly mark all of the member functions as abstract.  Furthermore, although Java and C# will not let you use multiple inheritance on normal classes, they will let you multiply inherit as many interfaces as you like.  Because interfaces have no data and no function bodies, they avoid a lot of the traditional problems with multiple inheritance while still providing much of the flexibility.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/131-input-and-output-io-streams/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 13.1 -- Input and output (I/O) streams</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter12" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/125-the-virtual-table/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 12.5 -- The virtual table</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-184" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-184" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-184" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-184" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">25 comments to 12.6 &#8212; Pure virtual functions, abstract base classes, and interface classes</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-11691">
		<div id="div-comment-11691" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/b7d9db2840be509ea6b1248dc169904c?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/b7d9db2840be509ea6b1248dc169904c?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Susan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-11691">
		April 14, 2008 at 12:58 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=11691#respond' onclick='return addComment.moveForm( "comment-11691", "11691", "respond", "184" )' aria-label='Reply to Susan'> &middot; Reply</a></span>		 
		</div>
		<p>Can you please answer why a pure virtual function should be equated to 0 and not to any other number.</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor odd alt depth-2 clearfix" id="comment-11803">
		<div id="div-comment-11803" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-11803">
		April 15, 2008 at 10:18 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=11803#respond' onclick='return addComment.moveForm( "comment-11803", "11803", "respond", "184" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>As far as I know, =0 is just a syntactic convention for letting the compiler know that this is a pure virtual function.</p>
<p>You can think about it this way: normal functions have a body of code that needs to be executed when they are called.  This code has to live somewhere in memory, so the function&#8217;s name is essentially a pointer to that code.</p>
<p>On the other hand, pure virtual functions have no body, and thus, do not have need for an address at all.  0 is the NULL address.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even depth-2 clearfix" id="comment-33364">
		<div id="div-comment-33364" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/6735be17d6820f557b0233dd2ed25dfa?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/6735be17d6820f557b0233dd2ed25dfa?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jim</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-33364">
		December 1, 2008 at 4:33 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=33364#respond' onclick='return addComment.moveForm( "comment-33364", "33364", "respond", "184" )' aria-label='Reply to Jim'> &middot; Reply</a></span>		 
		</div>
		<p>I read this today, they didn&#8217;t want to add any more reserved words such as &#8220;pure&#8221; and it was moving too far from the C language, so this hotchpotch =0 stuff was used instead</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 clearfix" id="comment-35510">
		<div id="div-comment-35510" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/eb802dc73b7381e77abff350287cf190?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/eb802dc73b7381e77abff350287cf190?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">w0rkbean</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-35510">
		December 24, 2008 at 12:56 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=35510#respond' onclick='return addComment.moveForm( "comment-35510", "35510", "respond", "184" )' aria-label='Reply to w0rkbean'> &middot; Reply</a></span>		 
		</div>
		<p>As someone said earlier, it&#8217;s a syntactic convention. I think the reason for that convetion can be explained as &#8221; as we know the function name itself is a pointer to that function just like array name is a pointer to the first element of that array. So if you are equating that pointer to 0 which is a NULL, makes it a NULL pointer&#8221;. So the essence is equating the function to 0 is like defing a NULL  ponter which may point to a a valid address later on&#8221;</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-22328">
		<div id="div-comment-22328" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/6cbac13f0b641ee12b0536e0cf70fba4?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/6cbac13f0b641ee12b0536e0cf70fba4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Sean</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-22328">
		July 30, 2008 at 4:15 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=22328#respond' onclick='return addComment.moveForm( "comment-22328", "22328", "respond", "184" )' aria-label='Reply to Sean'> &middot; Reply</a></span>		 
		</div>
		<p>Great tutorial for interface class,<br />
Thanks a lot!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-23072">
		<div id="div-comment-23072" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/43d1ef868eba221c26cc7d6b9bafc546?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/43d1ef868eba221c26cc7d6b9bafc546?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ben</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-23072">
		August 7, 2008 at 10:55 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=23072#respond' onclick='return addComment.moveForm( "comment-23072", "23072", "respond", "184" )' aria-label='Reply to Ben'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,<br />
in your IErrorLog class all functions are private. As i tried to compile your code, with the MySqrt() function, i discoverd, that the compiler complains about that, so i defined a class inheriting IErrorLong and changing the scope of the functions to public; still the compiler insists not to compile the code. So you might want to change the code. Besides that, can you imagine why a virtual class should ever have private member functions?<br />
Ben</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-26092">
		<div id="div-comment-26092" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d225707c4f5a6080c9c3443c58c66ec0?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d225707c4f5a6080c9c3443c58c66ec0?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.grantandveronika.talktalk.net' rel='external nofollow' class='url'>Grant</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-26092">
		September 3, 2008 at 4:39 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=26092#respond' onclick='return addComment.moveForm( "comment-26092", "26092", "respond", "184" )' aria-label='Reply to Grant'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Ben,</p>
<p>I agree with you, the functions need to be public. My code did compile - the only thing<br />
I needed to be sure about was that the IErrorLog parameter to MySqrt was a pointer or reference.<br />
If it&#8217;s passed by value the compiler tries to instantiate an IErrorLog object which it can&#8217;t do for an abstract class.</p>
<p>Grant</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-68040">
		<div id="div-comment-68040" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/01775f70c76de61f0d5f5f30a1780ac8?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/01775f70c76de61f0d5f5f30a1780ac8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tunc</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-68040">
		September 10, 2009 at 12:51 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=68040#respond' onclick='return addComment.moveForm( "comment-68040", "68040", "respond", "184" )' aria-label='Reply to Tunc'> &middot; Reply</a></span>		 
		</div>
		<p>why compile give me an error &#8220;IErrorLog cannot access private member declared in class &#8220;IErrorLog&#8221;</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-27949">
		<div id="div-comment-27949" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9ff53c2fd0deaeec3d0688bfd1df7895?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9ff53c2fd0deaeec3d0688bfd1df7895?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Balaji</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-27949">
		September 19, 2008 at 10:35 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=27949#respond' onclick='return addComment.moveForm( "comment-27949", "27949", "respond", "184" )' aria-label='Reply to Balaji'> &middot; Reply</a></span>		 
		</div>
		<p>Very good tutorial for beginers,</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-43532">
		<div id="div-comment-43532" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/82fbdd110c1b25f96aadcf5190f11728?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/82fbdd110c1b25f96aadcf5190f11728?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Eugene Wee</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-43532">
		February 13, 2009 at 9:38 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=43532#respond' onclick='return addComment.moveForm( "comment-43532", "43532", "respond", "184" )' aria-label='Reply to Eugene Wee'> &middot; Reply</a></span>		 
		</div>
		<p>A pure virtual function can be defined (as in have a body). One case where that is useful is when the base class implementer wishes to allow derived classes access to some default implementation, but require that concrete derived classes override that member function nonetheless.</p>
<p>[ Thanks, I wasn&#8217;t aware of that.  -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-45732">
		<div id="div-comment-45732" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4e6f45dd99d9077f7e10928dfdb757ea?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4e6f45dd99d9077f7e10928dfdb757ea?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">tvraju</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-45732">
		February 20, 2009 at 10:59 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=45732#respond' onclick='return addComment.moveForm( "comment-45732", "45732", "respond", "184" )' aria-label='Reply to tvraju'> &middot; Reply</a></span>		 
		</div>
		<p>&#8220;First, any class with one or more virtual functions becomes an abstract base class,&#8221;,<br />
the text should be one or more &#8220;pure virtual functions&#8221; instead of virtual functions.</p>
<p>[ Thanks!  It&#8217;s fixed now.  -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-55760">
		<div id="div-comment-55760" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a630e36df9a524903ec8a8bad186cb02?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a630e36df9a524903ec8a8bad186cb02?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">E-man_96@live.com</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-55760">
		April 3, 2009 at 6:50 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=55760#respond' onclick='return addComment.moveForm( "comment-55760", "55760", "respond", "184" )' aria-label='Reply to E-man_96@live.com'> &middot; Reply</a></span>		 
		</div>
		<p>I have read 2 other tutorials and this one is the one that has &#8220;everything&#8221;.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-62222">
		<div id="div-comment-62222" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/aa78201f18de003287a557edecccbea1?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/aa78201f18de003287a557edecccbea1?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sudheer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-62222">
		June 10, 2009 at 5:19 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=62222#respond' onclick='return addComment.moveForm( "comment-62222", "62222", "respond", "184" )' aria-label='Reply to sudheer'> &middot; Reply</a></span>		 
		</div>
		<p>Wonderful tutorial on Pure Virtual functions. Kudos Alex</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-74070">
		<div id="div-comment-74070" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3eda6fcd3204ef285fa52176c28c4d3e?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3eda6fcd3204ef285fa52176c28c4d3e?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://N/A' rel='external nofollow' class='url'>Garrett</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-74070">
		December 11, 2009 at 8:32 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=74070#respond' onclick='return addComment.moveForm( "comment-74070", "74070", "respond", "184" )' aria-label='Reply to Garrett'> &middot; Reply</a></span>		 
		</div>
		<p>Quick nitpick on the HTML in this page - the top of the page with next/previous post lists 7.13 as the next topic instead of 13.1.</p>
<p>P.S.: Excellent website for learning C++.  Thank you very much for providing this resource.  I&#8217;ll be sure to refer people here when appropriate!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-77865">
		<div id="div-comment-77865" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c9e4c7a0a21df87cd853830d2c2e647c?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c9e4c7a0a21df87cd853830d2c2e647c?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">LJ</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-77865">
		February 4, 2010 at 12:02 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=77865#respond' onclick='return addComment.moveForm( "comment-77865", "77865", "respond", "184" )' aria-label='Reply to LJ'> &middot; Reply</a></span>		 
		</div>
		<p>this is definitely the best tutorial i&#8217;ve found so far on c++. great work!<br />
another quick nitpick: the mySqrt function does not take the square root <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-89255">
		<div id="div-comment-89255" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/912e546ea313a12b994c1eac27bc9964?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/912e546ea313a12b994c1eac27bc9964?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.learncpp.com' rel='external nofollow' class='url'>sachin kumar</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-89255">
		July 29, 2010 at 8:41 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=89255#respond' onclick='return addComment.moveForm( "comment-89255", "89255", "respond", "184" )' aria-label='Reply to sachin kumar'> &middot; Reply</a></span>		 
		</div>
		<p>verry good website</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-90958">
		<div id="div-comment-90958" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/95c0b308c5e18b84dfd7f3ee4cf62502?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/95c0b308c5e18b84dfd7f3ee4cf62502?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ricky</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-90958">
		August 26, 2010 at 11:25 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=90958#respond' onclick='return addComment.moveForm( "comment-90958", "90958", "respond", "184" )' aria-label='Reply to ricky'> &middot; Reply</a></span>		 
		</div>
		<p>just a simple program..</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d747c497c6107479225" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d747c497c6107479225-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-2">2</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-4">4</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-6">6</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-8">8</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-10">10</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-12">12</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-14">14</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-16">16</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-18">18</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-20">20</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-22">22</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-24">24</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-26">26</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-28">28</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-30">30</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-32">32</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-34">34</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-36">36</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d747c497c6107479225-38">38</div><div class="crayon-num" data-line="crayon-555d747c497c6107479225-39">39</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d747c497c6107479225-1"><span class="crayon-p">#include "stdafx.h"</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-2"><span class="crayon-p">#include "iostream"</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-3"><span class="crayon-p">#include "conio.h"</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-4"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-6"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">base</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-7"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-8"><span class="crayon-h">	</span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-9"><span class="crayon-h">	</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-10"><span class="crayon-h">	</span><span class="crayon-m">virtual</span><span class="crayon-h"> </span><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">display</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-11"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-12"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-v">base</span><span class="crayon-o">::</span><span class="crayon-e">display</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-13"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-14"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-cn">100</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-15"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">x</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-s">" Display Base"</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-16"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-17"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">derived</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-18"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-19"><span class="crayon-h">	</span><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">display</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-20"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-21"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-v">derived</span><span class="crayon-o">::</span><span class="crayon-e">display</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-22"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-23"><span class="crayon-h">	</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-cn">50</span><span class="crayon-sy">;</span><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">x</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-s">" Display Derived"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-24"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-25"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">_tmain</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">argc</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">_TCHAR</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">argv</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-26"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-27"><span class="crayon-h">	</span><span class="crayon-e">base </span><span class="crayon-v">B1</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-28"><span class="crayon-h">	</span><span class="crayon-e">derived </span><span class="crayon-v">d1</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-29"><span class="crayon-h">	</span><span class="crayon-v">base</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">b1ptr</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-30"><span class="crayon-h">	</span><span class="crayon-v">b1ptr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;B1</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-31"><span class="crayon-h">	</span><span class="crayon-v">b1ptr</span><span class="crayon-o">-&gt;</span><span class="crayon-e">display</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-32">&nbsp;</div><div class="crayon-line" id="crayon-555d747c497c6107479225-33"><span class="crayon-h">	</span><span class="crayon-v">b1ptr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;d1</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-34">&nbsp;</div><div class="crayon-line" id="crayon-555d747c497c6107479225-35"><span class="crayon-h">	</span><span class="crayon-v">b1ptr</span><span class="crayon-o">-&gt;</span><span class="crayon-e">display</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-36"><span class="crayon-h">	</span><span class="crayon-c">//d1.base::display();</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-37"><span class="crayon-h">	</span><span class="crayon-e">getch</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d747c497c6107479225-38"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d747c497c6107479225-39"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0045 seconds] -->
<p>)</p>
<p>my doubt:</p>
<p>How am I able to access the private member of derived class function (**which is private) using base class pointer??</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-94918">
		<div id="div-comment-94918" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/be8bf44c5296a07334b3493c97a99670?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/be8bf44c5296a07334b3493c97a99670?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kathy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-94918">
		November 13, 2010 at 8:54 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=94918#respond' onclick='return addComment.moveForm( "comment-94918", "94918", "respond", "184" )' aria-label='Reply to Kathy'> &middot; Reply</a></span>		 
		</div>
		<p>petrfect tutorial~~</p>
<p>I have learned a lot&#8230;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-95146">
		<div id="div-comment-95146" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/1202b9f3991f8ec2ce94e7ef8fa14392?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/1202b9f3991f8ec2ce94e7ef8fa14392?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">gans</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-95146">
		February 1, 2011 at 3:46 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=95146#respond' onclick='return addComment.moveForm( "comment-95146", "95146", "respond", "184" )' aria-label='Reply to gans'> &middot; Reply</a></span>		 
		</div>
		<p>Hi,<br />
As reply to Ricky&#8217;s question:</p>
<p>In C++ there is also a concept called &#8220;Late binding yet static typing&#8221;. That is<br />
When you have a pointer to object and object is derived from the type of class of type pointer, there are two types,1) type of the pointer: static 2) type of pointed-to-object: dynamic.<br />
Here static typing means, the legality of the function call is determined by the compiler at compile time, since pointer is Base and Base has public virtual function. compiler validates the function calling. but at run time, since you have assigned the derived object address, it resolves the derived function only.</p>
<p>Hope this helps u.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-96892">
		<div id="div-comment-96892" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/28d5a277b7299cb10990c67098d82cad?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/28d5a277b7299cb10990c67098d82cad?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">spartan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-96892">
		January 30, 2012 at 8:43 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=96892#respond' onclick='return addComment.moveForm( "comment-96892", "96892", "respond", "184" )' aria-label='Reply to spartan'> &middot; Reply</a></span>		 
		</div>
		<p>Simply awesome</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-96905">
		<div id="div-comment-96905" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/35333278c4a4fd22f7b5dec509cb0484?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/35333278c4a4fd22f7b5dec509cb0484?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">saurabh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-96905">
		February 5, 2012 at 4:16 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=96905#respond' onclick='return addComment.moveForm( "comment-96905", "96905", "respond", "184" )' aria-label='Reply to saurabh'> &middot; Reply</a></span>		 
		</div>
		<p>I learned a lot from your tutorials and kudos to you</p>
<p>It will be great if you can add two more topics to this chapter</p>
<p>1) We can define body for a pure virtual function so please add when, why and how ?<br />
2) Please add virtual table view for abstract class why compiler not letting us to instantiate abstract class or i should say class having and pure virtual function</p>
<p>Here is my views:<br />
we can not  make object of abstract class because, in the vtable the vtable entry for the abstract class functions will be NULL, even if there is a single pure virtual function in the class the class becomes as abstract class.Even if there is a single NULL entry in the function table the compiler does not allow to create the object.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-96954">
		<div id="div-comment-96954" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d705c0d5a1a9de5683d9fad03c08878f?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d705c0d5a1a9de5683d9fad03c08878f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">bantoo011</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-96954">
		February 13, 2012 at 9:55 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=96954#respond' onclick='return addComment.moveForm( "comment-96954", "96954", "respond", "184" )' aria-label='Reply to bantoo011'> &middot; Reply</a></span>		 
		</div>
		<p>How is the vtable for abstract &amp; interface class looks like ?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-97837">
		<div id="div-comment-97837" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f5c2933d064702509dd7ed46da0fc42d?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f5c2933d064702509dd7ed46da0fc42d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">warzix</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-97837">
		October 2, 2012 at 8:04 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=97837#respond' onclick='return addComment.moveForm( "comment-97837", "97837", "respond", "184" )' aria-label='Reply to warzix'> &middot; Reply</a></span>		 
		</div>
		<p>Great article, although I should add one comment about the Interface class definition: </p>
<p>&#8220;An interface class is a class that has no members variables, and where all of the functions are pure virtual! In other words, the class is purely a definition, and has no actual implementation.&#8221;</p>
<p>Effectively, my comment is after the example below: </p>
<p>Suppose you define the following Interface</p>
<p>class ISomething {<br />
public:<br />
   virtual void doStuff1() = 0;<br />
   //&#8230; bunch of other definitions<br />
};</p>
<p>and you have a class that implements it:</p>
<p>class Impl : public ISomething {<br />
private:<br />
    char* myCharPtr;<br />
public:<br />
    void doStuff1() { /* do &#8216;stuff&#8217; */ };<br />
    // implement all other stuff<br />
    /* Constructor that allocates memory */<br />
    Impl() { myCharPtr = new char[10]; }<br />
    /* Destructor that deallocates memory */<br />
    ~Impl() { delete[] myCharPtr; }<br />
}; </p>
<p>void main()<br />
{<br />
   ISomething* ptr = new Impl; //upcasting. ISomething pointer points to Impl object&#8230; </p>
<p>   delete ptr; //cleaning up memory&#8230;<br />
   // This effectivelly invokes the default destructor on ISomething which is not virtual and therefore would not resolve to ~Impl()<br />
   // therefore this can lead to memory leaks (as shown in the example) or any other problems related to missing destructor calls.<br />
}</p>
<p>I think it is worth a comment about that right after the phrase I&#8217;ve quoted such as:<br />
&#8220;The only exception is the destructor which should be virtual and implemented if the Interface is supposed to be used as a &#8220;placeholder&#8221; for pointers to derived classes&#8217; objects&#8230;&#8221;. </p>
<p>Best Regards</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-251028">
		<div id="div-comment-251028" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3f9b15fb70a3f68f99d8315f2311ae6e?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3f9b15fb70a3f68f99d8315f2311ae6e?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mariya</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-251028">
		January 1, 2015 at 5:48 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=251028#respond' onclick='return addComment.moveForm( "comment-251028", "251028", "respond", "184" )' aria-label='Reply to Mariya'> &middot; Reply</a></span>		 
		</div>
		<p>How can we call a function with an argument of type reference to an object of an interface class if interface classes could not be instantiated? (I mean the example you give with the reference to IErrorLog.)</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-251533">
		<div id="div-comment-251533" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e0ea10e1b1c507a9b1c86bc88b0cdec7?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e0ea10e1b1c507a9b1c86bc88b0cdec7?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.learncpp.com' rel='external nofollow' class='url'>shani khan</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#comment-251533">
		February 17, 2015 at 9:23 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/?replytocom=251533#respond' onclick='return addComment.moveForm( "comment-251533", "251533", "respond", "184" )' aria-label='Reply to shani khan'> &middot; Reply</a></span>		 
		</div>
		<p>for what purpose why we use abstract classes ????</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>1 &#215; 4 = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4ODAyOHR5bTdtZjVxZ3o3ZGJwYWozMW04NA==" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432188028" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='184' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="041c2dab60" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="160"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/126-pure-virtual-functions-abstract-base-classes-and-interface-classes\/":184};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/126-pure-virtual-functions-abstract-base-classes-and-interface-classes/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'184',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '184' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.770 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:00:28 -->

<!-- Compression = gzip -->
<!-- super cache -->

