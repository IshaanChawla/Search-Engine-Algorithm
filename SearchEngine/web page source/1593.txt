<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>6.7 &#8212; Introduction to pointers &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 6.7 &#8212; Introduction to pointers Comments Feed" href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"119.158.53.12","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/67-introduction-to-pointers\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='A PHP script to unzip files with file overwriting' href='http://www.learncpp.com/general-programming/a-php-script-to-unzip-files-with-file-overwriting/' />
<link rel='next' title='6.8 &#8212; Pointers, arrays, and pointer arithmetic' href='http://www.learncpp.com/cpp-tutorial/68-pointers-arrays-and-pointer-arithmetic/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=99' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="6.7 -- Introduction to pointers" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/" />
<meta property="og:description" content="Pointers are one of the most powerful and confusing aspects of the C language. A pointer is a variable that holds the address of another variable. To declare a pointer, we use an asterisk between t..." />
<meta property="article:published_time" content="2007-07-11T02:52:36+00:00" />
<meta property="article:modified_time" content="2007-07-11T02:52:36+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/Section6/Section6-Pointer.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/Section6/Section6-Pointer.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-99 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-99 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-99">
						<div class="post-headline">		<h1>6.7 &#8212; Introduction to pointers</h1>
		</div>		<div class="post-byline">By Alex, on July 10th, 2007</div>		<div class="post-bodycopy clearfix"><p>Pointers are one of the most powerful and confusing aspects of the C language.  A <strong>pointer</strong> is a variable that holds the address of another variable.  To declare a pointer, we use an asterisk between the data type and the variable name:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8b67517034822" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8b67517034822-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b67517034822-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8b67517034822-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b67517034822-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8b67517034822-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8b67517034822-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// a pointer to an integer value</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b67517034822-2"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pdPtr</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// a pointer to a double value</span></div><div class="crayon-line" id="crayon-555d7629d8b67517034822-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b67517034822-4"><span class="crayon-t">int</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr2</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// also valid syntax</span></div><div class="crayon-line" id="crayon-555d7629d8b67517034822-5"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr3</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// also valid syntax</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>Note that an asterisk placed between the data type and the variable name means the variable is being declared as a pointer.  In this context, the asterisk is not a multiplication.  It does not matter if the asterisk is placed next to the data type, the variable name, or in the middle -- different programmers prefer different styles, and one is not inherently better than the other.</p>
<p>Since pointers only hold addresses, when we assign a value to a pointer, the value has to be an address.  To get the address of a variable, we can use the <strong>address-of operator (&#038;)</strong>:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8b79978589978" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8b79978589978-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b79978589978-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8b79978589978-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b79978589978-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// assign address of nValue to pnPtr</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>Conceptually, you can think of the above snippet like this:<br />
<img src="http://www.learncpp.com/images/CppTutorial/Section6/Section6-Pointer.png"></p>
<p>It is also easy to see using code:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8b80871597119" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8b80871597119-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b80871597119-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8b80871597119-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b80871597119-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8b80871597119-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8b80871597119-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b80871597119-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// assign address of nValue to pnPtr</span></div><div class="crayon-line" id="crayon-555d7629d8b80871597119-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b80871597119-4"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// print the address of variable nValue</span></div><div class="crayon-line" id="crayon-555d7629d8b80871597119-5"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// print the address that pnPtr is holding</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>On the author&#8217;s machine, this printed:</p>
<pre>
0012FF7C
0012FF7C
</pre>
<p>The type of the pointer has to match the type of the variable being pointed to:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8b86920135835" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8b86920135835-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b86920135835-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8b86920135835-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b86920135835-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8b86920135835-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b86920135835-6">6</div><div class="crayon-num" data-line="crayon-555d7629d8b86920135835-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8b86920135835-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b86920135835-2"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">7.0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8b86920135835-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b86920135835-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// ok</span></div><div class="crayon-line" id="crayon-555d7629d8b86920135835-5"><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pdPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;dValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// ok</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b86920135835-6"><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;dValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// wrong -- int pointer can not point to double value</span></div><div class="crayon-line" id="crayon-555d7629d8b86920135835-7"><span class="crayon-v">pdPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// wrong -- double pointer can not point to int value</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p><strong>Dereferencing pointers</strong></p>
<p>The other operator that is commonly used with pointers is the <strong>dereference operator (*)</strong>.  A dereferenced pointer evaluates to the <i>contents</i> of the address it is pointing to.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8b9b836640371" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8b9b836640371-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b9b836640371-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8b9b836640371-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b9b836640371-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8b9b836640371-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8b9b836640371-6">6</div><div class="crayon-num" data-line="crayon-555d7629d8b9b836640371-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8b9b836640371-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b9b836640371-2"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints address of nValue</span></div><div class="crayon-line" id="crayon-555d7629d8b9b836640371-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints contents of nValue</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b9b836640371-4">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8b9b836640371-5"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// pnPtr points to nValue</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8b9b836640371-6"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints address held in pnPtr, which is &amp;nValue</span></div><div class="crayon-line" id="crayon-555d7629d8b9b836640371-7"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints contents pointed to by pnPtr, which is contents of nValue</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p>The above program prints:</p>
<pre>
0012FF7C
5
0012FF7C
5
</pre>
<p>In other words, when pnPtr is assigned to &#038;nValue:<br />
pnPtr is the same as &#038;nValue<br />
*pnPtr is the same as nValue</p>
<p>Because *pnPtr is the same as nValue, you can assign values to it just as if it were nValue!  The following program prints <code>7</code>:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8ba3801901120" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8ba3801901120-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8ba3801901120-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8ba3801901120-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8ba3801901120-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8ba3801901120-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8ba3801901120-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8ba3801901120-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// pnPtr points to nValue</span></div><div class="crayon-line" id="crayon-555d7629d8ba3801901120-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8ba3801901120-4"><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// *pnPtr is the same as nValue, which is assigned 7</span></div><div class="crayon-line" id="crayon-555d7629d8ba3801901120-5"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints 7</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>Pointers can also be assigned and reassigned:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8baa242956547" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8baa242956547-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8baa242956547-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8baa242956547-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8baa242956547-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8baa242956547-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8baa242956547-6">6</div><div class="crayon-num" data-line="crayon-555d7629d8baa242956547-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8baa242956547-8">8</div><div class="crayon-num" data-line="crayon-555d7629d8baa242956547-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8baa242956547-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8baa242956547-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8baa242956547-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8baa242956547-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8baa242956547-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8baa242956547-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8baa242956547-6"><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue1</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// pnPtr points to nValue1</span></div><div class="crayon-line" id="crayon-555d7629d8baa242956547-7"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints 5</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8baa242956547-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8baa242956547-9"><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue2</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// pnPtr now points to nValue2</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8baa242956547-10"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints 7</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p><strong>The null pointer</strong></p>
<p>Sometimes it is useful to make our pointers point to nothing.  This is called a <strong>null pointer</strong>.  We assign a pointer a null value by setting it to address 0:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8bb0956775320" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8bb0956775320-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bb0956775320-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8bb0956775320-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bb0956775320-2"><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// assign address 0 to pnPtr</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>or shorthand:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8bb7550969542" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8bb7550969542-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8bb7550969542-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// assign address 0 to pnPtr</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>Note that in the last example, the * is not a dereference operator.  It is a pointer declaration.  Thus we are assigning address 0 to pnPtr, not the value 0 to the variable that pnPtr points to.</p>
<p>C (but not C++) also defines a special preprocessor define called NULL that evaluates to 0.  Even though this is not technically part of C++, it&#8217;s usage is common enough that it will work in every C++ compiler:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8bbd497507728" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8bbd497507728-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8bbd497507728-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">NULL</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// assign address 0 to pnPtr</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Because null pointers point to 0, they can be used inside conditionals:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8bc3143688458" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8bc3143688458-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bc3143688458-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8bc3143688458-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bc3143688458-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8bc3143688458-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bc3143688458-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pnPtr is pointing to an integer."</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bc3143688458-3"><span class="crayon-st">else</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bc3143688458-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pnPtr is a null pointer."</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0013 seconds] -->
<p></p>
<p>Null pointers are mostly used with dynamic memory allocation, which we will talk about in a few lessons.</p>
<p><strong>The size of pointers</strong></p>
<p>The size of a pointer is dependent upon the architecture of the computer -- a 32-bit computer uses 32-bit memory addresses -- consequently, a pointer on a 32-bit machine is 32 bits (4 bytes).  On a 64-bit machine, a pointer would be 64 bits (8 bytes).  Note that this is true regardless of what is being pointed to:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8bca583899792" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8bca583899792-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bca583899792-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8bca583899792-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bca583899792-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8bca583899792-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bca583899792-6">6</div><div class="crayon-num" data-line="crayon-555d7629d8bca583899792-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bca583899792-8">8</div><div class="crayon-num" data-line="crayon-555d7629d8bca583899792-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bca583899792-10">10</div><div class="crayon-num" data-line="crayon-555d7629d8bca583899792-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8bca583899792-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pchValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// chars are 1 byte</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bca583899792-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// ints are usually 4 bytes</span></div><div class="crayon-line" id="crayon-555d7629d8bca583899792-3"><span class="crayon-t">struct</span><span class="crayon-h"> </span><span class="crayon-e">Something</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bca583899792-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7629d8bca583899792-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nZ</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bca583899792-6"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bca583899792-7"><span class="crayon-v">Something</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">psValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// Something is probably 12 bytes</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bca583899792-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bca583899792-9"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">pchValue</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints 4</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bca583899792-10"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">pnValue</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints 4</span></div><div class="crayon-line" id="crayon-555d7629d8bca583899792-11"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">psValue</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints 4</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0038 seconds] -->
<p></p>
<p>As you can see, the size of the pointer is always the same.  This is because a pointer is just a memory address, and the number of bits needed to access a memory address on a given machine is always constant.</p>
<p><strong>Quiz</strong></p>
<p>1) What values does this program print?  Assume a short is 2 bytes, and a 32-bit machine</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629d8bd1194458990" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-2">2</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-4">4</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-6">6</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-8">8</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-10">10</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-12">12</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-14">14</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-16">16</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-18">18</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-20">20</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-22">22</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-24">24</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-26">26</div><div class="crayon-num" data-line="crayon-555d7629d8bd1194458990-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629d8bd1194458990-28">28</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629d8bd1194458990-1"><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// &amp;nValue = 0012FF60</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-2"><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-v">nOtherValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// &amp;nOtherValue = 0012FF54</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-3"><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-4">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-5"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-6"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-7"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-8"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-9"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-10">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-11"><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">9</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-12">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-13"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-14"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-15"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-16"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-17"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-18">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-19"><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nOtherValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-20">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-21"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nOtherValue </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-22"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nOtherValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-23"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-24"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-25"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-26">&nbsp;</div><div class="crayon-line" id="crayon-555d7629d8bd1194458990-27"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629d8bd1194458990-28"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0090 seconds] -->
<p></p>
<p><strong>Quiz solutions</strong></p>
<p>1) <a class="solution_link_show" href="javascript:void(0)" onclick="wpSolutionToggle(document.getElementById('id603863193'), this, 'Show Solution', 'Hide Solution')">Show Solution</a></p>
<div class="solution_div" id="id603863193" style="display:none">
<pre>
0012FF60
7
0012FF60
7

0012FF60
9
0012FF60
9

0012FF54
3
0012FF54
3

4
2
</pre>
<p>A short explanation about the 4 and the 2.  A 32-bit machine means that pointers will be 32 bits in length, but sizeof() always prints the size in bytes.  32 bits is 4 bytes.  Thus the sizeof(pnPtr) is 4.  Because pnPtr is a pointer to a short, *pnPtr is a short.  The size of a short in this example is 2 bytes.  Thus the sizeof(*pnPtr) is 2.
</p></div>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/68-pointers-arrays-and-pointer-arithmetic/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 6.8 -- Pointers, arrays, and pointer arithmetic</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter6" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 6.6 -- C-style strings</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-99" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-99" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-99" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-99" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">29 comments to 6.7 &#8212; Introduction to pointers</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-5018">
		<div id="div-comment-5018" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/66ac6df2d5b3175463af0df308d3c747?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/66ac6df2d5b3175463af0df308d3c747?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Cody</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-5018">
		December 26, 2007 at 9:38 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=5018#respond' onclick='return addComment.moveForm( "comment-5018", "5018", "respond", "99" )' aria-label='Reply to Cody'> &middot; Reply</a></span>		 
		</div>
		<p>In the code</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dc9f2323424131" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dc9f2323424131-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dc9f2323424131-2">2</div><div class="crayon-num" data-line="crayon-555d7629dc9f2323424131-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dc9f2323424131-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dc9f2323424131-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">pnPtr</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dc9f2323424131-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pnPtr is pointing to an integer."</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629dc9f2323424131-3"><span class="crayon-st">else</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dc9f2323424131-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span>"<span class="crayon-e">pnPtr </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-t">null</span><span class="crayon-h"> </span><span class="crayon-v">pointer</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>you forgot the second double quotation mark and a semicolon.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-7143">
		<div id="div-comment-7143" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/65517b5a29bb537453c0fcc2ee00c155?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/65517b5a29bb537453c0fcc2ee00c155?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Skylark</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-7143">
		February 3, 2008 at 3:17 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=7143#respond' onclick='return addComment.moveForm( "comment-7143", "7143", "respond", "99" )' aria-label='Reply to Skylark'> &middot; Reply</a></span>		 
		</div>
		<p>*gets headache*</p>
<p>Well, that was almost fun to read!</p>
<p>What exactly is the POINT of a pointer? So far I&#8217;m just thinking of pointers as duplicates of other variables with similar functionality.</p>
<p>You can determine the address of a value a pointer is &#8216;pointing&#8217; to, but can&#8217;t you just use the &#8216;&#038;&#8217; operator to do that anyway?</p>
<p>I don&#8217;t understand whyyyy! T^T</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-7160">
		<div id="div-comment-7160" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-7160">
		February 3, 2008 at 11:18 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=7160#respond' onclick='return addComment.moveForm( "comment-7160", "7160", "respond", "99" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>Setting a pointer to point at local non-array variable is an easy way to introduce pointers, but it&#8217;s not done all that often in practice.</p>
<p>Pointers are used for a lot of things:<br />
1) They are the only way you can dynamically allocate memory in C++.  This is by far their most common use.  This topic is covered in lesson 6.9.<br />
2) You can use them to step through the values in an array (as an alternative to array indices).<br />
3) You can use them to pass a large struct/class to a function in a way that doesn&#8217;t involve copying the entire struct/class, which is inefficient (covered in lesson 7.4)<br />
4) You can use them to pass a function as a parameter to another function (covered in lesson 7.8).<br />
5) You can use them to achieve polymorphism when dealing with inheritance (covered in lesson 12.1).</p>
<p>All of these things are covered in future lessons, but you&#8217;ve got to start somewhere.  And this is where. <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-8549">
		<div id="div-comment-8549" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3a4a81b7f0acc25fcc9e7cd41565033d?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3a4a81b7f0acc25fcc9e7cd41565033d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Aaron</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-8549">
		February 26, 2008 at 8:13 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=8549#respond' onclick='return addComment.moveForm( "comment-8549", "8549", "respond", "99" )' aria-label='Reply to Aaron'> &middot; Reply</a></span>		 
		</div>
		<p>Example is wrong. Look at cody&#8217;s comment above.</p>
<p>[ How did I miss that?  Wow.  Thanks, it&#8217;s fixed. -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-31582">
		<div id="div-comment-31582" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/8285c447e9d29d3c64879985cebbce62?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/8285c447e9d29d3c64879985cebbce62?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Sakthi Sai Saranyan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-31582">
		November 4, 2008 at 12:55 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=31582#respond' onclick='return addComment.moveForm( "comment-31582", "31582", "respond", "99" )' aria-label='Reply to Sakthi Sai Saranyan'> &middot; Reply</a></span>		 
		</div>
		<p>Very good tutorial. At last I could understand Pointers. <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-32178">
		<div id="div-comment-32178" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/142d9165d6a17f173f9dd0ef26fb98fc?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/142d9165d6a17f173f9dd0ef26fb98fc?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Darren Fuller</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-32178">
		November 16, 2008 at 2:08 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=32178#respond' onclick='return addComment.moveForm( "comment-32178", "32178", "respond", "99" )' aria-label='Reply to Darren Fuller'> &middot; Reply</a></span>		 
		</div>
		<p>Thank you, for the first time I&#8217;ve read something about pointers and it all makes sense and surprisingly easy going compared to other texts I&#8217;ve read.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-38946">
		<div id="div-comment-38946" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c4bb223d7260773ac25d24b70ebe13a2?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c4bb223d7260773ac25d24b70ebe13a2?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">chkwa</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-38946">
		January 24, 2009 at 7:53 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=38946#respond' onclick='return addComment.moveForm( "comment-38946", "38946", "respond", "99" )' aria-label='Reply to chkwa'> &middot; Reply</a></span>		 
		</div>
		<p>if pointer holds the address of a variable, what if i want to know the pointer&#8217;s address it self how can i do that?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor odd alt depth-2 clearfix" id="comment-41994">
		<div id="div-comment-41994" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-41994">
		February 5, 2009 at 11:55 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=41994#respond' onclick='return addComment.moveForm( "comment-41994", "41994", "respond", "99" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>You can use the &#038; operator to get the address of any variable (even a pointer).</p>
<p>eg.<br />
int nX = 3; // nX has address 0x0012ff60.  nX has value 3.<br />
int *pnX = &nX; // pnX has address 0012ff54.  pnX has value 0x0012ff60<br />
cout << pnX; // prints value of pnX, which is 0x0012ff60<br />
cout << &pnX; // prints address of pnX which is 0x0012ff54</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-60191">
		<div id="div-comment-60191" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/10dc9f8052d5a4b080c620a4467e54f7?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/10dc9f8052d5a4b080c620a4467e54f7?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">csvan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-60191">
		May 7, 2009 at 7:41 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=60191#respond' onclick='return addComment.moveForm( "comment-60191", "60191", "respond", "99" )' aria-label='Reply to csvan'> &middot; Reply</a></span>		 
		</div>
		<p>I believe there is an error in the last example in the section &#8220;the null pointer&#8221; here: did you not mean to dereference the pointer inside the if-condition, in order to check wether or not it points to anything? Right now it is written without a dereference operator.</p>
<p>Keep coding. Use it for good <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-66267">
		<div id="div-comment-66267" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-66267">
		August 14, 2009 at 10:35 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=66267#respond' onclick='return addComment.moveForm( "comment-66267", "66267", "respond", "99" )' aria-label='Reply to baldo'> &middot; Reply</a></span>		 
		</div>
		<p>The if (pnPtr) test to see if the pointer is null. If it is a null pointer then the address it is pointing is 0 (false). If the pointer is allocated (not null) then pnPtr points to a address != 0 (which means true).</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-60614">
		<div id="div-comment-60614" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/b6c14c22587219b74e5b4428ff817018?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/b6c14c22587219b74e5b4428ff817018?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Hamza K</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-60614">
		May 12, 2009 at 4:58 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=60614#respond' onclick='return addComment.moveForm( "comment-60614", "60614", "respond", "99" )' aria-label='Reply to Hamza K'> &middot; Reply</a></span>		 
		</div>
		<p>I don&#8217;t understand this statement, shouldn&#8217;t it be the other way around?:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dc68e632248214" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dc68e632248214-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dc68e632248214-1"><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// assign address 0 to pnPtr </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p>&#8220;Note that in the last example, the * is not a dereference operator. It is a pointer declaration. Thus we are assigning address 0 to pnPtr, not the value 0 to the variable that pnPtr points to.&#8221;</p>
<p>When I use the following code:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dc698455208074" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dc698455208074-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dc698455208074-2">2</div><div class="crayon-num" data-line="crayon-555d7629dc698455208074-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dc698455208074-1"><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dc698455208074-2"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;pnPtr </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7629dc698455208074-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>I get the output<br />
0013FF60<br />
00000000</p>
<p>surely the address is 0013FF&#8230; and the value is 000? </p>
<p>Many thanks for the tutorials though, they&#8217;re amazing, you&#8217;re a saint!</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-61674">
		<div id="div-comment-61674" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a212015c89f07e11f4797a6600a20696?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a212015c89f07e11f4797a6600a20696?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Simon Kazakov</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-61674">
		May 29, 2009 at 10:57 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=61674#respond' onclick='return addComment.moveForm( "comment-61674", "61674", "respond", "99" )' aria-label='Reply to Simon Kazakov'> &middot; Reply</a></span>		 
		</div>
		<p>The statement is okey. Assigning an address to a pointer means that u tell the pointer: &#8220;Point to this address&#8221;. This is done with the &#8220;&amp;&#8221;.</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dc57a725124923" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dc57a725124923-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dc57a725124923-2">2</div><div class="crayon-num" data-line="crayon-555d7629dc57a725124923-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dc57a725124923-1"><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dc57a725124923-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">ptr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;a</span><span class="crayon-sy">;</span><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-555d7629dc57a725124923-3"><span class="crayon-c">// the * is not a dereference operator. It is a pointer declaration.&lt;!--formatted--&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p>U can change the value of the pointed object with &#8220;*&#8221;.</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dc584112411605" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dc584112411605-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dc584112411605-1"><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">ptr</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// changes a to 8 </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>The pointer itself is a variable that has an address. It is impossible to have a variable at 0000 0000.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even depth-2 clearfix" id="comment-66268">
		<div id="div-comment-66268" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-66268">
		August 14, 2009 at 10:44 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=66268#respond' onclick='return addComment.moveForm( "comment-66268", "66268", "respond", "99" )' aria-label='Reply to baldo'> &middot; Reply</a></span>		 
		</div>
		<p>00000000 is not the value. See this:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dc46b430992992" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dc46b430992992-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dc46b430992992-2">2</div><div class="crayon-num" data-line="crayon-555d7629dc46b430992992-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dc46b430992992-1"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;pnPtr </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// will print the address of the pointer (0013FF60)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dc46b430992992-2"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span><span class="crayon-c">// will print the address that the pointer points to (00000000)</span></div><div class="crayon-line" id="crayon-555d7629dc46b430992992-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnPtr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// will print the value of the address that the pointer points to</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p>Because the pointer is null, it is pointing to address 00000000. The address of the pointer is 0013FF60.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-91263">
		<div id="div-comment-91263" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/437bcc562ca69a87f854944afe332a0a?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/437bcc562ca69a87f854944afe332a0a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://blog.x14n.org' rel='external nofollow' class='url'>xian</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-91263">
		September 1, 2010 at 9:56 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=91263#respond' onclick='return addComment.moveForm( "comment-91263", "91263", "respond", "99" )' aria-label='Reply to xian'> &middot; Reply</a></span>		 
		</div>
		<p>This is a wonderful tutorial - the examples here clearly step through all possible pointer/pointed-to configurations.  Thanks so much!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-95120">
		<div id="div-comment-95120" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">SWEngineer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-95120">
		January 22, 2011 at 8:29 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=95120#respond' onclick='return addComment.moveForm( "comment-95120", "95120", "respond", "99" )' aria-label='Reply to SWEngineer'> &middot; Reply</a></span>		 
		</div>
		<p>Simple well explained tutorial.</p>
<p>Thanks a lot.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-95533">
		<div id="div-comment-95533" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/7508d613e89f8c65ecfa0c37377852ba?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/7508d613e89f8c65ecfa0c37377852ba?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">capitanui</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-95533">
		June 7, 2011 at 4:28 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=95533#respond' onclick='return addComment.moveForm( "comment-95533", "95533", "respond", "99" )' aria-label='Reply to capitanui'> &middot; Reply</a></span>		 
		</div>
		<p>I have a question &#8230;i cannot understand something.<br />
I have this simple code :</p>
<p>int *pValue;<br />
*pValue = 4;<br />
cout&lt;&lt;*pValue;</p>
<p>It&#039;s all ok..it prints 4;</p>
<p>I i declare another one my program crushes and i cannot understand why since is the same thing.</p>
<p>int *pValue, *nValue;</p>
<p>*pValue = 4;<br />
*nValue = 5;</p>
<p>cout&lt;&lt;*pValue&lt;&lt;*nValue;</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-95535">
		<div id="div-comment-95535" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://127.0.0.1/' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-95535">
		June 7, 2011 at 4:00 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=95535#respond' onclick='return addComment.moveForm( "comment-95535", "95535", "respond", "99" )' aria-label='Reply to zingmars'> &middot; Reply</a></span>		 
		</div>
		<p>Something must be wrong, because the first code in which you declare only one pointer crashes too.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-95537">
		<div id="div-comment-95537" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e7d3cbfcb754aef74a99189be6b5f303?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e7d3cbfcb754aef74a99189be6b5f303?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Shreevardhan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-95537">
		June 8, 2011 at 1:22 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=95537#respond' onclick='return addComment.moveForm( "comment-95537", "95537", "respond", "99" )' aria-label='Reply to Shreevardhan'> &middot; Reply</a></span>		 
		</div>
		<p>No memory allocated.  That is why it crashes.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-97542">
		<div id="div-comment-97542" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2ab4f98340c20598187672f8de9b6ef8?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2ab4f98340c20598187672f8de9b6ef8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ollie999</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-97542">
		June 22, 2012 at 7:02 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=97542#respond' onclick='return addComment.moveForm( "comment-97542", "97542", "respond", "99" )' aria-label='Reply to Ollie999'> &middot; Reply</a></span>		 
		</div>
		<p>on my computer (windows 7 64-bit) sizeof(pntr) returns 4 when I was expecting it to return 8 based on this tutorial. Does anyone know why this is?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-97543">
		<div id="div-comment-97543" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2ab4f98340c20598187672f8de9b6ef8?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2ab4f98340c20598187672f8de9b6ef8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ollie999</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-97543">
		June 22, 2012 at 7:13 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=97543#respond' onclick='return addComment.moveForm( "comment-97543", "97543", "respond", "99" )' aria-label='Reply to Ollie999'> &middot; Reply</a></span>		 
		</div>
		<p>Also my computer has 8gb of ram so if pointers are only 32-bit for some reason then surely only half the computers memory could be used? I don&#8217;t get it.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-98185">
		<div id="div-comment-98185" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3f8c68ea1a9c810451ef982c658f9a91?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3f8c68ea1a9c810451ef982c658f9a91?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">voi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-98185">
		February 15, 2013 at 4:00 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=98185#respond' onclick='return addComment.moveForm( "comment-98185", "98185", "respond", "99" )' aria-label='Reply to voi'> &middot; Reply</a></span>		 
		</div>
		<p>I am working on MS visual Studio 2010. OS is win7. What I know is win7 is 64 bit OS. yet I get pointer size as 4. Why it is not 8?</p>
<p>int* A;<br />
cout&lt;&lt;&quot;\nSize of memory address is&quot;&lt;&lt;sizeof(A);</p>
<p>Output is:<br />
Size of memory address is4</p>
<p>Thanks for answer.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-252405">
		<div id="div-comment-252405" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/dfc3b2964efc6f152b4fcef98c94a4a9?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/dfc3b2964efc6f152b4fcef98c94a4a9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Arduino_User</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-252405">
		May 11, 2015 at 11:31 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=252405#respond' onclick='return addComment.moveForm( "comment-252405", "252405", "respond", "99" )' aria-label='Reply to Arduino_User'> &middot; Reply</a></span>		 
		</div>
		<p>This is a bit late, but maybe future readers will find it useful&#8230; You need a 64 bit application to have a 64 bit pointer size. Standard applications in Visual Studio are 32 bits and these cannot use 64 bit pointers.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-115262">
		<div id="div-comment-115262" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c01126343a3ceb293f110e0da2c58cd1?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c01126343a3ceb293f110e0da2c58cd1?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">KILLDOZER</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-115262">
		December 28, 2013 at 12:25 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=115262#respond' onclick='return addComment.moveForm( "comment-115262", "115262", "respond", "99" )' aria-label='Reply to KILLDOZER'> &middot; Reply</a></span>		 
		</div>
		<p>Hey, Alex. I just wanted to let you know I really appreciate you not only giving away all this knowledge without asking in return, but doing so in such a well structured way. In my book, this makes you an admirable person. On a sideline, with the knowledge I&#8217;ve acquired thus far, I started making a text-based dungeon crawler. I&#8217;ve already made functions which can generate a random map, and draw it using X&#8217;s &amp; whitespaces. I&#8217;m confident that it will turn out fairly nicely, and it&#8217;s all thanks to you.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-155264">
		<div id="div-comment-155264" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/0391eb587a7c7f31bac37f8b11dbe5b8?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/0391eb587a7c7f31bac37f8b11dbe5b8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">alexlydiate</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-155264">
		June 26, 2014 at 8:19 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=155264#respond' onclick='return addComment.moveForm( "comment-155264", "155264", "respond", "99" )' aria-label='Reply to alexlydiate'> &middot; Reply</a></span>		 
		</div>
		<p>This is a beautifully clear explanation - many thanks.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-155679">
		<div id="div-comment-155679" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/395fe384813ca1c614731e982f584dd2?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/395fe384813ca1c614731e982f584dd2?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">papagym177</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-155679">
		June 27, 2014 at 7:46 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=155679#respond' onclick='return addComment.moveForm( "comment-155679", "155679", "respond", "99" )' aria-label='Reply to papagym177'> &middot; Reply</a></span>		 
		</div>
		<p>Unless I missed something in the context or content of this section.  </p>
<p>Why did they call (*) a &#8220;Dereferencing Operator&#8221;?  I&#8217;d call it a &#8220;reference operator&#8221;, it refers to (points to) the address of another variables location.  That address does not go away (get dereferenced) until the close of the statement it&#8217;s in. The closing brace (}). Did I miss something?</p>
<p>Text from lesson attached below in &#8221; &#8220;.</p>
<p>&#8221; int nValue = 5; int *pnPtr = &amp;nValue; // pnPtr points to nValue   *pnPtr = 7; // *pnPtr is the same as nValue, which is assigned 7 cout &lt;&lt; nValue; // prints 7 </p>
<p>Pointers can also be assigned and reassigned:&quot;</p>
<p>The code above the last sentence should be moved somewhere below the Pointer sentence since it refers to the code that&#039;s written below it.<br />
You say pointers can be assigned and reassigned.  Does that mean that they are not always local but are used for global situations as well.</p>
<p>Sorry again for being your critic. We can see that you&#039;ve done an outstanding job here.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-251417">
		<div id="div-comment-251417" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/645fec61ca4283ea470dbe0ea50f6567?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/645fec61ca4283ea470dbe0ea50f6567?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Joseph</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-251417">
		February 8, 2015 at 8:26 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=251417#respond' onclick='return addComment.moveForm( "comment-251417", "251417", "respond", "99" )' aria-label='Reply to Joseph'> &middot; Reply</a></span>		 
		</div>
		<p>For being simple, clear, well-explained and easy to understand, I still don&#8217;t get pointers.<br />
I get that they have purpose and are extremely useful in large applications, I just can&#8217;t wrap my head around the way they&#8217;re used.<br />
Just seeing a pointer makes me super confused and a little angry that I can&#8217;t understand them as easily as everyone else does.</p>
<p>I&#8217;ll try going through this section a few more times to see if it helps.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-251713">
		<div id="div-comment-251713" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d6567d9562632fef842142b5398c7474?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d6567d9562632fef842142b5398c7474?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='https://itwilldotech.wordpress.com' rel='external nofollow' class='url'>ItWillDo</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-251713">
		March 4, 2015 at 5:04 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=251713#respond' onclick='return addComment.moveForm( "comment-251713", "251713", "respond", "99" )' aria-label='Reply to ItWillDo'> &middot; Reply</a></span>		 
		</div>
		<p>Hey guys, </p>
<p>For the ones who are still a little bit in doubt about pointers, I wrote a guide about it on my blog ( I referenced this site on it). I used to be confused about them as well, until the logic finally hit me. This is why I want to try to help others gain a better understanding about it as well: </p>
<p>https://itwilldotech.wordpress.com/2015/03/05/cc-pointer-confusion-how-do-pointers-work-enlightenment-guide/</p>
<p>Kind regards,</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-252003">
		<div id="div-comment-252003" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/adcc92ca5bce488ddd2e09cfb8a236f0?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/adcc92ca5bce488ddd2e09cfb8a236f0?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Julie</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-252003">
		March 31, 2015 at 9:43 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=252003#respond' onclick='return addComment.moveForm( "comment-252003", "252003", "respond", "99" )' aria-label='Reply to Julie'> &middot; Reply</a></span>		 
		</div>
		<p>I think I got it. hope its application will be easy ?</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7629dbfab025588086" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7629dbfab025588086-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dbfab025588086-2">2</div><div class="crayon-num" data-line="crayon-555d7629dbfab025588086-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dbfab025588086-4">4</div><div class="crayon-num" data-line="crayon-555d7629dbfab025588086-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dbfab025588086-6">6</div><div class="crayon-num" data-line="crayon-555d7629dbfab025588086-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7629dbfab025588086-8">8</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7629dbfab025588086-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// nValue has address 0x28fefc. nValue has value 5.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dbfab025588086-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">//pnValue has address 0x28fef8. pnValue has value 0x28fefc</span></div><div class="crayon-line" id="crayon-555d7629dbfab025588086-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dbfab025588086-4"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints value of nValue, which is 5.</span></div><div class="crayon-line" id="crayon-555d7629dbfab025588086-5"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pnValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints value of pnValue, which is 0x28fefc</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dbfab025588086-6"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pnValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints value of *pnValue, which is 5</span></div><div class="crayon-line" id="crayon-555d7629dbfab025588086-7"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">&amp;pnValue </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints value of &amp;pnValue, which is 0x28fef8</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7629dbfab025588086-8"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints value of sizeof(nValue), which is 4</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0022 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-252174">
		<div id="div-comment-252174" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c624e6160cc83c0527444af58e38046b?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c624e6160cc83c0527444af58e38046b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Robot Cat</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/#comment-252174">
		April 15, 2015 at 11:17 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/67-introduction-to-pointers/?replytocom=252174#respond' onclick='return addComment.moveForm( "comment-252174", "252174", "respond", "99" )' aria-label='Reply to Robot Cat'> &middot; Reply</a></span>		 
		</div>
		<p>Hello,<br />
Can you tell me What different between :<br />
- Pointer to a deallocation memory<br />
- Null Poiter (Pointer assign = 0)<br />
- And Pointer undefined (declaration without assignment)<br />
Or they are similar ?</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/67-introduction-to-pointers/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>twenty &#8722; 7 = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4ODQ1OHR5bTdtZjVxZ3o3ZGJwYWozMW04MTM=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432188458" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='99' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="5e0f798085" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="117"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/67-introduction-to-pointers\/":99};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/67-introduction-to-pointers/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'99',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '99' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.824 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:07:38 -->

<!-- Compression = gzip -->
<!-- super cache -->

