<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>
<!-- Basic -->
<meta charset="utf-8">
<title>Object Oriented Programming in PHP</title>
<meta name="Description" content="Object Oriented Programming in PHP - A simple and short PHP tutorial and complete reference manual for all built-in PHP functions. This tutorial is designed for beginners to advanced developers. You will learn PHP Built-in Function Predefined Variables Examples Object Oriented Numbers Scalars Arrays Hash File I/O IF ELSEIF Do While Loops Operators Regular Expressions GET POST Subroutines Coding Standard Modules File Management Socket Communication  Reference Special Variables Syntax Overview Advanced PHP." />
<meta name="Keywords" content="Learning, PHP, Programming, Language, Built-in Function, Library, Web Design,Object Oriented PHP, PHP Variables, Scalars, Arrays, Hash, File I/O, Looping, Regular Expressions, Subroutines, Coding Standard, Writing Modules, File Management, Socket, Examples, Reference, Special Variables, Syntax Overview, Advanced PHP, Tutorial, Tutorials, Operators, GET, POST, Predefined." />
<base href="http://www.tutorialspoint.com/" />
<link rel="shortcut icon" href="http://cdn.tutorialspoint.com/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta name="author" content="tutorialspoint.com">
<meta property="fb:app_id" content="471319149685276" />
<script type="text/javascript" src="http://cdn.tutorialspoint.com/theme/js/script-min-v1.js"></script>
<link rel="stylesheet" href="http://cdn.tutorialspoint.com/theme/css/style-min-v1.css">
<!-- Head Libs -->
<!--[if IE]>
<link rel="stylesheet" href="http://cdn.tutorialspoint.com/theme/css/ie.css">
<![endif]-->
<!--[if lte IE 8]>
<script src="http://cdn.tutorialspoint.com/theme/vendor/respond.js"></script>
<![endif]-->
<!--[if IE]>
<link rel="stylesheet" href="http://cdn.tutorialspoint.com/theme/css/ie.css">
<![endif]-->
<!--[if lte IE 8]>
<script src="http://cdn.tutorialspoint.com/theme/vendor/respond.js"></script>
<![endif]-->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="http://cdn.tutorialspoint.com/theme/css/ie8.css">
<![endif]-->
<!--[if IE 9]>
<link rel="stylesheet" type="text/css" href="http://cdn.tutorialspoint.com/theme/css/ie9.css">
<![endif]-->
<!-- Front Page related changes -->
<style>
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, footer div.footer-ribon, div.footer-copyright { background: #017572 url(/images/pattern.png) repeat center center !important; }
header nav ul.nav-main li a:hover, header nav ul.nav-main li.dropdown:hover a.dropdown-toggle { background: #017572;} 
header nav ul.nav-main li.dropdown:hover > ul{ border:2px solid #017572}
header nav ul.nav-main ul.dropdown-menu > li > a:hover, #mainMenu > li:hover, header nav.mega-menu ul.nav-main .mega-menu-content ul.sub-menu li:hover{ background: #017572 !important;}
img.mobile-apps { border: 1px solid #017572 !important; }
footer i.icon, footer ul.list.icons li i { color: #017572 !important; }
button.btn-responsive-nav, header div.search button.btn-default { background: #017572 !important;}
.social-icons-top { display:none; }
</style>
</head>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img  src="http://cdn.tutorialspoint.com/images/loading-cg.gif" alt="" width="70" height="70" />
   </div>
</div>
<div id="divGoogle"></div>
<div class="body">
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="/php/images/logo.png">
      </a>
      </h1>			
      <div class="search" id="searchBar">
         <form method="get" id="searchform" name="searchform" action="http://www.google.com/search" target="_blank">
            <input type="hidden" name="sitesearch" value="www.tutorialspoint.com">
            <div class="input-group">
               <input type="text" class="form-control search" name="q" id="q" autocomplete="off" placeholder="Search your tutorials..." onfocus="if (this.value == 'Search your tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your tutorials...';}">
               <input value="FORID:11" name="cof" type="hidden">
               <input type="hidden" name="ie" value="ISO-8859-1">
               <span class="input-group-btn"> <button class="btn btn-default" type="submit" onclick="javascript:void(0);"><i class="icon icon-search"></i></button> </span>
            </div>
         </form>
      </div>
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a  id="free-training-icon" href="absoluteclasses.htm"><img src="http://cdn.tutorialspoint.com/images/free-training.jpg" style="width:100px; position:absolute;left:-158px; top:-7px; z-index:99;" title="Free Online Training"></a></li>
            <li> <a href="shared-tutorials.php"><i class="icon icon-user"></i> &nbsp;Shared</a> </li>
            <li> <a href="shorttutorials"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>
            <li>
            <div class="social-icons social-icons-top">
               <ul class="social-icons">
               <li class="facebook"><a href="http://www.facebook.com/tutorialspointindia" target="_blank" title="Facebook">Facebook</a></li>
               <li class="twitter"><a href="http://www.twitter.com/tutorialspoint" target="_blank" title="Twitter">Twitter</a></li>
               <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
               <li class="linkedin"><a href="http://www.linkedin.com/company/tutorialspoint" target="_blank" title="tutorialspoint @ Linkedin">Linkedin</a></li>
               </ul>
            </div>
            </li>
         </ul>
      </nav>
         <!-- search code here  --> 
      <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull"> <i class="icon icon-bars"></i> </button>
   </div>
   <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown"> <a class="dropdown" href="index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown"><a class="dropdown-toggle tut-lib" href="tutorialslibrary.htm"> Tutorials Library </a>
      <ul class="dropdown-menu" id="submenu">
         <li>
            <div class="mega-menu-content">
              <div class="row">
                 <div class="col-md-6">
                    <ul class="sub-menu">
                     <li><a href="academic_tutorials.htm">Academic</a></li>
                     <li><a href="big_data_tutorials.htm">Big Data</a></li>
                     <li><a href="database_tutorials.htm">Databases</a></li>
                     <li><a href="java_technology_tutorials.htm">Java Technologies</a></li>
                     <li><a href="mainframe_tutorials.htm">Mainframe</a></li>
                     <li><a href="management_tutorials.htm">Management</a></li>
                     <li><a href="microsoft_technologies_tutorials.htm">Microsoft Technologies</a></li>
                     <li><a href="questions_and_answers.htm">Questions and Answers</a></li>
                     <li><a href="misc_tutorials.htm">Miscellaneous</a></li>
                   </ul>
                 </div>
                 <div class="col-md-6">
                  <ul class="sub-menu">
                     <li><a href="mobile_development_tutorials.htm">Mobile Development</a></li>
                     <li><a href="computer_programming_tutorials.htm">Programming</a></li>
                     <li><a href="scripting_lnaguage_tutorials.htm">Scripts</a></li>
                     <li><a href="software_quality_tutorials.htm">Software Quality</a></li>
                     <li><a href="telecom_tutorials.htm">Telecom</a></li>
                     <li><a href="web_development_tutorials.htm">Web Development</a></li>
                     <li><a href="xml_technologies_tutorials.htm">XML Technologies</a></li>
                     <li><a href="multi_language_tutorials.htm">Multi Language Tutorials</a></li>
                  </ul>
                 </div>
              </div>
            </div>
         </li>
       </ul>
               </li>
               <li class="dropdown"><a class="dropdown" href="codingground.htm"><i class="fa-code"></i> Coding Ground</a> </li>
                  <li class="dropdown"> 							
                     <a class="dropdown-toggle tut-plus" href="absoluteclasses.htm">Absolute Classes</a>                     <ul class="dropdown-menu" id="submenu1">
                                                <li class="current-menu-ancestor current-menu-parent active dropdown-submenu" style="border-bottom:none;">
                        <li style="border-bottom:none;"><a href="absoluteclasses/userlogin.htm"><i class="fa-sign-in"></i>&nbsp;Login</a></li>
                        <li style="border-bottom:1px dashed #ccc; height:1px; padding:0px; margin:0px 10px 0px 10px" class="stickyhide">&nbsp;</li>
                        <li><a href="absoluteclasses/usersignup.htm"><i class="fa-pencil-square-o"></i>&nbsp;Sign Up&nbsp;</a></li>
                        <li style="border-bottom:none;"><a href="absoluteclasses/upcomingclasses.htm" style="border-bottom:none;"><i class="fa-book book-head"></i> Upcoming Classes </a></li>
                        <li style="border-bottom:1px dashed #ccc; height:1px; padding:0px; margin:0px 10px 0px 10px">&nbsp;</li>
                        <li style="border-bottom:1px dashed #ccc; height:1px; padding:0px; margin:0px 10px 0px 10px">&nbsp;</li>
                        <li style="border-bottom:1px dashed #ccc;;"><a href="absoluteclasses/allcourses.htm" style="border-bottom:none;"><i class="fa-book book-head"></i> All Courses </a></li>
                        <li style="border-bottom:1px dashed #ccc;;"><a href="absoluteclasses/testimonials.htm" style="border-bottom:none;"><i class="fa-check check"></i> Testimonial</a></li>
                        <li style="border-bottom:1px dashed #ccc;;"><a href="absoluteclasses/help.htm" style="border-bottom:none;"><i class="fa-question book-head"></i> Help/FAQ</a></li>
                        <li style="border-bottom:none;"><a href="absoluteclasses/contact_abc.htm" style="border-bottom:none;"><i class="fa fa-envelope-o"></i> Contact</a></li>
                                             
                     </ul>
                  </li>
            </ul>
         </nav>
      </div>
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<div class="mini-logo">
<img src="/php/images/php-mini-logo.jpg" alt="PHP Tutorial" />
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">PHP Tutorial</li>
<li><a class="left" target="_top" href="/php/index.htm">PHP - Home</a></li>
<li><a class="left" target="_top" href="/php/php_introduction.htm" >PHP - Introduction</a></li>
<li><a class="left" target="_top" href="/php/php_environment.htm">PHP - Environment</a></li>
<li><a class="left" target="_top" href="/php/php_syntax_overview.htm" >PHP - Syntax Overview</a></li>
<li><a class="left" target="_top" href="/php/php_variable_types.htm" >PHP - Variable Types</a></li>
<li><a class="left" target="_top" href="/php/php_constants.htm" >PHP - Constants</a></li>
<li><a class="left" target="_top" href="/php/php_operator_types.htm" >PHP - Operator Types</a></li>
<li><a class="left" target="_top" href="/php/php_decision_making.htm" >PHP - Decision Making</a></li>
<li><a class="left" target="_top" href="/php/php_loop_types.htm" >PHP - Loop Types </a></li>
<li><a class="left" target="_top" href="/php/php_arrays.htm" >PHP - Arrays</a></li>
<li><a class="left" target="_top" href="/php/php_strings.htm" >PHP - Strings</a></li>
<li><a class="left" target="_top" href="/php/php_web_concepts.htm" >PHP - Web Concepts</a></li>
<li><a class="left" target="_top" href="/php/php_get_post.htm" >PHP - GET &amp; POST</a></li>
<li><a class="left" target="_top" href="/php/php_file_inclusion.htm" >PHP - File Inclusion</a></li>
<li><a class="left" target="_top" href="/php/php_files.htm" >PHP - Files &amp; I/O</a></li>
<li><a class="left" target="_top" href="/php/php_functions.htm" >PHP - Functions</a></li>
<li><a class="left" target="_top" href="/php/php_cookies.htm" >PHP - Cookies</a></li>
<li><a class="left" target="_top" href="/php/php_sessions.htm" >PHP - Sessions</a></li>
<li><a class="left" target="_top" href="/php/php_sending_emails.htm" >PHP - Sending Emails</a></li>
<li><a class="left" target="_top" href="/php/php_file_uploading.htm" >PHP - File Uploading</a></li>
<li><a class="left" target="_top" href="/php/php_coding_standard.htm" >PHP - Coding Standard</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">Advanced PHP</li>
<li><a class="left" target="_top" href="/php/php_predefined_variables.htm" >PHP - Predefined Variables</a></li>
<li><a class="left" target="_top" href="/php/php_regular_expression.htm" >PHP - Regular Expression</a></li>
<li><a class="left" target="_top" href="/php/php_error_handling.htm" >PHP - Error Handling</a></li>
<li><a class="left" target="_top" href="/php/php_bugs_debugging.htm" >PHP - Bugs Debugging</a></li>
<li><a class="left" target="_top" href="/php/php_date_and_time.htm" >PHP - Date &amp; Time</a></li>
<li><a class="left" target="_top" href="/php/php_and_mysql.htm" >PHP &amp; MySQL</a></li>
<li><a class="left" target="_top" href="/php/php_and_ajax.htm" >PHP &amp; AJAX</a></li>
<li><a class="left" target="_top" href="/php/php_and_xml.htm" >PHP &amp; XML</a></li>
<li><a class="left" target="_top" href="/php/php_object_oriented.htm" >PHP - Object Oriented</a></li>
<li><a class="left" target="_top" href="/php/php_for_c_developers.htm" >PHP - For C Developers</a></li>
<li><a class="left" target="_top" href="/php/php_for_perl_developers.htm" >PHP - For PERL Developers</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">PHP Function Reference</li>
<li><a class="left" target="_top" href="/php/php_function_reference.htm" >PHP - Built-In Functions</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">PHP Useful Resources</li>
<!--<li><a class="left" target="_top" href="/php/php_quick_guide.htm" >PHP - Quick Guide</a></li>-->
<li><a class="left" target="_top" href="/php/php_useful_resources.htm" >PHP - Useful Resources</a></li>
<li><a class="left" target="_top" href="/php/php_discussion.htm" >PHP - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Object Oriented Programming in PHP</h1>
<div class="topgooglead">
<hr />
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="/php/php_and_xml.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/php/php_for_c_developers.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr />
<p>We can imagine our universe made of different objects like sun, earth, moon etc. Similarly we can imagine our car made of different objects like wheel, steering, gear etc. Same way  there is object oriented programming concepts which assume everything as an object and implement a software using different objects.</p>
<h2>Object Oriented Concepts</h2>
<p>Before we go in detail, lets define important terms related to  Object Oriented Programming.</p>
<ul class="list">
<li><p><b>Class:</b> This is a programmer-defined datatype, which includes local functions as well as local data. You can think of a class as a template for making many instances of the same kind (or class) of object.</p></li>
<li><p><b>Object:</b> An individual instance of the data structure defined by a class. You define a class once and then make many objects that belong to it. Objects are also known as instance.</p></li>
<li><p><b>Member Variable:</b> These are the variables defined inside a class. This data will be invisible to the outside of the class and can be accessed via member functions. These variables are called attribute of the object once an object is created.</p></li>
<li><p><b>Member function:</b> These are the function defined inside a class and are used to access object data.</p></li>
<li><p><b>Inheritance:</b> When a class is defined by inheriting existing function of a parent class then it is called inheritance. Here child class will inherit all or few member functions and variables of a parent class.</p></li>
<li><p><b>Parent class:</b> A class that is inherited from by another class. This is also called a base class or super class.</p></li>
<li><p><b>Child Class:</b> A class that inherits from another class. This is also called a subclass or derived class.</p></li>
<li><p><b>Polymorphism:</b> This is an object oriented concept where same function can be used for different purposes. For example function name will remain same but it make take different number of arguments and can do different task.</p></li>
<li><p><b>Overloading:</b> a type of polymorphism in which some or all of operators have different implementations depending on the types of their arguments. Similarly functions can also be overloaded with different implementation.</p></li>
<li><p><b>Data Abstraction:</b> Any representation of data in which the implementation details are hidden (abstracted).</p></li>
<li><p><b>Encapsulation:</b> refers to a concept where we encapsulate all the data and member functions together to form an object.</p></li>
<li><p><b>Constructor:</b> refers to a special type of  function which will be called automatically whenever there is an object formation from a class.</p></li>
<li><p><b>Destructors:</b> refers to a special type of function which will be called automatically whenever an object is deleted or goes out of scope.</p></li>
</ul>
<h2>Defining PHP Classes</h2>
<p>The general form for defining a new class in PHP is as follows:</p>
<pre class="prettyprint notranslate">
&lt;?php
class phpClass{
   var $var1;
   var $var2 = "constant string";
   function myfunc ($arg1, $arg2) {
      [..]
   }
   [..]
}
?&gt;
</pre> 
<p>Here is the description of each line:</p>
<ul class="list">
<li><p>The special form <b>class</b>, followed by the name of the class that you want to define.</p></li>
<li><p>A set of braces enclosing any number of variable declarations and function definitions.</p></li>
<li><p>Variable declarations start with the special form <b>var</b>, which is followed by a conventional $ variable name; they may also have an initial assignment to a constant value.</p></li>
<li><p>Function definitions look much like standalone PHP functions but are local to the class and will be used to set and access object data.</p></li>
</ul>
<h3>Example</h3>
<p>Here is an example which defines a class of Books type:</p>
<pre class="prettyprint notranslate">
&lt;?php
class  Books{
    /* Member variables */
    var $price;
    var $title;
    /* Member functions */
    function setPrice($par){
       $this-&gt;price = $par;
    }
    function getPrice(){
       echo $this-&gt;price ."&lt;br/&gt;";
    }
    function setTitle($par){
       $this-&gt;title = $par;
    }
    function getTitle(){
       echo $this-&gt;title ." &lt;br/&gt;";
    }
}
?&gt;
</pre> 
<p>The variable <b>$this</b> is a special variable and it refers to the same object ie. itself.</p>
<h2>Creating Objects in PHP</h2>
<p>Once you defined your class, then you can create as many objects as you like of that class type. Following is an example of how to create object using <b>new</b> operator.</p>
<pre class="result notranslate">
$physics = new Books;
$maths = new Books;
$chemistry = new Books;
</pre> 
<p>Here we have created three objects and these objects are independent of each other and they will have their existance separately. Next we will see how to access member function and process member variables.</p>
<h2>Calling Member Functions</h2>
<p>After creating your objects, you will be able to call member functions related to that object. One member function will be able to process member variable of related object only.</p>
<p>Following example shows how to set title and prices for the three books by calling member functions.</p>
<pre class="prettyprint notranslate">
$physics-&gt;setTitle( "Physics for High School" );
$chemistry-&gt;setTitle( "Advanced Chemistry" );
$maths-&gt;setTitle( "Algebra" );

$physics-&gt;setPrice( 10 );
$chemistry-&gt;setPrice( 15 );
$maths-&gt;setPrice( 7 );
</pre> 
<p>Now you call another member functions to get the values set by in above example:</p>
<pre class="prettyprint notranslate">
$physics-&gt;getTitle();
$chemistry-&gt;getTitle();
$maths-&gt;getTitle();
$physics-&gt;getPrice();
$chemistry-&gt;getPrice();
$maths-&gt;getPrice();
</pre> 
<p>This will produce follwoing result:</p>
<pre class="result notranslate">
Physics for High School
Advanced Chemistry
Algebra
10
15
7
</pre> 
<h2>Constructor Functions</h2>
<p>Constructor Functions are special type of functions which are called automatically whenever an object is created. So we take full advantage of this behaviour, by initializing many things through constructor functions. </p>
<p>PHP provides a special function called <b>__construct()</b> to define a constructor. You can pass as many as arguments you like into the constructor function.</p>
<p>Following example will create one constructor for Books class and it will initialize price and title for the book at the time of object creation.</p>
<pre class="result notranslate">
function __construct( $par1, $par2 ){
   $this-&gt;price = $par1;
   $this-&gt;title = $par2;
}
</pre> 
<p>Now we don't need to call set function separately to set price and title. We can initialize these two member variables at the time of object creation only. Check following example below:</p>
<pre class="prettyprint notranslate">
$physics = new Books( "Physics for High School", 10 );
$maths = new Books ( "Advanced Chemistry", 15 );
$chemistry = new Books ("Algebra", 7 );

/* Get those set values */
$physics-&gt;getTitle();
$chemistry-&gt;getTitle();
$maths-&gt;getTitle();

$physics-&gt;getPrice();
$chemistry-&gt;getPrice();
$maths-&gt;getPrice();
</pre> 
<p>This will produce following result:</p>
<pre class="result notranslate">
  Physics for High School
  Advanced Chemistry
  Algebra
  10
  15
  7
</pre> 
<h2>Destructor</h2>
<p>Like a constructor function you can define a destructor function using function <b>__destruct()</b>. You can release all the resourceses with-in a destructor.</p>
<h2>Inheritance</h2>
<p>PHP class definitions can optionally inherit from a parent class definition by using the extends clause. The syntax is as follows:</p>
<pre class="result notranslate">
class Child extends Parent {
     &lt;definition body&gt;
  }
</pre> 
<p>The effect of inheritance is that the child class (or subclass or derived class) has the following characteristics:</p>
<ul class="list">
<li><p>Automatically has all the member variable declarations of the parent class.</p></li>
<li><p>Automatically has all the same member functions as the parent, which (by default) will work the same way as those functions do in the parent.</p></li>
</ul>
<p>Following example inherit Books class and adds more functionality based on the requirement.</p>
<pre class="prettyprint notranslate">
class Novel extends Books{
   var publisher;
   function setPublisher($par){
     $this-&gt;publisher = $par;
   }
   function getPublisher(){
     echo $this-&gt;publisher. "&lt;br /&gt;";
   }
}
</pre> 
<p>Now apart from inherited functions, class Novel keeps two additional member functions.</p>
<h2>Function Overriding</h2>
<p>Function definitions in child classes override definitions with the same name in parent classes. In a child class, we can modify the definition of a function inherited from parent class.</p>
<p>In the follwoing example getPrice and getTitle functions are overriden to retrun some values.</p>
<pre class="prettyprint notranslate">
function getPrice(){
       echo $this-&gt;price . "&lt;br/&gt;";
       return $this-&gt;price;
    }
function getTitle(){
       echo $this-&gt;title . "&lt;br/&gt;";
       return $this-&gt;title;
}
</pre> 
<h2>Public Members</h2>
<p>Unless you specify otherwise, properties and methods of a class are public. That is to say, they may be accessed in three possible situations:</p>
<ul class="list">
<li><p>From outside the class in which it is declared</p></li>
<li><p>From within the class in which it is declared</p></li>
<li><p>From within another class that implements the class in which it is declared</p></li>
</ul>
<p>Till now we have seen all members as public members.  If you wish to limit the accessibility of the members of a class then you define class members as <b>private</b> or  <b>protected</b>.</p>
<h2>Private members</h2>
<p>By designating a member private, you limit its accessibility to the class in which it is declared. The private member cannot be referred to from classes that inherit the class in which it is declared and cannot be accessed from outside the class.</p>
<p>A class member can be made private by using <b>private</b> keyword infront of the member.</p>
<pre class="prettyprint notranslate">
class MyClass {
   private $car = "skoda";
   $driver = "SRK";

   function __construct($par) {
      // Statements here run every time
      // an instance of the class
      // is created.
   }
   function myPublicFunction() {
      return("I'm visible!");
   }
   private function myPrivateFunction() {
      return("I'm  not visible outside!");
   }
}
</pre> 
<p>When <i>MyClass</i> class is inherited by another class using extends, myPublicFunction() will be visible, as will $driver. The extending class will not have any awareness of or access to myPrivateFunction and $car, because they are declared private.</p>
<h2>Protected members</h2>
<p>A protected property or method is accessible in the class in which it is declared, as well as in classes that extend that class. Protected members are not available outside of those two kinds of classes. A class member can be made protected by using <b>protected</b> keyword infront of the member.</p>
<p>Here is different version of MyClass:</p>
<pre class="prettyprint notranslate">
class MyClass {
   protected $car = "skoda";
   $driver = "SRK";

   function __construct($par) {
      // Statements here run every time
      // an instance of the class
      // is created.
   }
   function myPublicFunction() {
      return("I'm visible!");
   }
   protected function myPrivateFunction() {
      return("I'm  visible in child class!");
   }
}
</pre> 
<h2>Interfaces</h2>
<p>Interfaces are defined to provide a common function names to the implementors. Different implementors can implement those interfaces according to theri requirements. You can say, interfaces are skeltons which are implemented by developers.</p>
<p>As of PHP5, it is possible to define an interface, like this:</p>
<pre class="prettyprint notranslate">
interface Mail {
   public function sendMail();
}
</pre> 
<p>Then, if another class implemented that interface, like this:</p>
<pre class="prettyprint notranslate">
class Report implements Mail {
   // sendMail() Definition goes here
}
</pre> 
<h2>Constants</h2>
<p>A constant is somewhat like a variable, in that it holds a value, but is really more like a function because a constant is immutable. Once you declare a constant, it does not change.</p>
<p>Declaring one  constant is easy, as is done in this version of MyClass:</p>
<pre class="prettyprint notranslate">
class MyClass {
   const requiredMargin = 1.7;
   function __construct($incomingValue) {
      // Statements here run every time
      // an instance of the class
      // is created.
   }
}
</pre> 
<p>In this class, requiredMargin is a constant. It is declared with the keyword const, and under no circumstances can it be changed to anything other than 1.7. Note that the constant's name does not have a leading $, as variable names do.</p>
<h2>Abstract Classes</h2>
<p>An abstract class is one that cannot be instantiated, only inherited. You declare an abstract class with the keyword <b>abstract</b>, like this:</p>
<p>When inheriting from an abstract class, all methods marked abstract in the parent's class declaration must be defined by the child; additionally, these methods must be defined with the same visibillity.</p>
<pre class="prettyprint notranslate">
abstract class MyAbstractClass {
   abstract function myAbstractFunction() {
   }
}
</pre> 
<p>Note that function definitions inside an abstract class must also be preceded by the keyword abstract. It is not legal to have abstract function definitions inside a non-abstract class.</p>
<h2>Static Keyword</h2>
<p>Declaring class members or methods as static makes them accessible without needing an instantiation of the class. A member declared as static can not be accessed with an instantiated class object (though a static method can).</p>
<p>Try out following example:</p>
<pre class="prettyprint notranslate">
&lt;?php
class Foo
{
    public static $my_static = 'foo';

    public function staticValue() {
        return self::$my_static;
    }
}
print Foo::$my_static . "\n";
$foo = new Foo();
print $foo-&gt;staticValue() . "\n";
</pre> 
<h2>Final Keyword</h2>
<p>PHP 5 introduces the final keyword, which prevents child classes from overriding a method by prefixing the definition with final. If the class itself is being defined final then it cannot be extended.</p>
<p>Following example results in Fatal error: Cannot override final method BaseClass::moreTesting()</p>
<pre class="prettyprint notranslate">
&lt;?php
class BaseClass {
   public function test() {
       echo "BaseClass::test() called&lt;br&gt;";
   }
  
   final public function moreTesting() {
       echo "BaseClass::moreTesting() called&lt;br&gt;";
   }
}

class ChildClass extends BaseClass {
   public function moreTesting() {
       echo "ChildClass::moreTesting() called&lt;br&gt;";
   }
}
?&gt;
</pre> 
<h2>Calling parent constructors</h2>
<p>Instead of writing an entirely new constructor for the subclass, let's write it by calling the parent's constructor explicitly and then doing whatever is necessary in addition for instantiation of the subclass. Here's a simple example:</p>
<pre class="prettyprint notranslate">
class Name
{
   var $_firstName;
   var $_lastName;
   function Name($first_name, $last_name)
   {
     $this-&gt;_firstName = $first_name;
     $this-&gt;_lastName = $last_name;
   }
   function toString() {
     return($this-&gt;_lastName .", " .$this-&gt;_firstName);
   }
}
class NameSub1 extends Name
{
   var $_middleInitial;
   function NameSub1($first_name, $middle_initial, $last_name) {
       Name::Name($first_name, $last_name);
       $this-&gt;_middleInitial = $middle_initial;
   }
   function toString() {
       return(Name::toString() . " " . $this-&gt;_middleInitial);
   }
}
</pre> 
<p>In this example, we have a parent class (Name), which has a two-argument constructor, and a subclass (NameSub1), which has a three-argument constructor. The constructor of NameSub1 functions by calling its parent constructor explicitly using the :: syntax (passing two of its arguments along) and then setting an additional field. Similarly, NameSub1 defines its nonconstructor toString() function in terms of the parent function that it overrides.</p>
<p><b>NOTE:</b> A constructor can be defined  with the same name as the name of a class. It is defined in above example.</p>
<hr />
<div class="pre-btn">
<a href="/php/php_and_xml.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="nxt-btn">
<a href="/php/php_for_c_developers.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr />
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script type="text/javascript"><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<!-- AddThis Button BEGIN -->
<!--
<div class="simple-ad">
<div class="addthis_sharing_toolbox"></div>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-4f661ec623a400f0"></script>
</div>
-->
<!-- AddThis Button END -->
<!--
<div class="google-ad" style="position:relative; left:20px;">Advertisements</div>
-->
<div class="rightgooglead">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
</div>
</div>
</div>
<footer class="inner">
<div class="container">
<div class="row">
<div class="footer-ribon">
<span>Extras</span>
</div>
<div class="col-md-2">
<h4>Mobile First</h4>
<ul class="list icons list-unstyled">
<li><a id="iphone" href="https://itunes.apple.com/om/app/tutorials-point/id914891263?mt=8" target="_blank" rel="nofollow"><img alt="tutorialspoint iPhone App" src="http://cdn.tutorialspoint.com/images/apple_store.jpg" class="mobile-apps"/></a></li>
<li><a id="android" href="https://play.google.com/store/apps/details?id=com.tutorialspoint.onlineviewer" target="_blank" rel="nofollow"><img alt="tutorialspoint Android app" src="http://cdn.tutorialspoint.com/images/google_play.jpg" class="mobile-apps"/></a></li>
<li><a id="microsoft" href="http://www.windowsphone.com/s?appid=91249671-7184-4ad6-8a5f-d11847946b09" target="_blank" rel="nofollow"><img alt="tutorialspoint Windows app" src="http://cdn.tutorialspoint.com/images/windows_store.jpg" class="mobile-apps"/></a></li>
</ul>
</div>
<div class="col-md-2">
<h4>About us</h4>
<ul class="list icons list-unstyled">
<li><i class="icon icon-caret-right"></i> <a href="/about/index.htm">Company</a></li>
<li><i class="icon icon-caret-right"></i> <a href="/about/about_team.htm">Team</a></li>
<li><i class="icon icon-caret-right"></i> <a href="/about/about_careers.htm">Careers</a></li>
<li><i class="icon icon-caret-right"></i> <a href="/about/about_privacy.htm">Privacy Policy</a></li>
<li><i class="icon icon-caret-right"></i> <a href="/about/about_terms_of_use.htm">Terms of use</a></li>
</ul>
</div>
<div class="col-md-2">
<h4>Extra Links</h4>
<ul class="list icons list-unstyled">
<li><i class="icon icon-caret-right"></i> <a href="forums/index.php">Forums</a></li>
<li><i class="icon icon-caret-right"></i> <a href="shorttutorials/">Articles</a></li>
<li><i class="icon icon-caret-right"></i> <a href="shared-tutorials.php">Shared</a></li>
<li><i class="icon icon-caret-right"></i> <a href="seo_tools.htm">Seo Tools</a></li>
<li><i class="icon icon-caret-right"></i> <a href="about/contact_us.htm">Contact</a></li>
</ul>
</div>
<div class="col-md-3">
<div class="contact-details">
<h4>Contact Us</h4>
<ul class="contact">
<li><p><i class="icon icon-map-marker"></i> <strong>Address:</strong> 388-A , Road no 22, Jubilee Hills, Hyderabad Telangana, INDIA-500033</p></li>
<li><p><i class="icon icon-envelope"></i> <strong>Email:</strong> <a href="about/contact_us.htm">Click Here</a></p></li>
<li><p><i class="icon icon-dribbble"></i> <strong>Website:</strong> <a href="http://www.tutorialspoint.com">www.tutorialspoint.com</a></p></li>
</ul>
</div>
<div class="social-icons">
<ul class="social-icons">
<li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
<li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
<li class="twitter"><a href="http://www.twitter.com/tutorialspoint" target="_blank" data-placement="bottom"  title="tutorialspoint @ Twitter">Twitter</a></li>
<li class="linkedin"><a href="http://www.linkedin.com/company/tutorialspoint" target="_blank" data-placement="bottom"  title="tutorialspoint @ Linkedin">Linkedin</a></li>
<li class="rss"><a href="http://feeds.feedburner.com/SharedTutorials" target="_blank" data-placement="bottom" title="tutorialspoint RSS">RSS</a></li>
</ul>
</div>
</div>
</div>
</div>
<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="index.htm" class="logo">
<img alt="Tutorials Point" class="img-responsive" src="http://cdn.tutorialspoint.com/scripts/img/logo-footer.png">
</a>
</div>
<div class="col-md-6">
<p>&copy; Copyright 2015. All Rights Reserved.</p>
</div>
<div class="col-md-4">
<nav id="sub-menu">
<ul>
<li><a href="/about/tutorials_writing.htm">Write for us</a></li>
<li><a href="/about/faq.htm">FAQ's</a></li>
<li><a href="/about/about_helping.htm">Helping</a></li>
<li><a href="/about/contact_us.htm">Contact</a></li>
</ul>
</nav>
</div>
</div>
</div>
</div>
</footer>
</div>
<!-- Libs -->
<script type="text/javascript" src="http://cdn.tutorialspoint.com/theme/js/custom-min.js"></script>
<script src="http://www.google-analytics.com/urchin.js">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
<script type="text/javascript" src="http://cdn.tutorialspoint.com/theme/js/jquery.colorbox-min.js"></script>
<script type="text/javascript">
   var tryit = new $.TryIt('php/try_php.php');
   tryit.compile();
</script>
<style>
pre.prettyprint.tryit {
    background: #eee url('php/images/try-it.jpg') top right no-repeat !important;
}
</style></div>
</body>
</html>

