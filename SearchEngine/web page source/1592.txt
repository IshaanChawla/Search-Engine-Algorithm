<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>6.6 &#8212; C-style strings &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 6.6 &#8212; C-style strings Comments Feed" href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"50.144.0.132","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/66-c-style-strings\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='An early beta review of upcoming online PvP game Fury' href='http://www.learncpp.com/gaming/an-early-review-of-fury/' />
<link rel='next' title='A PHP script to unzip files with file overwriting' href='http://www.learncpp.com/general-programming/a-php-script-to-unzip-files-with-file-overwriting/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/66-c-style-strings/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=86' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="6.6 -- C-style strings" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/" />
<meta property="og:description" content="Under regular C (and hence also C++), it is possible to use arrays to represent strings. A string is a sequence of chars that are interpreted as a piece of text. You have already seen string litera..." />
<meta property="article:published_time" content="2007-07-10T00:35:54+00:00" />
<meta property="article:modified_time" content="2015-05-08T16:32:50+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-86 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-86 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-86">
						<div class="post-headline">		<h1>6.6 &#8212; C-style strings</h1>
		</div>		<div class="post-byline">By Alex, on July 9th, 2007</div>		<div class="post-bodycopy clearfix"><p>Under regular C (and hence also C++), it is possible to use arrays to represent strings.  A <strong>string</strong> is a sequence of chars that are interpreted as a piece of text.  You have already seen string literals:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec94e799336735" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec94e799336735-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec94e799336735-1"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"This is a string literal"</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>In C and C++, strings are typically represented as char arrays that have a null terminator.  A <strong>null terminator</strong> means that the string ends with a &#8216;\0&#8242; character (which has ASCII code 0).  Arrays that are null terminated in this manner are often named using the Hungarian Notation prefix &#8220;sz&#8221;.</p>
<p>To <em>declare</em> a C-style string, simply declare a char array and assign it a value:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec95e358862887" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec95e358862887-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec95e358862887-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"string"</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>Although &#8220;string&#8221; is only 6 letters, this actually declares an array of length 7 (with the last character being the null terminator).  You don&#8217;t need to include the null terminator yourself.</p>
<p>The following program prints out the length of the string, and then the ASCII values of all of the characters:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec965799228995" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec965799228995-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec965799228995-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec965799228995-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec965799228995-1"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">szString</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec965799228995-2"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nChar</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nChar</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-r">sizeof</span><span class="crayon-sy">(</span><span class="crayon-v">szString</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nChar</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898ec965799228995-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-v">nChar</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p>This produces the result:</p>
<pre>
7
115 116 114 105 110 103 0
</pre>
<p>That 0 is the ASCII code of the null terminator that has been appended to the end of the string.</p>
<p>Just like with normal arrays, once an array is declared to be a particular size, it can not be changed.  Our szString above is of length 7 -- which means it can fit 6 chars of our choice and the null terminator.  If you try to stick more than 6 chars in the array, you will overwrite the null terminator and the CPU won&#8217;t know where the string ends.  If you try to print a string with no null terminator, you&#8217;ll not only get the string, you&#8217;ll also get everything in the adjacent memory slots until you happen to hit a 0.</p>
<p>When declaring strings in this manner, it is always a good idea to use [] and let the compiler calculate the size of the array.  That way if you change the string later, you won&#8217;t have to manually adjust the size.</p>
<p>It is important to realize that a single char (eg. &#8216;a&#8217;) is typically only allocated one byte, but the equivalent string (eg. &#8220;a&#8221;) is allocated two bytes -- one for the char, and one for the null terminator.</p>
<p>Since C-style strings are arrays, you can use the [] operator to change individual characters in the string:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec96d290761691" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec96d290761691-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec96d290761691-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec96d290761691-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec96d290761691-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"string"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec96d290761691-2"><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">'p'</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec96d290761691-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>This snippet prints:</p>
<pre>
spring
</pre>
<p>One important point to note is that strings follow ALL the same rules as arrays.  This means you can initialize the string upon creation, but you can not assign values to it using the assignment operator after that!</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec973425171000" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec973425171000-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec973425171000-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec973425171000-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"string"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// ok</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec973425171000-2"><span class="crayon-v">szString</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"rope"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// not ok!</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>This would be the conceptual equivalent of the following nonsensical example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec97a581429601" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec97a581429601-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec97a581429601-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec97a581429601-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">anArray</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">7</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">9</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec97a581429601-2"><span class="crayon-v">anArray</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// what does this mean?</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p><strong>Buffers and buffer overflow</strong></p>
<p>You can read text into a string using cin:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec980180784957" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec980180784957-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec980180784957-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec980180784957-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec980180784957-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-cn">255</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec980180784957-2"><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec980180784957-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"You entered: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>Why did we declare the string to be 255 characters long?  The answer is that we don&#8217;t know how many characters the user is going to enter.  We are using this array of 255 characters as a buffer.  A <strong>buffer</strong> is memory set aside temporarily to hold data.  In this case, we&#8217;re temporarily holding the user input before we write it out using cout.  </p>
<p>If the user were to enter more characters than our array could hold, we would get a buffer overflow.  A <strong>buffer overflow</strong> occurs when the program tries to store more data in a buffer than the buffer can hold.  Buffer overflow results in other memory being overwritten, which usually causes a program crash, but can cause any number of other issues.  By making our buffer 255 charaters long, we are guessing that the user will not enter this many characters.  Although this is commonly seen in C/C++ programming, it is poor programming.</p>
<p>The recommended way of reading strings using cin is as follows:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec987149904512" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec987149904512-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec987149904512-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec987149904512-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec987149904512-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-cn">255</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec987149904512-2"><span class="crayon-v">cin</span><span class="crayon-sy">.</span><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">szString</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">255</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec987149904512-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"You entered: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>This call to cin.getline() will read up to 254 characters into szString (leaving room for the null terminator!).  Any excess characters will be discarded.  In this way, we guarantee that buffer overflow will not occur.</p>
<p><strong>Manipulating C-style strings</strong></p>
<p>C++ provides many functions to manipulate C-style strings.  For example, strcpy() allows you to make a copy of a string.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec98d815175235" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec98d815175235-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec98d815175235-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec98d815175235-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec98d815175235-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec98d815175235-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Copy this!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec98d815175235-2"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">[</span><span class="crayon-cn">50</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec98d815175235-3"><span class="crayon-e">strcpy</span><span class="crayon-sy">(</span><span class="crayon-v">szDest</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec98d815175235-4"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints "Copy this!"</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>However, strcpy() can cause buffer overflows!  In the following program, szDest isn&#8217;t big enough to hold the entire string, so buffer overflow results.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec993485414245" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec993485414245-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec993485414245-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec993485414245-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec993485414245-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec993485414245-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Copy this!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec993485414245-2"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">[</span><span class="crayon-cn">4</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec993485414245-3"><span class="crayon-e">strcpy</span><span class="crayon-sy">(</span><span class="crayon-v">szDest</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// buffer overflow!</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec993485414245-4"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>It is better to use strncpy(), which takes a length parameter to prevent buffer overflow:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec999468508803" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec999468508803-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec999468508803-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec999468508803-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec999468508803-4">4</div><div class="crayon-num" data-line="crayon-555d7898ec999468508803-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec999468508803-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Copy this!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec999468508803-2"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">[</span><span class="crayon-cn">50</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec999468508803-3"><span class="crayon-e">strncpy</span><span class="crayon-sy">(</span><span class="crayon-v">szDest</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">49</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// copy at most 49 characters (indices 0-48)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec999468508803-4"><span class="crayon-v">szDest</span><span class="crayon-sy">[</span><span class="crayon-cn">49</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// ensures the last character is a null terminator</span></div><div class="crayon-line" id="crayon-555d7898ec999468508803-5"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints "Copy this!"</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p></p>
<p>Other useful functions:<br />
strcat() -- Appends one string to another (dangerous)<br />
strncat() -- Appends one string to another (with buffer length check)<br />
strcmp() -- Compare two strings (returns 0 if equal)<br />
strncmp() -- Compare two strings up to a specific number of characters (returns 0 if equal)<br />
strlen() -- Returns the length of a string (excluding the null terminator)</p>
<p>Here&#8217;s an example program using some of the concepts in this lesson:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec9a0892834888" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-4">4</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-6">6</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-8">8</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-10">10</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-12">12</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a0892834888-14">14</div><div class="crayon-num" data-line="crayon-555d7898ec9a0892834888-15">15</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec9a0892834888-1"><span class="crayon-c">// Ask the user to enter a string</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-2"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szBuffer</span><span class="crayon-sy">[</span><span class="crayon-cn">255</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter a string: "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-4"><span class="crayon-v">cin</span><span class="crayon-sy">.</span><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">szBuffer</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">255</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-6"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nSpacesFound</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-7"><span class="crayon-c">// Loop through all of the characters the user entered</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-8"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nChar</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nChar</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-e">strlen</span><span class="crayon-sy">(</span><span class="crayon-v">szBuffer</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nChar</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-9"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// If the current character is a space, count it</span></div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">szBuffer</span><span class="crayon-sy">[</span><span class="crayon-v">nChar</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-s">' '</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">nSpacesFound</span><span class="crayon-o">++</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-13"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a0892834888-14">&nbsp;</div><div class="crayon-line" id="crayon-555d7898ec9a0892834888-15"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"You typed "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nSpacesFound</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" spaces!"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0026 seconds] -->
<p></p>
<p><strong>Use std::string</strong></p>
<p>It is important to know about C-style strings because they are used in a lot of code.  However, we recommend avoiding them altogether whenever possible!</p>
<p>A better idea is to use the string class in the standard library (std::string), which lives in the string header.  std::string lets you work with strings in a way that is much more intuitive.  You can assign strings to them using the assignment operator and they will automatically resize to be as large or small as needed!  No having to guess how large the input string is likely to be in advance!</p>
<p>We covered an introduction to std::string in lesson <a href="http://www.learncpp.com/cpp-tutorial/4-4b-an-introduction-to-stdstring/">4.4b -- An introduction to std::string</a>.</p>
<p><em>Rule: Use std::string instead of arrays for strings</em></p>
<p><strong>std::string and the subscript operator</strong></p>
<p>The subscript operator can be used to extract individual characters from a string.  Don&#8217;t forget that array indices start at 0, not 1!</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898ec9a8865427011" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898ec9a8865427011-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a8865427011-2">2</div><div class="crayon-num" data-line="crayon-555d7898ec9a8865427011-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a8865427011-4">4</div><div class="crayon-num" data-line="crayon-555d7898ec9a8865427011-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a8865427011-6">6</div><div class="crayon-num" data-line="crayon-555d7898ec9a8865427011-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a8865427011-8">8</div><div class="crayon-num" data-line="crayon-555d7898ec9a8865427011-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898ec9a8865427011-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898ec9a8865427011-1"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a8865427011-2"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line" id="crayon-555d7898ec9a8865427011-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a8865427011-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898ec9a8865427011-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a8865427011-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">myName</span><span class="crayon-sy">(</span><span class="crayon-s">"Alex"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898ec9a8865427011-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"The 3rd letter of "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">myName</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">myName</span><span class="crayon-sy">[</span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"\n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a8865427011-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7898ec9a8865427011-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898ec9a8865427011-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p></p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/67-introduction-to-pointers/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 6.7 -- Introduction to pointers</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter6" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/65-multidimensional-arrays/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 6.5 -- Multidimensional Arrays</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-86" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-86" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-86" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-86" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">55 comments to 6.6 &#8212; C-style strings</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-2678">
		<div id="div-comment-2678" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c3b205aafdfb7ae7a4ca65dc865293fe?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c3b205aafdfb7ae7a4ca65dc865293fe?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sandor</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-2678">
		November 12, 2007 at 2:08 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=2678#respond' onclick='return addComment.moveForm( "comment-2678", "2678", "respond", "86" )' aria-label='Reply to sandor'> &middot; Reply</a></span>		 
		</div>
		<p>Hello, I&#8217;ve got a question about the cin.getline() function.<br />
For example:<br />
char string[10];<br />
cin.getline(string, 10);<br />
cout<br />
If I know enter more than 10 chars the program just runs through and the first entered 10 chars doesnt get shown.How can I force the program to show the first 10 chars?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alex bypostauthor odd alt thread-odd thread-alt depth-1 clearfix" id="comment-2694">
		<div id="div-comment-2694" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-2694">
		November 12, 2007 at 8:26 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=2694#respond' onclick='return addComment.moveForm( "comment-2694", "2694", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>In your example, getline() should only show the first 9 characters you enter (the 10th is used for the terminator) and ignore the rest.</p>
<p>For example, if I run this program:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f1749995632044" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f1749995632044-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1749995632044-2">2</div><div class="crayon-num" data-line="crayon-555d7898f1749995632044-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f1749995632044-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1749995632044-2"><span class="crayon-v">cin</span><span class="crayon-sy">.</span><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-t">string</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f1749995632044-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>and I type <code>123456789abcdefghijk</code> as input, the program outputs:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f1754799455565" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f1754799455565-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f1754799455565-1"><span class="crayon-cn">123456789</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p></p>
<p>If you actually want to show 10 chars instead of 9, you&#8217;ll have to change the size of the buffer to 11:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f175a391282503" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f175a391282503-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f175a391282503-2">2</div><div class="crayon-num" data-line="crayon-555d7898f175a391282503-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f175a391282503-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-sy">[</span><span class="crayon-cn">11</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f175a391282503-2"><span class="crayon-v">cin</span><span class="crayon-sy">.</span><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-t">string</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">11</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f175a391282503-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-2725">
		<div id="div-comment-2725" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c3b205aafdfb7ae7a4ca65dc865293fe?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c3b205aafdfb7ae7a4ca65dc865293fe?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sandor</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-2725">
		November 12, 2007 at 11:26 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=2725#respond' onclick='return addComment.moveForm( "comment-2725", "2725", "respond", "86" )' aria-label='Reply to sandor'> &middot; Reply</a></span>		 
		</div>
		<p>Sorry, that was a off-by-one thinking mistake of me : )  But it doesnt really matter how many chars are shown. Its just that when I run this program, and enter more than the &#8220;maximum&#8221; of chars, it doesnt show them, but instead runs through, terminating immediatly (maybe it shows them quick, but if, then only for a millisecond). My actual question is now, how can I make the window stay open and show me the enterd chars.<br />
regards</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-63488">
		<div id="div-comment-63488" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/ebf2907704f1c8257231bdfd3b5909d8?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/ebf2907704f1c8257231bdfd3b5909d8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://mucadeleci.blogspot.com' rel='external nofollow' class='url'>gundoganfa</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-63488">
		June 30, 2009 at 11:42 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=63488#respond' onclick='return addComment.moveForm( "comment-63488", "63488", "respond", "86" )' aria-label='Reply to gundoganfa'> &middot; Reply</a></span>		 
		</div>
		<p>u can add </p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0c36670975392" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0c36670975392-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0c36670975392-1"><span class="crayon-e">system</span><span class="crayon-sy">(</span><span class="crayon-s">"pause"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>right before &#8220;return&#8221; of the main function.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alex bypostauthor even thread-odd thread-alt depth-1 clearfix" id="comment-2743">
		<div id="div-comment-2743" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-2743">
		November 13, 2007 at 8:31 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=2743#respond' onclick='return addComment.moveForm( "comment-2743", "2743", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>Sandor, I believe what&#8217;s happening is that all of the keys you are entering are going into an I/O buffer, and the code you wrote is only reading 10 of them.  When a program terminates, some compilers hold the window open until is key is pressed.  It sounds like your compiler is doing this, but then a key from the I/O buffer is causing it to close immediately.</p>
<p>I am not sure if this would work, but at the end of your program (right before main returns), try adding this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f1624236459130" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f1624236459130-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f1624236459130-1"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-sy">.</span><span class="crayon-e">ignore</span><span class="crayon-sy">(</span><span class="crayon-cn">1000</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'\n'</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-5017">
		<div id="div-comment-5017" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/66ac6df2d5b3175463af0df308d3c747?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/66ac6df2d5b3175463af0df308d3c747?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Cody</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-5017">
		December 26, 2007 at 9:22 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=5017#respond' onclick='return addComment.moveForm( "comment-5017", "5017", "respond", "86" )' aria-label='Reply to Cody'> &middot; Reply</a></span>		 
		</div>
		<p>Shouldn&#8217;t</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f156e107211150" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f156e107211150-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f156e107211150-2">2</div><div class="crayon-num" data-line="crayon-555d7898f156e107211150-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f156e107211150-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f156e107211150-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Copy this!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f156e107211150-2"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">[</span><span class="crayon-cn">50</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f156e107211150-3"><span class="crayon-e">strncpy</span><span class="crayon-sy">(</span><span class="crayon-v">szDest</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">szSource</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">50</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// copy at most 50 characters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f156e107211150-4"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szDest</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// prints "Copy this!"</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p>  copy at most 49 characters to prevent the null terminator from being overwritten.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alex bypostauthor even thread-odd thread-alt depth-1 clearfix" id="comment-5019">
		<div id="div-comment-5019" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-5019">
		December 26, 2007 at 9:48 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=5019#respond' onclick='return addComment.moveForm( "comment-5019", "5019", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>Cody,</p>
<p>In most cases, it is a good idea to copy 1 less than the number of characters in the buffer (in this case, 49) and then explicitly ensure the last character is a null terminator.  I have updated the example.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-5738">
		<div id="div-comment-5738" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abhishek</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-5738">
		January 9, 2008 at 12:33 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=5738#respond' onclick='return addComment.moveForm( "comment-5738", "5738", "respond", "86" )' aria-label='Reply to Abhishek'> &middot; Reply</a></span>		 
		</div>
		<p>char szSource[] = &#8220;Copy this!&#8221;;<br />
char szDest[50];<br />
strncpy(szDest, szSource, 49); // copy at most 49 characters (indices 0-48)<br />
szDest[49] = 0; // ensures the last character is a null terminator<br />
cout </p>
<p>In this example you have assigned 0(zero) to a char.Will the compiler automatically cast 0 to &#8216;\0&#8217;?</p>
<p>How about writing   szDest[49]=&#8217;\0&#8242;;</p>
<p>or  szDest[49]=static_cast<char>(0)</p>
<p>Does cin.getline() place the null character automatically? </p>
<p>char szString[255];<br />
cin.getline(szString, 255);<br />
cout </char></p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-5754">
		<div id="div-comment-5754" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-5754">
		January 9, 2008 at 7:22 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=5754#respond' onclick='return addComment.moveForm( "comment-5754", "5754", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>Yes, the compiler should treat 0 and &#8216;\0&#8242; as the same.</p>
<p>So:<br />
szDest[49] = 0;<br />
szDest[49] = &#8216;\0&#8242;;<br />
szDest[49] = static_cast<char>(0);</p>
<p>All should work identically.</p>
<p>cin.getline() reserves one space for a null terminator, so it does place it automatically.</char></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-8845">
		<div id="div-comment-8845" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/743717ba8bc4078c3c75dfdfaa299a99?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/743717ba8bc4078c3c75dfdfaa299a99?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Chad</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-8845">
		March 3, 2008 at 2:23 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=8845#respond' onclick='return addComment.moveForm( "comment-8845", "8845", "respond", "86" )' aria-label='Reply to Chad'> &middot; Reply</a></span>		 
		</div>
		<p>that program will only read in my first name. How do you accept strings with spaces in them?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-8848">
		<div id="div-comment-8848" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-8848">
		March 3, 2008 at 3:21 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=8848#respond' onclick='return addComment.moveForm( "comment-8848", "8848", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>There&#8217;s a special version of getline() that you can use to read in string variables with spaces:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f1365477037975" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f1365477037975-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1365477037975-2">2</div><div class="crayon-num" data-line="crayon-555d7898f1365477037975-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f1365477037975-1"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1365477037975-2"><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f1365477037975-3"><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-17148">
		<div id="div-comment-17148" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/02c1c5ea8d78232b5c07affcb08c6984?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/02c1c5ea8d78232b5c07affcb08c6984?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Stuart</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-17148">
		May 21, 2008 at 12:35 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=17148#respond' onclick='return addComment.moveForm( "comment-17148", "17148", "respond", "86" )' aria-label='Reply to Stuart'> &middot; Reply</a></span>		 
		</div>
		<p>My compiler says that &#8220;strncpy&#8221; may be unsafe and that to consider using &#8220;strncpy_s&#8221; instead.<br />
What&#8217;s the difference?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-17917">
		<div id="div-comment-17917" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-17917">
		May 30, 2008 at 5:20 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=17917#respond' onclick='return addComment.moveForm( "comment-17917", "17917", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>strncpy is a standard function call that copies n bytes of a string from source to destination.  Microsoft decided that this function was not safe enough, so they deprecated it in the latest version of their compiler, and replaced it with strncpy_s.  The two functions are identical, except strncpy_s takes an additional parameter that is the size of the destination buffer.  strncpy_s is currently a non-standard function and may not be portable.</p>
<p>Personally, I&#8217;d avoid both and use a string class or std::string.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-24097">
		<div id="div-comment-24097" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f5cee49ff0cd89a573301e54e46fdee9?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f5cee49ff0cd89a573301e54e46fdee9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Jeffey</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-24097">
		August 18, 2008 at 12:56 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=24097#respond' onclick='return addComment.moveForm( "comment-24097", "24097", "respond", "86" )' aria-label='Reply to Jeffey'> &middot; Reply</a></span>		 
		</div>
		<p>in the code </p>
<p><code>string strString;</code></p>
<p>it is setting string to a variable right? How come string is not considered a &#8220;keyword&#8221;? Like instead of asking the user. I could do the following.</p>
<p><code>string strString;<br />
	strString = (&quot;jeffey&quot;);<!--formatted--></code></p>
<p>this work the same as all other variables.</p>
<p> also is there a way I can set my compiler settings to recognize  the word &#8220;string&#8221; so that it shows up as a different color. I do use the text colors and rely on them a lot when looking at code. I want the word &#8220;string&#8221; to stand out from normal text.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment byuser comment-author-alex bypostauthor even thread-even depth-1 clearfix" id="comment-24929">
		<div id="div-comment-24929" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-24929">
		August 25, 2008 at 7:01 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=24929#respond' onclick='return addComment.moveForm( "comment-24929", "24929", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p><code>string strString;</code> is simply declaring a variable of type std::string.  If I&#8217;m not mistaken, std::string will auto-initialize to the empty string if not provided a value.  string isn&#8217;t a keyword because it wasn&#8217;t built into the language -- it&#8217;s part of the standard library.</p>
<p>As far as I know, there isn&#8217;t a way to make string show up in a different color in Visual Studio or Code::Blocks.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-68546">
		<div id="div-comment-68546" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/99c36acef87025796651536b187e7f9b?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/99c36acef87025796651536b187e7f9b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">jeremy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-68546">
		September 17, 2009 at 8:33 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=68546#respond' onclick='return addComment.moveForm( "comment-68546", "68546", "respond", "86" )' aria-label='Reply to jeremy'> &middot; Reply</a></span>		 
		</div>
		<p>In Code::Blocks,<br />
Go To &#8220;Settings&#8221; &gt; &#8220;Editor&#8221; &gt; &#8220;Syntax highlighting&#8221; &gt; &#8220;Keywords&#8230;&#8221;<br />
Add &#8220;string&#8221; to the list.<br />
It will now appear as a keyword like &#8220;int&#8221;.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-31519">
		<div id="div-comment-31519" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/23490d73ae5456568478541137e2a812?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/23490d73ae5456568478541137e2a812?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">som shekhar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-31519">
		November 3, 2008 at 1:09 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=31519#respond' onclick='return addComment.moveForm( "comment-31519", "31519", "respond", "86" )' aria-label='Reply to som shekhar'> &middot; Reply</a></span>		 
		</div>
		<p>if i use like this :<br />
string sName;<br />
then this variable doesnt take blank spaces;</p>
<p>for ex;if i enter a som shekhar in the variable sName, then it prints only som<br />
y it is like that?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor odd alt depth-2 clearfix" id="comment-31565">
		<div id="div-comment-31565" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-31565">
		November 3, 2008 at 6:56 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=31565#respond' onclick='return addComment.moveForm( "comment-31565", "31565", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>It has to do with the way the >> operator is implemented.  Operator >> will extract characters until it hits whitespace, then it will stop.</p>
<p>The reasons for this are somewhat complex -- it is discussed further in chapter 13.2 on the lesson on the >> operator.</p>
<p>In the meantime, if you want to read in a string with whitespaces, you can do this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f111c740963473" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f111c740963473-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f111c740963473-2">2</div><div class="crayon-num" data-line="crayon-555d7898f111c740963473-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f111c740963473-1"><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f111c740963473-2"><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d7898f111c740963473-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment even depth-3 clearfix" id="comment-31567">
		<div id="div-comment-31567" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/23490d73ae5456568478541137e2a812?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/23490d73ae5456568478541137e2a812?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">som shekhar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-31567">
		November 3, 2008 at 7:15 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=31567#respond' onclick='return addComment.moveForm( "comment-31567", "31567", "respond", "86" )' aria-label='Reply to som shekhar'> &middot; Reply</a></span>		 
		</div>
		<p>now i have done the same but hte problem is that i have to hit the enter key twice&#8230;<br />
my code is</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f1038226607461" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f1038226607461-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-2">2</div><div class="crayon-num" data-line="crayon-555d7898f1038226607461-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-4">4</div><div class="crayon-num" data-line="crayon-555d7898f1038226607461-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-6">6</div><div class="crayon-num" data-line="crayon-555d7898f1038226607461-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-8">8</div><div class="crayon-num" data-line="crayon-555d7898f1038226607461-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-10">10</div><div class="crayon-num" data-line="crayon-555d7898f1038226607461-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-12">12</div><div class="crayon-num" data-line="crayon-555d7898f1038226607461-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f1038226607461-14">14</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f1038226607461-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-2">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f1038226607461-3"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-4">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f1038226607461-5"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-6"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7898f1038226607461-7"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-8"><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f1038226607461-9"><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-s">"Enter name:"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-10"><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f1038226607461-11"><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-s">"Name = "</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-12"><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f1038226607461-13"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f1038226607461-14"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-31783">
		<div id="div-comment-31783" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/30f5101f873065f5bb09c8c33639652b?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/30f5101f873065f5bb09c8c33639652b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://N/A' rel='external nofollow' class='url'>Ronnie</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-31783">
		November 7, 2008 at 4:04 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=31783#respond' onclick='return addComment.moveForm( "comment-31783", "31783", "respond", "86" )' aria-label='Reply to Ronnie'> &middot; Reply</a></span>		 
		</div>
		<p>When you use cin.getline, you make the string a maximum amount of 255 - surely there&#8217;s a huge chance of so much wasted memory? Is there no way to prevent this?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-31819">
		<div id="div-comment-31819" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-31819">
		November 8, 2008 at 11:42 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=31819#respond' onclick='return addComment.moveForm( "comment-31819", "31819", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>The memory isn&#8217;t really wasted, it&#8217;s just used temporarily and then gets returned to the stack when the function exits.  The bigger problem is the possibility of overflowing the buffer.</p>
<p>If you want to avoid using the fixed size buffer, you can use the getline() function with a std::string.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0f23456736781" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0f23456736781-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0f23456736781-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0f23456736781-1"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0f23456736781-2"><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-34289">
		<div id="div-comment-34289" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/ddda55fe42301570aedb8a6288b79521?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/ddda55fe42301570aedb8a6288b79521?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.genesis.net.au/~daniel/index.html' rel='external nofollow' class='url'>Daniel</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-34289">
		December 11, 2008 at 4:00 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=34289#respond' onclick='return addComment.moveForm( "comment-34289", "34289", "respond", "86" )' aria-label='Reply to Daniel'> &middot; Reply</a></span>		 
		</div>
		<p>Hey, I have a quick question&#8230; Let&#8217;s say we have a function Fred</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0e2e413077960" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0e2e413077960-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0e2e413077960-1"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">Fred</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>Now I need to make a function Barney</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0e38784131580" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0e38784131580-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0e38784131580-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-e">Barney</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>Which calls Fred and returns the result as an null-terminated-c-string. How would I go about this?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-34516">
		<div id="div-comment-34516" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-34516">
		December 13, 2008 at 4:57 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=34516#respond' onclick='return addComment.moveForm( "comment-34516", "34516", "respond", "86" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0d7c989429454" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0d7c989429454-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0d7c989429454-2">2</div><div class="crayon-num" data-line="crayon-555d7898f0d7c989429454-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0d7c989429454-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0d7c989429454-1"><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Barney</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0d7c989429454-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7898f0d7c989429454-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-e">Fred</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">c_str</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0d7c989429454-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-34593">
		<div id="div-comment-34593" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/ddda55fe42301570aedb8a6288b79521?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/ddda55fe42301570aedb8a6288b79521?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.genesis.net.au/~daniel/index.html' rel='external nofollow' class='url'>Daniel</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-34593">
		December 14, 2008 at 11:06 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=34593#respond' onclick='return addComment.moveForm( "comment-34593", "34593", "respond", "86" )' aria-label='Reply to Daniel'> &middot; Reply</a></span>		 
		</div>
		<p>Without the const&#8230;</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-60190">
		<div id="div-comment-60190" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/10dc9f8052d5a4b080c620a4467e54f7?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/10dc9f8052d5a4b080c620a4467e54f7?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">csvan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-60190">
		May 7, 2009 at 7:15 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=60190#respond' onclick='return addComment.moveForm( "comment-60190", "60190", "respond", "86" )' aria-label='Reply to csvan'> &middot; Reply</a></span>		 
		</div>
		<p>In the past, I have been giving thought to the question of resource overheads when using std::string as opposed to cstrings. Just how big is this overhead in reality, and could it be preferable to use cstrings rather than std::string in code where there will be no &#8220;heavy&#8221; use of strings, in order to improve overall performance? Maybe the same goes for std::vector as opposed to arrays?</p>
<p>I</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-63973">
		<div id="div-comment-63973" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c059852928889b6c485f69afa0a145cb?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c059852928889b6c485f69afa0a145cb?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Frank</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-63973">
		July 8, 2009 at 8:12 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=63973#respond' onclick='return addComment.moveForm( "comment-63973", "63973", "respond", "86" )' aria-label='Reply to Frank'> &middot; Reply</a></span>		 
		</div>
		<p>I added to your example program just for giggles and i thought i would share my minor extension. by the way alex this is a great tutorial and i am learning a lot but i am still struggling a bit with writing a coherent program. perhaps if there were a few example programs (3-4 with explainations of what each part does ect.) at the end of each chapter just for us to copy? this would help me out tremendously to grasp what you are telling us in the sections. </p>
<p>here is the code:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0b3e407950494" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-2">2</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-4">4</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-6">6</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-8">8</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-10">10</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-12">12</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-14">14</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-16">16</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-18">18</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-20">20</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-22">22</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-24">24</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-26">26</div><div class="crayon-num" data-line="crayon-555d7898f0b3e407950494-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0b3e407950494-28">28</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0b3e407950494-1"><span class="crayon-h"> </span><span class="crayon-p">#include &lt;cstdlib&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-2"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-3"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-4">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-5"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-6"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter your name: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Hello, "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"!"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Your name has "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">strString</span><span class="crayon-sy">.</span><span class="crayon-e">length</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-s">" characters in it"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"The 2nd character is: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">strString</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Dave"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"your name is now "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Hello "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">", Would you like to hear me sing a song?"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strAnswer</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">strAnswer</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-h"> </span><span class="crayon-v">strAnswer</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-s">"yes"</span><span class="crayon-h"> </span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" \n Daisy, Daisy give me your answer do. \n Im half crazy all for the love of you \n \n"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-st">else</span><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">strAnswer</span><span class="crayon-h"> </span><span class="crayon-o">==</span><span class="crayon-h"> </span><span class="crayon-s">"no"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Ok, Goodbye "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"I dont understand you "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-26"><span class="crayon-e">system</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-s">"PAUSE"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f0b3e407950494-27">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0b3e407950494-28"><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0057 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-70886">
		<div id="div-comment-70886" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4e59998eb94080b43cf25f25b09f24f2?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4e59998eb94080b43cf25f25b09f24f2?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Allan</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-70886">
		October 23, 2009 at 4:22 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=70886#respond' onclick='return addComment.moveForm( "comment-70886", "70886", "respond", "86" )' aria-label='Reply to Allan'> &middot; Reply</a></span>		 
		</div>
		<p>How about something on working with strings?<br />
I need to add two strings together to create one longer string.</p>
<p>Also when comparing strings can I just ask if string1==string2 or is there a strcompare function?</p>
<p>I&#8217;m a newbie writing my first program and referencing your site.</p>
<p>Thanks,<br />
Al</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-78102">
		<div id="div-comment-78102" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/46ce9432b32a343f5db2403928121f93?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/46ce9432b32a343f5db2403928121f93?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Rob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-78102">
		February 9, 2010 at 7:27 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=78102#respond' onclick='return addComment.moveForm( "comment-78102", "78102", "respond", "86" )' aria-label='Reply to Rob'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f09b7912823500" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f09b7912823500-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f09b7912823500-2">2</div><div class="crayon-num" data-line="crayon-555d7898f09b7912823500-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f09b7912823500-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-sy">[</span><span class="crayon-cn">255</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f09b7912823500-2"><span class="crayon-v">cin</span><span class="crayon-sy">.</span><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">szString</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">255</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f09b7912823500-3"><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"You entered: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">szString</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>Won&#8217;t this example over write the null terminator?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-79393">
		<div id="div-comment-79393" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/8b7cd5dd8a87eca9dc992e9e669bb11b?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/8b7cd5dd8a87eca9dc992e9e669bb11b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">smitha</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-79393">
		February 28, 2010 at 10:17 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=79393#respond' onclick='return addComment.moveForm( "comment-79393", "79393", "respond", "86" )' aria-label='Reply to smitha'> &middot; Reply</a></span>		 
		</div>
		<p>This is a question regarding passing strings as parameters. When I pass a string constant as a parameter to a function and if I do a gets on the same variable, should it not overwrite the string? An older version of Turbo C++ does not give an error but DevC++ shows a runtime error during gets()<br />
for example</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f08fb821555901" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-2">2</div><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-4">4</div><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-6">6</div><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-8">8</div><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-10">10</div><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-12">12</div><div class="crayon-num" data-line="crayon-555d7898f08fb821555901-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f08fb821555901-14">14</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f08fb821555901-1"><span class="crayon-p">#include &lt;iostream.h&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-2"><span class="crayon-p">#include &lt;stdio.h&gt;</span></div><div class="crayon-line" id="crayon-555d7898f08fb821555901-3"><span class="crayon-p">#include &lt;string.h&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-4"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">Display</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">str</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f08fb821555901-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-6"><span class="crayon-h">&nbsp;&nbsp; </span><span class="crayon-e">gets</span><span class="crayon-sy">(</span><span class="crayon-v">str</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f08fb821555901-7"><span class="crayon-h">&nbsp;&nbsp; </span><span class="crayon-e">puts</span><span class="crayon-sy">(</span><span class="crayon-v">str</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f08fb821555901-9"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-10"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f08fb821555901-11"><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-12"><span class="crayon-h">	</span><span class="crayon-e">Display</span><span class="crayon-sy">(</span><span class="crayon-s">"xyzxyz"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f08fb821555901-13"><span class="crayon-h">	</span><span class="crayon-e">system</span><span class="crayon-sy">(</span><span class="crayon-s">"pause"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f08fb821555901-14"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p>assuming that the user enters abcabc, shouldnt str have the value abcabc, instead it runs into memory problems&#8230;though turboc++ works just fine.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-86596">
		<div id="div-comment-86596" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9f430a5414a5fedf86f8dfe47ab74b7f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9f430a5414a5fedf86f8dfe47ab74b7f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">DaBlackIce</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-86596">
		June 15, 2010 at 11:41 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=86596#respond' onclick='return addComment.moveForm( "comment-86596", "86596", "respond", "86" )' aria-label='Reply to DaBlackIce'> &middot; Reply</a></span>		 
		</div>
		<p>I&#8217;ve had this problem recently&#8230;</p>
<p>Every time I use a do while loop and I use eg.: </p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0840748255648" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0840748255648-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f0840748255648-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0840748255648-1"><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strWhateverString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f0840748255648-2"><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">strWhateverString</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>, the compiler doesn&#8217;t wait for any input and skips to the next statements. What would be the problem? If you already answered this question I&#8217;m sorry&#8230;thank you in advance :)! BTW GREAT TUTORIAL&#8230;IT HAS BEEN A LOT OF HELP!</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-87559">
		<div id="div-comment-87559" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/5f0c1d12bebe6149813857f88e3fe97a?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/5f0c1d12bebe6149813857f88e3fe97a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://learncpp.com' rel='external nofollow' class='url'>Chad</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-87559">
		July 1, 2010 at 6:07 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=87559#respond' onclick='return addComment.moveForm( "comment-87559", "87559", "respond", "86" )' aria-label='Reply to Chad'> &middot; Reply</a></span>		 
		</div>
		<p>Can you post your whole program, please?</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-88999">
		<div id="div-comment-88999" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9f430a5414a5fedf86f8dfe47ab74b7f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9f430a5414a5fedf86f8dfe47ab74b7f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">DaBlackIce</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-88999">
		July 23, 2010 at 10:49 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=88999#respond' onclick='return addComment.moveForm( "comment-88999", "88999", "respond", "86" )' aria-label='Reply to DaBlackIce'> &middot; Reply</a></span>		 
		</div>
		<p>I kind of found out what was wrong. Apparently it&#8217;s not the do while loop.</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f05d0969506115" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-2">2</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-4">4</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-6">6</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-8">8</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-10">10</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-12">12</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-14">14</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-16">16</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-18">18</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-20">20</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-22">22</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-24">24</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-26">26</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-28">28</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-30">30</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-32">32</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-34">34</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-36">36</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-38">38</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-40">40</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-42">42</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-44">44</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-46">46</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-48">48</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-50">50</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-52">52</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-54">54</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-56">56</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-58">58</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-60">60</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-61">61</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-62">62</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-63">63</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-64">64</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-65">65</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-66">66</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-67">67</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-68">68</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-69">69</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-70">70</div><div class="crayon-num" data-line="crayon-555d7898f05d0969506115-71">71</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7898f05d0969506115-72">72</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f05d0969506115-1"><span class="crayon-p">#include "stdafx.h"</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-2"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-3"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-4">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-5"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-6">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-7"><span class="crayon-t">struct</span><span class="crayon-h"> </span><span class="crayon-e">nPersonalInfo</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-8"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-9"><span class="crayon-h">	</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strFullName</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-10"><span class="crayon-h">	</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-v">nAge</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-11"><span class="crayon-h">	</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strBirthday</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-12"><span class="crayon-h">	</span><span class="crayon-t">float</span><span class="crayon-h"> </span><span class="crayon-v">fHeight</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-13"><span class="crayon-h">	</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-v">nWeight</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-14"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-15">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-16"><span class="crayon-t">void</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-e">PrintInfo</span><span class="crayon-sy">(</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strFullName</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-v">nAge</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strBirthday</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-17"><span class="crayon-h">	</span><span class="crayon-t">float</span><span class="crayon-h"> </span><span class="crayon-v">fHeight</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">short</span><span class="crayon-h"> </span><span class="crayon-v">nWeight</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-18"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-19"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strFullName</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"'s information."</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-20"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-21"><span class="crayon-h">	</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-22"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Full Name:t"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strFullName</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-23"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Age:tt"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nAge</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-24"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Birthday:t"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strBirthday</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-25"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Height:tt"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">fHeight</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" meters tall"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-26"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Weight:tt"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nWeight</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" lb"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-27"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-28"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-29">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-30"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">AskUserInfo</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-31"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-32"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Input your personal information."</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-33"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-34">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-35"><span class="crayon-h">	</span><span class="crayon-e">nPersonalInfo </span><span class="crayon-v">sMember</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-36">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-37"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"What's your full name? "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-38"><span class="crayon-h">	</span><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">strFullName</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-39">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-40"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"How old are you? "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-41"><span class="crayon-h">	</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">nAge</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-42">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-43"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"When were you born? (mm/dd/yy)"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-44"><span class="crayon-h">	</span><span class="crayon-v">cin</span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">strBirthday</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-45">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-46"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"What is your height in meters? "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-47"><span class="crayon-h">	</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">fHeight</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-48"><span class="crayon-h">	</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-49"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"What is your weight in pounds? "</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-50"><span class="crayon-h">	</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">nWeight</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-51"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-52">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-53"><span class="crayon-h">	</span><span class="crayon-e">PrintInfo</span><span class="crayon-sy">(</span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">strFullName</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">nAge</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">strBirthday</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-54"><span class="crayon-h">		</span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">fHeight</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">sMember</span><span class="crayon-sy">.</span><span class="crayon-v">nWeight</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-55">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-56">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-57"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-58"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-59">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-60"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-61"><span class="crayon-sy">{</span><span class="crayon-h">	</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-62"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"How many people are in your family? "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-63"><span class="crayon-h">	</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-64"><span class="crayon-h">	</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-65"><span class="crayon-h">	</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"You have "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" family members."</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-66">&nbsp;</div><div class="crayon-line" id="crayon-555d7898f05d0969506115-67"><span class="crayon-h">	</span><span class="crayon-e">AskUserInfo</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-68"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-69"><span class="crayon-h">		</span><span class="crayon-c">//AskFamilyInfo(); I won't include this function to make it short...</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-70"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7898f05d0969506115-71"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7898f05d0969506115-72"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0118 seconds] -->
<p>If you run this program after putting in the amount of family members, it skips the question &#8220;What is your full name?&#8221; </p>
<p>But if I change:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f05dd668892999" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f05dd668892999-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f05dd668892999-1"><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p>to: </p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f05e4588385967" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f05e4588385967-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f05e4588385967-1"><span class="crayon-e">getline</span><span class="crayon-sy">(</span><span class="crayon-v">cin</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p> and use nNumberOfFamilyMembers as a string instead, everything works fine. But still&#8230;.I wanted to do it this way. And even so, in the loop I have to change </p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f05ea184340465" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f05ea184340465-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f05ea184340465-1"><span class="crayon-v">nNumberOfFamilyMembers</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p> to </p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f05f0530349237" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f05f0530349237-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f05f0530349237-1"><span class="crayon-v">nNumberOfFamilyMembers</span><span class="crayon-sy">.</span><span class="crayon-v">length</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p> since it would be a string now. </p>
<p>Anything I can do about it?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-89000">
		<div id="div-comment-89000" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9f430a5414a5fedf86f8dfe47ab74b7f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9f430a5414a5fedf86f8dfe47ab74b7f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">DaBlackIce</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-89000">
		July 23, 2010 at 11:02 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=89000#respond' onclick='return addComment.moveForm( "comment-89000", "89000", "respond", "86" )' aria-label='Reply to DaBlackIce'> &middot; Reply</a></span>		 
		</div>
		<p>Oh by the way..in the PrintInfo function, beside full name, age, etc. it should be t for tab&#8230;not t only and nNumberOfFamilyMembers.length() in the main function <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-93629">
		<div id="div-comment-93629" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/461fe2dd8702dca048c9c68be5cdda2d?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/461fe2dd8702dca048c9c68be5cdda2d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.learncpp.com' rel='external nofollow' class='url'>subha</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-93629">
		October 12, 2010 at 11:09 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=93629#respond' onclick='return addComment.moveForm( "comment-93629", "93629", "respond", "86" )' aria-label='Reply to subha'> &middot; Reply</a></span>		 
		</div>
		<p>i want a source code for strrev(),strlwr();</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-93630">
		<div id="div-comment-93630" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/461fe2dd8702dca048c9c68be5cdda2d?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/461fe2dd8702dca048c9c68be5cdda2d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.learncpp.com' rel='external nofollow' class='url'>subha</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-93630">
		October 12, 2010 at 11:10 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=93630#respond' onclick='return addComment.moveForm( "comment-93630", "93630", "respond", "86" )' aria-label='Reply to subha'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898f0433270811635" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898f0433270811635-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898f0433270811635-1"><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-i">want</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-e">source </span><span class="crayon-e">code </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">strrev</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-e">strlwr</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-95138">
		<div id="div-comment-95138" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d36e71ca6f9f856681598d82196c3450?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d36e71ca6f9f856681598d82196c3450?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ogre</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95138">
		January 26, 2011 at 6:32 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95138#respond' onclick='return addComment.moveForm( "comment-95138", "95138", "respond", "86" )' aria-label='Reply to Ogre'> &middot; Reply</a></span>		 
		</div>
		<p>When you first use cin.getline() you say that the parameter 255 means it will only read the first 254 characters, to leave space for the null terminator. But if you initialize the array with [255] then it will have room for 255 characters plus the null terminator, right?</p>
<p>Also, when you first use strncpy() you say that the parameter of 49 means that is the most amount of characters it will take (excluding the null terminator), but this is inconsistent with cin.getline(). Is this really how it is?</p>
<p>You may also want to make it clear that we need to include  for some functions.</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-95139">
		<div id="div-comment-95139" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d36e71ca6f9f856681598d82196c3450?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d36e71ca6f9f856681598d82196c3450?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ogre</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95139">
		January 26, 2011 at 6:37 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95139#respond' onclick='return addComment.moveForm( "comment-95139", "95139", "respond", "86" )' aria-label='Reply to Ogre'> &middot; Reply</a></span>		 
		</div>
		<p>Ah, I just looked it up on another site, that is how it is. I just found that odd when I first saw it.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95321">
		<div id="div-comment-95321" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">newUser</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95321">
		April 12, 2011 at 6:36 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95321#respond' onclick='return addComment.moveForm( "comment-95321", "95321", "respond", "86" )' aria-label='Reply to newUser'> &middot; Reply</a></span>		 
		</div>
		<p><code>/* Section: header */<br />
#include &lt;iostream&gt;<br />
#include &lt;fstream&gt;<br />
#include &lt;cstdlib&gt;<br />
#include &lt;string&gt;</p>
<p>/* Section: namespace */<br />
using namespace std;</p>
<p>/* Section: constant */<br />
const string NEWLINE = &quot;\n&quot; // similar to: #define NEWLINE &#039;\n&#039;</p>
<p>/* Section: prototype */<br />
void nfound( const string &amp;&quot;v_file&quot; );</p>
<p>int main( int argc, char *argv[] ) {<br />
  string the_file = &quot;test_file.txt&quot;;<br />
  if ( &quot;the_file&quot; ) {<br />
    cout &lt;&lt; &quot;File found!&quot;;<br />
  } else {<br />
    cout &lt;&lt; &quot;File not found!&quot;;<br />
    nfound( &quot;the_file&quot; );<br />
  }</p>
<p>  cin.get();<br />
}</p>
<p>void nfound( const string &amp;&quot;v_file&quot; ) {<br />
  ofstream a_file ( &quot;v_file&quot; );<br />
  a_file &lt;&lt; &quot;This text will go inside!NEWLINE&quot;;<br />
  a_file.close();<br />
}<br />
</code></p>
<p>This is my simple program that I want to check if a file exists, if not make it with some writting in it. The problem is I get these errors:<br />
<cite><br />
14: error: expected &#8216;,&#8217; or &#8216;;&#8217; before &#8216;void&#8217;<br />
In function &#8216;int main(int, char**)':<br />
22: error: &#8216;nfound&#8217; was not declared in this scope<br />
At global scope:<br />
28: error: expected &#8216;,&#8217; or &#8216;&#8230;&#8217; before string constant<br />
</cite></p>
<p>I&#8217;ve looked over the code and it seems right. None of the tutorials I&#8217;ve read (best by far! really love the code section you have!) deal with a string as a parameter. Last tutorial didn&#8217;t mention the string header (#include ), but including this still didn&#8217;t help.</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-95335">
		<div id="div-comment-95335" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">newUser</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95335">
		April 15, 2011 at 5:20 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95335#respond' onclick='return addComment.moveForm( "comment-95335", "95335", "respond", "86" )' aria-label='Reply to newUser'> &middot; Reply</a></span>		 
		</div>
		<p>I&#8217;ve made some minor adjustions, namely how I did namespaces (used the suggestion from the section) and I corrected the function parameter constant.</p>
<p><code>/* Section: header */<br />
#include &lt;iostream&gt;<br />
#include &lt;fstream&gt;<br />
#include &lt;cstdlib&gt;<br />
#include &lt;string&gt;</p>
<p>/* Section: constant */<br />
const std::string NEWLINE = &quot;\n&quot;</p>
<p>/* Section: prototype */<br />
void nfound( const std::string &amp;v_file );</p>
<p>int main( int argc, char *argv[] ) {<br />
  using namespace std;<br />
  string the_file = &quot;test_file.txt&quot;;<br />
  if ( &quot;the_file&quot; ) {<br />
    cout &lt;&lt; &quot;File found!&quot;;<br />
  } else {<br />
    cout &lt;&lt; &quot;File not found!&quot;;<br />
    nfound( &quot;the_file&quot; );<br />
  }</p>
<p>  cin.get();<br />
}</p>
<p>void nfound( const std::string &amp;v_file ) {<br />
  using namespace std;<br />
  ofstream a_file ( &quot;v_file&quot; );<br />
  a_file &lt;&lt; &quot;This text will go inside!NEWLINE&quot;;<br />
  a_file.close();<br />
}<br />
</code></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-95815">
		<div id="div-comment-95815" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/1c3080de1aa3c513c6cac2d406a28c11?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/1c3080de1aa3c513c6cac2d406a28c11?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Iodream</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95815">
		August 3, 2011 at 9:07 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95815#respond' onclick='return addComment.moveForm( "comment-95815", "95815", "respond", "86" )' aria-label='Reply to Iodream'> &middot; Reply</a></span>		 
		</div>
		<p>Hello. What if i want to access each symbol of a string array?<br />
Would it look something like this: </p>
<pre>

string  szStringArray[3];

for (int iii=0;iii&lt;3;iii++)
 for (int jjj=0;jjj&lt;szStringArrayAdd[iii].length();jjj++)
   szStringArrayAdd[jjj][iii]= // do something. 

</pre>
<p> ?</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-95903">
		<div id="div-comment-95903" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://127.0.0.1/' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95903">
		August 20, 2011 at 7:57 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95903#respond' onclick='return addComment.moveForm( "comment-95903", "95903", "respond", "86" )' aria-label='Reply to zingmars'> &middot; Reply</a></span>		 
		</div>
		<p>I&#8217;m not sure what you tried to do there, but the code looks really wrong.<br />
wouldn&#8217;t a single for loop suffice?</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-95915">
		<div id="div-comment-95915" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/1c3080de1aa3c513c6cac2d406a28c11?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/1c3080de1aa3c513c6cac2d406a28c11?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Iodream</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95915">
		August 22, 2011 at 3:42 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95915#respond' onclick='return addComment.moveForm( "comment-95915", "95915", "respond", "86" )' aria-label='Reply to Iodream'> &middot; Reply</a></span>		 
		</div>
		<p>Well, i initialize an array of 3 strings.<br />
Then the first loop goes through the indexes of the array and<br />
the 2nd loop through each character of the currently selected by the first loop string.<br />
Yes, i made a mistake when i initialize the array there should be a different name &#8220;szStringArrayAdd[3]&#8221;<br />
Im just trying to write a program and im getting errors (errors directly in Visual Studio&#8217;s code window)<br />
I am asking if what ive written above is legal.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even depth-3 clearfix" id="comment-95916">
		<div id="div-comment-95916" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/1c3080de1aa3c513c6cac2d406a28c11?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/1c3080de1aa3c513c6cac2d406a28c11?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Iodream</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-95916">
		August 22, 2011 at 3:43 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=95916#respond' onclick='return addComment.moveForm( "comment-95916", "95916", "respond", "86" )' aria-label='Reply to Iodream'> &middot; Reply</a></span>		 
		</div>
		<p>Well, i initialize an array of 3 strings.<br />
Then the first loop goes through the indexes of the array and<br />
the 2nd loop through each character of the currently selected by the first loop string.<br />
Yes, i made a mistake when i initialize the array there should be a different name &#8220;szStringArrayAdd[3]&#8221;<br />
Im just trying to write a program and im getting errors (errors directly in Visual Studio&#8217;s code window)</p>
<p>I am asking if what ive written above is legal.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-4 clearfix" id="comment-96116">
		<div id="div-comment-96116" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/21b2deaaa0bcf172aa88051b6cf7ba1f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://127.0.0.1/' rel='external nofollow' class='url'>zingmars</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-96116">
		October 8, 2011 at 4:55 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=96116#respond' onclick='return addComment.moveForm( "comment-96116", "96116", "respond", "86" )' aria-label='Reply to zingmars'> &middot; Reply</a></span>		 
		</div>
		<p>It&#8217;s legal, but confusing at first and you might need to overload operators if you want to print the strings.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-97827">
		<div id="div-comment-97827" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/11da31df57d1d2c72c94809fc0af52f5?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/11da31df57d1d2c72c94809fc0af52f5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">emailaddress1012</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-97827">
		September 23, 2012 at 8:52 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=97827#respond' onclick='return addComment.moveForm( "comment-97827", "97827", "respond", "86" )' aria-label='Reply to emailaddress1012'> &middot; Reply</a></span>		 
		</div>
		<p>I get something curious when I do the following:</p>
<p>char *szString = &#8220;string&#8221;;</p>
<p>cout &lt;&lt; sizeof(szString) &lt;&lt; endl;<br />
for (int nChar = 0; nChar &lt; sizeof(szString); nChar++)<br />
    cout &lt;&lt; static_cast(szString[nChar]) &lt;&lt; &quot; &quot;;</p>
<p>Result:<br />
4<br />
115 116 114 105</p>
<p>But when I declare char szString[] = &quot;string&quot; as is done in the tutorial, I get the expected result:</p>
<p>7<br />
115 116 114 105 110 103 0</p>
<p>Does anyone know why this is?  I thought these were equivalent ways of declaring C-style strings.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-97847">
		<div id="div-comment-97847" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/0c54c6aac6251e9ab15085068b061920?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/0c54c6aac6251e9ab15085068b061920?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">pravin_ms</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-97847">
		October 7, 2012 at 12:09 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=97847#respond' onclick='return addComment.moveForm( "comment-97847", "97847", "respond", "86" )' aria-label='Reply to pravin_ms'> &middot; Reply</a></span>		 
		</div>
		<p>This is because , you have declared szString as pointer.<br />
Pointer is a variable that holds address of another variable. The address is a number i.e. nothing but a kind of integer.</p>
<p>So using sizeof(szStrings) is similar to using sizeof(int) which returns the size of int in bytes. </p>
<p>To confirm this run the following code :<br />
void main()<br />
{<br />
int a=20;<br />
cout&lt;&lt;sizeof(a);<br />
return ;<br />
}<br />
It should display value 4 i.e. 4 bytes.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-98029">
		<div id="div-comment-98029" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c49dfc5a0f2932f0c0a92218ae1a3c93?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c49dfc5a0f2932f0c0a92218ae1a3c93?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">MrFinn</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-98029">
		December 15, 2012 at 8:34 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=98029#respond' onclick='return addComment.moveForm( "comment-98029", "98029", "respond", "86" )' aria-label='Reply to MrFinn'> &middot; Reply</a></span>		 
		</div>
		<p>For those outside the USA, note that you will want to use 2 byte unicode characters instead of ASCII (1 byte) character set which is a small subset of Unicode. Most of the stuff in this chapter apply only to ASCII and commands for unicode character manipulation take a different form.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-98180">
		<div id="div-comment-98180" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/fd124916462d1ca8f25aec3308a497c4?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/fd124916462d1ca8f25aec3308a497c4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">abhi4556</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-98180">
		February 12, 2013 at 3:48 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=98180#respond' onclick='return addComment.moveForm( "comment-98180", "98180", "respond", "86" )' aria-label='Reply to abhi4556'> &middot; Reply</a></span>		 
		</div>
		<p>what is wrong in this code<br />
its giving run time error<br />
int main()<br />
{<br />
	int y=4;<br />
	int *x=new int;<br />
	x=&amp;y;<br />
	cout&lt;&lt;&quot;val of y::&quot;&lt;&lt;*x;<br />
	delete x;<br />
	return 0;<br />
}</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-225266">
		<div id="div-comment-225266" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a6a5038a5eea0d0057cc0e67961bbe58?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a6a5038a5eea0d0057cc0e67961bbe58?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">stunner</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-225266">
		November 23, 2014 at 2:53 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=225266#respond' onclick='return addComment.moveForm( "comment-225266", "225266", "respond", "86" )' aria-label='Reply to stunner'> &middot; Reply</a></span>		 
		</div>
		<p>The crash is happening at this line -<br />
delete x;<br />
You are trying to deallocate memory, &#8220;x&#8221; doesn&#8217;t point to anymore.<br />
The address to the dynamic memory block was lost when you did this:<br />
x = &amp;y;</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-125815">
		<div id="div-comment-125815" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/cd2dfa00d89188ed95252ea5db4ff4ce?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/cd2dfa00d89188ed95252ea5db4ff4ce?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">fuhgawz</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-125815">
		February 17, 2014 at 3:35 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=125815#respond' onclick='return addComment.moveForm( "comment-125815", "125815", "respond", "86" )' aria-label='Reply to fuhgawz'> &middot; Reply</a></span>		 
		</div>
		<p>Is there a way to forward declare a function that uses strings if i declared those strings in main?</p>
<p>your tutorial is the best tutorial i&#8217;ve seen in my life. thanks</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-225166">
		<div id="div-comment-225166" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a6a5038a5eea0d0057cc0e67961bbe58?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a6a5038a5eea0d0057cc0e67961bbe58?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">stunner</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-225166">
		November 23, 2014 at 12:34 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=225166#respond' onclick='return addComment.moveForm( "comment-225166", "225166", "respond", "86" )' aria-label='Reply to stunner'> &middot; Reply</a></span>		 
		</div>
		<p>char szString[] = &#8220;string&#8221;;</p>
<p>//prints char at 0th index i.e. s<br />
cout&lt;&lt;*szString;  </p>
<p>//Prints the entire string i.e. string<br />
cout&lt;&lt;szString;<br />
//Why does it not print the address as it would do with int array in below code.</p>
<p>int arrayName[2] = {2,3};<br />
cout&lt;&lt;arrayName; //Prints the address</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-251083">
		<div id="div-comment-251083" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/920c02286a0b5a49f5a399592ca98890?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/920c02286a0b5a49f5a399592ca98890?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Seuterr</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-251083">
		January 4, 2015 at 7:48 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=251083#respond' onclick='return addComment.moveForm( "comment-251083", "251083", "respond", "86" )' aria-label='Reply to Seuterr'> &middot; Reply</a></span>		 
		</div>
		<p>Hi. I have been learning C++ via your site. One thing that I just cannot understand and/ or wrap my head around is null terminators. What is the mere point of a null terminator? I get that it ends in a </p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7898efe3e518919605" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7898efe3e518919605-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7898efe3e518919605-1">"</div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0002 seconds] -->
<p>. I don&#8217;t much care why it uses a double quote to represent this, more of what a null terminator is. I read the one and only part where you introduce it multiple times, and saying the Hungarian Notation isn&#8217;t helping me one bit. I just don&#8217;t understand what it does, and what the difference between not having a null terminator and having one is.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-251269">
		<div id="div-comment-251269" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e839f7439928fcd397f79b24b50f42ff?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e839f7439928fcd397f79b24b50f42ff?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">newb</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-251269">
		January 27, 2015 at 11:02 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=251269#respond' onclick='return addComment.moveForm( "comment-251269", "251269", "respond", "86" )' aria-label='Reply to newb'> &middot; Reply</a></span>		 
		</div>
		<p>sir my program is this ::<br />
#include<br />
using namespace std ;<br />
int main ()<br />
{<br />
	char szstring[5] ;<br />
    cin&gt;&gt;szstring;<br />
    cout&lt;&lt;&quot;you entered  :&quot;&lt;&lt;szstring&lt;&lt;endl;<br />
    return 0;<br />
}<br />
evrything is ok .but, according to program if my input is more than 4 char then it shold show overflow .but this is not showing . why ??</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-251270">
		<div id="div-comment-251270" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e839f7439928fcd397f79b24b50f42ff?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e839f7439928fcd397f79b24b50f42ff?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">newb</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-251270">
		January 27, 2015 at 11:30 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=251270#respond' onclick='return addComment.moveForm( "comment-251270", "251270", "respond", "86" )' aria-label='Reply to newb'> &middot; Reply</a></span>		 
		</div>
		<p>when i&#8217;m using strcpy().error shows  &#8216;strcpy&#8217; was not declared in this scope. why??</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-251577">
		<div id="div-comment-251577" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3f5b2ed4038c7f8958b0376ad7bd5677?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3f5b2ed4038c7f8958b0376ad7bd5677?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Josh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/66-c-style-strings/#comment-251577">
		February 20, 2015 at 10:16 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/66-c-style-strings/?replytocom=251577#respond' onclick='return addComment.moveForm( "comment-251577", "251577", "respond", "86" )' aria-label='Reply to Josh'> &middot; Reply</a></span>		 
		</div>
		<p>void random()<br />
{<br />
&nbsp;&nbsp;&nbsp;&nbsp;std::string strJake;<br />
&nbsp;&nbsp;&nbsp;&nbsp;std::cin &gt;&gt; strJake;<br />
}</p>
<p>everything else is fine, but the compiler says: Error: no operator &quot;&gt;&gt;&quot; matches these operands.</p>
<p>please help</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/66-c-style-strings/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>twenty &#8722; sixteen = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4OTA4MXR5bTdtZjVxZ3o3ZGJwYWozMW04NA==" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432189081" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='86' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="50b4867af3" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="207"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/66-c-style-strings\/":86};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/66-c-style-strings/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'86',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '86' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.938 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:18:01 -->

<!-- Compression = gzip -->
<!-- super cache -->

