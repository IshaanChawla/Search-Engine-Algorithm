<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
      <title>Java Logging API - Tutorial</title>
      <script type='text/javascript'>window.mod_pagespeed_start = Number(new Date());</script><link rel="stylesheet" type="text/css" href="http://www.vogella.com/css/A.articles.css.pagespeed.cf.R8TsdYc8Ks.css">
      <meta name="generator" content="DocBook XSL Stylesheets V1.77.1">
      <meta name="description" content="Java Logging This article describes how to use the Logging API in Java programs. It includes an example for creating an HTML logger.">
      <link rel="shortcut icon" href="http://www.vogella.com/favicon.ico">
      <meta name="viewport" content="width=device-width, initial-scale=1">
   </head>
   <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
      
      
      <!-- Google analytics (Jennifer) -->
      
      <script type="text/javascript">var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-3967758-1']);_gaq.push(['_setDomainName','vogella.com']);_gaq.push(['_setAllowLinker',true]);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();</script>
      
      
      
      <!-- Load jQuery -->
      <script type="text/javascript" src="http://www.vogella.com/javascript/jquery/jquery.js.pagespeed.jm.LynoS8h5RR.js"></script>
      
      <!-- jQuery Hide Buttons -->
      <script type="text/javascript">//<![CDATA[
var fixed=false;$(document).scroll(function(){if($(this).scrollTop()>955){if(!fixed){fixed=true;$('.bottom_left').css({display:'block'});$('.bottom_right').css({display:'block'});}}else{if(fixed){fixed=false;$('.bottom_left').css({display:'none'});$('.bottom_right').css({display:'none'});}}});
//]]></script>
      
      
      <!-- Lake Quincy Ads - old way now replaced with Lake Quincy Ads Responsive
<script type='text/javascript'>
	function _dmBootstrap(file) {
		var _dma = document.createElement('script');
		_dma.type = 'text/javascript';
		_dma.async = true;
		_dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
	}
	function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
	(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000);})();
</script>-->
      
      
      <!-- Lake Quincy Ads Responsive -->  
      <script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script>
      
      <script type="text/javascript">googletag.cmd.push(function(){var mapping=googletag.sizeMapping().addSize([320,700],[300,250]).addSize([750,200],[300,250]).addSize([1170,200],[728,90]).build();googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/right',[160,600],'ad-left').addService(googletag.pubads()).setTargeting('left');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/beforeTOC',[[300,250],[728,90]],'ad-beforeTOC').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('beforeTOC');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween01',[[300,250],[728,90]],'ad-inBetween01').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween01');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween02',[[300,250],[728,90]],'ad-inBetween02').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween02');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween03',[[300,250],[728,90]],'ad-inBetween03').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween03');googletag.pubads().enableSingleRequest();googletag.enableServices();});</script>
      
      <div id="headerpart">
         
         	
         <div id="logo">
            		<a title="vogella.com" href="http://www.vogella.com">
               			<img src="http://www.vogella.com/img/logo/xindex_logo.png.pagespeed.ic.W70tcDQqll.png" alt="vogella.com"> 
               		</a>
            	
         </div> 
         <!-- logo -->
         	
         	
         <div id="topnav">
            		
            <ul id="home" class="topnav">
               			
               <li id="home-icon"><a href="http://www.vogella.com/"></a></li>
               			
               <li class="currentpage"> <a href="http://www.vogella.com/tutorials/">Tutorials</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/tutorials/android.html">Android Programming</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/eclipseide.html">Eclipse IDE</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/eclipse.html">Eclipse RCP/Plug-ins</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/versioncontrol.html">Version Control</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/web.html">Web</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/java.html">Java</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/technology.html">Technology</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/google.html">Google</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/algorithms.html">Algorithms</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/designpattern.html">Design Pattern</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               			
               <li><a href="http://www.vogella.com/training/">Services</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/training/android/index.html">Android Development Training</a>
                        						
                        <ul>
                           							
                           <li><a href="http://www.vogella.com/training/android/androidprofessional.html">Android Professional</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/android/androidtesting.html">Android Testing and Appl. Optimization</a></li>
                           						
                        </ul>
                        					
                     </li>
                     					
                     <li><a href="http://www.vogella.com/training/eclipse/index.html">Eclipse Development Training</a>
                        						
                        <ul>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsercp.html">Eclipse RCP</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseide.html">Eclipse IDE Expert</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsercpmigration.html">Eclipse RCP Migration</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsecontribution.html">	Contributing to Eclipse</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseplugin.html">Eclipse IDE Plug-in Development</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/tycho.html">Maven/Tycho</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/rcpjavaeespring.html">Eclipse RCP with Java EE and Spring</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseoxygen.html">oXygen in Eclipse</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsenattable.html">NatTable</a></li>
                           						
                        </ul>
                        					
                     </li>
                     					
                     <li><a href="http://www.vogella.com/training/git.html">Git Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/groovy.html">Groovy Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/gradle.html">Gradle Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/java.html">Java Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/spring.html">Spring Workshop</a></li>
                     					
                     <li><a href="http://www.vogella.com/consulting/">Expert Consulting</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/products/">Products</a>
                  				
                  <ul>
                     					
                     <li><a href="http://saneclipse.vogella.com">saneclipse</a></li>
                     					
                     <li><a href="http://codemodify.vogella.com">CodeModify</a></li>
                     					
                     <li><a href="http://preferencespy.vogella.com">PreferenceSpy</a></li>
                     					
                     <!--<li><a href="http://e4tools.vogella.com">e4 tools</a></li>
					<li><a href="http://e4perspectiveswitcher.vogella.com">e4 perspectiveSwitcher</a></li>-->
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/books/">Books</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/books/eclipsecontribution.html">Contributing to the Eclipse Project</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/eclipsercp.html">Eclipse RCP</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/eclipseide.html">Eclipse IDE</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/git.html">Git</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/android.html">Android SQlite and ContentProvider</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/company/">Company</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/aboutvogella.html">About us</a></li>
                     					
                     <li><a href="http://www.vogella.com/people/index.html">People at vogella</a></li>
                     					
                     <li><a href="http://www.vogella.com/customers.html" onclick="_gaq.push(['_trackEvent', 'Customers', 'clicked', 'Header']);">Reference Customers</a></li>
                     					
                     <li><a href="http://blog.vogella.com/">Blog</a></li>
                     					
                     <li><a href="http://www.vogella.com/jobs/">Jobs</a></li>
                     					
                     <li><a href="http://www.vogella.com/faq.html">FAQ</a></li>
                     					
                     <li><a href="http://www.vogella.com/legal.html">Legal</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/support.html">Donate</a></li>
               			
               <li><a href="http://www.vogella.com/contact.html">Contact us</a></li>
               		
            </ul>
            	
         </div>
         <!-- topnav -->
         	
         
         	
         <div id="searchfixed">
            		
            <form action="http://www.vogella.com/search.html" id="cse-search-box">
               			
               <div id="searchwrapper">
                  
                  				<input type="hidden" name="cx" value="partner-pub-3851443674951530:3991491935">
                  				<input type="hidden" name="cof" value="FORID:10">
                  				<input type="hidden" name="ie" value="UTF-8">
                  				<input type="text" placeholder="Search" id="search_field" name="q" size="55">
                  				<input type="image" src="http://www.vogella.com/img/icons/xsrch.png.pagespeed.ic.BP8TtuQRzJ.png" id="search_button" name="sa" alt="Search">
                  			
               </div>
               		
            </form>
            	
         </div> 
         <!-- searchfixed -->
         
         
      </div> 
      <!-- headerpart -->
      
      
      <div id="leftcol">
         
         	<br>
         	<br>
         	
         	<a href="http://www.vogella.com/support.html">
            		<img src="http://www.vogella.com/img/common/140x150xvogella-donate.png.pagespeed.ic.gMuY8kQC6X.png" width="140" height="150" alt="Support free tutorials" title="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Top tutorial']);"></a>
         
         	<br>
         	<br>
         
         	<script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         	
         <!-- LeftColumn -->
         	<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="6294971031"></ins>
         	<script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         
         	<p></p>
         	
         	<br>
         	<br>
         
         	
         <!-- Nonresponsive Lake Quincy 160x600 Wide Skycraper code
	<div data-type="ad" data-publisher="lqm.javaeclipseandroid.site" data-zone="right" data-format="160x600"></div>-->
         	
         	
         <!-- Responsive Lake Quincy Ads -->
         	
         <div id="ad-left">
            		<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-left');});</script>
            	</div>
         
      </div> 
      <!-- leftcolumn -->
      
      
      <div id="rightcol">
         
         	
         <!-- vogellas own advertising for training and books --> 	
         	
         <p class="training-bg">
            		<a class="image-z" href="http://www.vogella.com/training/" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'whole Box']);">
               			<img src="http://www.vogella.com/img/training/200x364xvogellatraining_ad.png.pagespeed.ic.KQGlbyMRAP.png" height="364" width="200" alt="vogella training">
               		</a>
            		<a class="btn-training button1" href="http://www.vogella.com/training/" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'training']);">Training</a>
            		<a class="btn-training button2" href="http://www.vogella.com/books/index.html" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'books']);">Books</a>
            	
         </p> 
         	
         	
         <div class="bottom_right">
            		
            <div class="social_media">
               			<a href="http://www.twitter.com/vogellacompany">
                  				
                  <h1>FOLLOW<br>ME ON
                  </h1> 
                  				<img src="http://www.vogella.com/img/tutoriallinks/xtwitter.png.pagespeed.ic.5z4YhYIkb2.png" alt="Follow me on twitter">
                  			</a>
               		
            </div>
            <!-- social_media -->
            
            		
            <div class="social_media">
               			<a rel="me" href="https://profiles.google.com/104044918586174763681">
                  				
                  <h1>FOLLOW<br>ME ON
                  </h1> 
                  				<img src="http://www.vogella.com/img/tutoriallinks/xgoogle_plus.png.pagespeed.ic.d6W0KZShGF.png" alt="Follow me on Google+">
                  			</a>
               		
            </div>
            <!-- social_media -->
            	
         </div> 
         <!-- bottom_right -->
         	
         	
         <div class="bottom_left">
            	
            <div class="services">
               		<a href="http://www.vogella.com/training/index.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/xtraining.png.pagespeed.ic.xjFDFI8z_E.png" alt="Get training" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'Fix buttom left training']);">
                  	
                  <h1>GET TRAINING</h1>
                  	</a>
               
            </div>
            <!-- services -->
            	
            <div class="services">
               	<a href="http://www.vogella.com/books/index.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/books.png.pagespeed.ce.iDpNUUudib.png" alt="Purchase books" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'Fix buttom left books']);">
                  	
                  <h1>PURCHASE BOOKS</h1>
                  	</a>
               
            </div>
            <!-- services -->
            	
            <div class="services">	
               	<a href="http://www.vogella.com/support.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/xdonate.png.pagespeed.ic.DDVinfleA6.png" alt="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Fix buttom left']);">
                  	
                  <h1>SUPPORT FREE TUTORIAL</h1>
                  	</a>
               
               
            </div> 
            <!-- services -->       
            
         </div> 
         <!-- bottom_left -->
         
         
      </div> 
      <!--rightcol-->
      
      
      <div class="article">
         <div class="titlepage">
            <div>
               <div>
                  <h2 class="title"><a name="d458057e1"></a>Java Logging API - Tutorial
                  </h2>
               </div>
               <div>
                  <div class="author">
                     <h3 class="author"><span class="firstname">Lars</span> <span class="surname">Vogel</span></h3>
                  </div>
               </div>
               <div>
                  <p class="releaseinfo">
                     
                  </p>
                  <p>Version 1.7</p>
                  <p class="releaseinfo">
                     
                  </p>
               </div>
               <div>
                  <p class="copyright">Copyright ? 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015 vogella GmbH</p>
               </div>
               <div>
                  <p class="pubdate">15.05.2015</p>
               </div>
               <div>
                  <div class="abstract"><a name="abstract"></a><p class="title"><b>Java Logging</b></p>
                     <p>
                        This article describes how to use the Logging API in
                        Java
                        programs. It includes an example for creating an HTML logger.
                        
                     </p>
                  </div>
               </div>
            </div>
            <div>
               <div xmlns:fo="http://www.w3.org/1999/XSL/Format" id="ad-beforeTOC"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-beforeTOC');});</script></div>
            </div>
            <hr>
         </div>
         <div class="toc">
            <p><b>Table of Contents</b></p>
            <dl>
               <dt><span class="section"><a href="#overview">1. Overview</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#overview_logger">1.1. Logging</a></span></dt>
                     <dt><span class="section"><a href="#overview_loggerjava">1.2. Logging in Java</a></span></dt>
                     <dt><span class="section"><a href="#overview_create">1.3. Create a logger</a></span></dt>
                     <dt><span class="section"><a href="#overview_level">1.4. Level</a></span></dt>
                     <dt><span class="section"><a href="#general_handler">1.5. Handler</a></span></dt>
                     <dt><span class="section"><a href="#general_formatter">1.6. Formatter</a></span></dt>
                     <dt><span class="section"><a href="#general_manager">1.7. Log Manager</a></span></dt>
                     <dt><span class="section"><a href="#chapter20s1a">1.8. Best Practices</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#logexample">2. Example</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#logexample_createLogger">2.1. Create the logger</a></span></dt>
                     <dt><span class="section"><a href="#logexample_use">2.2. Use the logger</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#supportandlicense">3. About this website</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#thankyou">3.1. Donate to support free tutorials</a></span></dt>
                     <dt><span class="section"><a href="#questions">3.2. Questions and discussion</a></span></dt>
                     <dt><span class="section"><a href="#thankyou">3.3. License for this tutorial and its code</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#resources">4. Links and Literature</a></span></dt>
            </dl>
         </div>
         <script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         
         <!-- Responsive - After Table of Content -->
         <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-3851443674951530" data-ad-slot="4470606330" data-ad-format="auto"></ins>
         <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="overview"></a>1.&nbsp;Overview
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="overview_logger"></a>1.1.&nbsp;Logging
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  <em class="wordasword">Logging</em>
                  is the process of writing log messages during the execution
                  of a
                  program to a central place. This logging allows you to
                  report and
                  persist error and warning messages as well as info
                  messages (e.g.,
                  runtime statistics) so that the messages can
                  later be retrieved and
                  analyzed.
                  
               </p>
               <p>
                  The object which performs the logging in applications
                  is typically just called <em class="wordasword">Logger</em>.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="overview_loggerjava"></a>1.2.&nbsp;Logging in Java
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Java contains the
                  <em class="wordasword">Java Logging API</em>.
                  This
                  logging API allows you to
                  configure which
                  message types are
                  written. Individual classes can use this logger to write messages to
                  the configured log files.
                  
               </p>
               <p>
                  The
                  <code class="code">java.util.logging</code>
                  package provides the logging
                  capabilities
                  via the
                  <code class="code">Logger</code>
                  class.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="overview_create"></a>1.3.&nbsp;Create a logger
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  To create a logger in your Java code,
                  you can use the
                  following
                  snippet.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">import</span> java.util.logging.Logger;

<em class="hl-comment" style="color: #080">// assumes the current class is called logger</em>
<span class="hl-keyword">private</span> <span class="hl-keyword">final</span> <span class="hl-keyword">static</span> Logger LOGGER = Logger.getLogger(MyClass.<span class="hl-keyword">class</span>.getName()); </pre><p>
                  
               </p>
               <p>
                  The
                  <code class="code">Logger</code>
                  you create is actually a hierarchy of Loggers, and a <code class="code">.</code> (dot) in the
                  hierarchy indicates a level in the hierarchy. So if you get a Logger
                  for the
                  <code class="code">com.example</code>
                  key, this Logger is a child of the
                  <code class="code">com</code>
                  Logger and the
                  <code class="code">com</code>
                  Logger is child of the Logger for the empty <code class="code">String</code>. You can
                  configure
                  the main logger and this affects all its children.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="overview_level"></a>1.4.&nbsp;Level
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  The log levels define the severity of a message. The
                  <code class="code">Level</code>
                  class
                  is used to define which messages should be written to
                  the log.
                  
               </p>
               <p>
                  The following lists the Log Levels in descending order:
                  
               </p>
               <p>
                  
               </p>
               <div class="itemizedlist">
                  <ul class="itemizedlist" type="disc">
                     <li class="listitem">
                        <p>SEVERE (highest)</p>
                     </li>
                     <li class="listitem">
                        <p>WARNING</p>
                     </li>
                     <li class="listitem">
                        <p>INFO</p>
                     </li>
                     <li class="listitem">
                        <p>CONFIG</p>
                     </li>
                     <li class="listitem">
                        <p>FINE</p>
                     </li>
                     <li class="listitem">
                        <p>FINER</p>
                     </li>
                     <li class="listitem">
                        <p>FINEST</p>
                     </li>
                  </ul>
               </div>
               <p>
                  
               </p>
               <p>
                  
               </p>
               <p>
                  In addition to that you also have the levels
                  <span class="command"><strong>OFF</strong></span>
                  and
                  <span class="command"><strong>ALL</strong></span>
                  to turn the logging off or to log everything.
                  
               </p>
               <p>
                  For example, the following code sets the logger to the
                  <code class="code">info</code>
                  level,
                  which means all messages with severe, warning and info will
                  be
                  logged.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting">LOGGER.setLevel(Level.INFO); </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="general_handler"></a>1.5.&nbsp;Handler
                        </h3>
                     </div>
                  </div>
               </div>
               <p>Each logger can have access to several handlers.</p>
               <p>
                  The handler receives the log message from the logger and
                  exports
                  it to a certain target.
                  
               </p>
               <p>
                  A handler can be turned off with the
                  <code class="code">setLevel(Level.OFF)</code>
                  method
                  and
                  turned on
                  with
                  <code class="code">setLevel()</code>
                  method.
                  
               </p>
               <p>
                  You have several standard handlers.
                  The following list gives
                  some
                  examples.
                  
               </p>
               <p>
                  
               </p>
               <div class="itemizedlist">
                  <ul class="itemizedlist" type="disc">
                     <li class="listitem">
                        <p>ConsoleHandler: Write the log message to console
                           
                        </p>
                     </li>
                     <li class="listitem">
                        <p>FileHandler: Writes the log message to file
                           
                        </p>
                     </li>
                  </ul>
               </div>
               <p>
                  
               </p>
               <p>
                  Log levels
                  <span class="command"><strong>INFO</strong></span>
                  and higher will be automatically written to the console.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="general_formatter"></a>1.6.&nbsp;Formatter
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Each handler's output can be configured with a formatter
                  
               </p>
               <p>Available formatter</p>
               <div class="itemizedlist">
                  <ul class="itemizedlist" type="disc">
                     <li class="listitem">
                        <p>SimpleFormatter: Generate all messages as text
                           
                        </p>
                     </li>
                     <li class="listitem">
                        <p>XMLFormatter: Generates XML output for the log
                           messages
                           
                        </p>
                     </li>
                  </ul>
               </div>
               <p>
                  You can also build your own formatter. The following is an
                  example of a formatter which will create HTML output.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.logger;&#xD;
&#xD;
<span class="hl-keyword">import</span> java.text.SimpleDateFormat;&#xD;
<span class="hl-keyword">import</span> java.util.Date;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Formatter;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Handler;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Level;&#xD;
<span class="hl-keyword">import</span> java.util.logging.LogRecord;&#xD;
&#xD;
<em class="hl-comment" style="color: #080">// this custom formatter formats parts of a log record to a single line</em>&#xD;
<span class="hl-keyword">class</span> MyHtmlFormatter <span class="hl-keyword">extends</span> Formatter {&#xD;
  <em class="hl-comment" style="color: #080">// this method is called for every log records</em>&#xD;
  <span class="hl-keyword">public</span> String format(LogRecord rec) {&#xD;
    StringBuffer buf = <span class="hl-keyword">new</span> StringBuffer(<span class="hl-number">1000</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;tr&gt;\n"</span>);&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// colorize any levels &gt;= WARNING in red</em>&#xD;
    <span class="hl-keyword">if</span> (rec.getLevel().intValue() &gt;= Level.WARNING.intValue()) {&#xD;
      buf.append(<span class="hl-string" style="color:blue">"\t&lt;td style=\"color:red\"&gt;"</span>);&#xD;
      buf.append(<span class="hl-string" style="color:blue">"&lt;b&gt;"</span>);&#xD;
      buf.append(rec.getLevel());&#xD;
      buf.append(<span class="hl-string" style="color:blue">"&lt;/b&gt;"</span>);&#xD;
    } <span class="hl-keyword">else</span> {&#xD;
      buf.append(<span class="hl-string" style="color:blue">"\t&lt;td&gt;"</span>);&#xD;
      buf.append(rec.getLevel());&#xD;
    }&#xD;
&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/td&gt;\n"</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"\t&lt;td&gt;"</span>);&#xD;
    buf.append(calcDate(rec.getMillis()));&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/td&gt;\n"</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"\t&lt;td&gt;"</span>);&#xD;
    buf.append(formatMessage(rec));&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/td&gt;\n"</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/tr&gt;\n"</span>);&#xD;
&#xD;
    <span class="hl-keyword">return</span> buf.toString();&#xD;
  }&#xD;
&#xD;
  <span class="hl-keyword">private</span> String calcDate(<span class="hl-keyword">long</span> millisecs) {&#xD;
    SimpleDateFormat date_format = <span class="hl-keyword">new</span> SimpleDateFormat(<span class="hl-string" style="color:blue">"MMM dd,yyyy HH:mm"</span>);&#xD;
    Date resultdate = <span class="hl-keyword">new</span> Date(millisecs);&#xD;
    <span class="hl-keyword">return</span> date_format.format(resultdate);&#xD;
  }&#xD;
&#xD;
  <em class="hl-comment" style="color: #080">// this method is called just after the handler using this</em>&#xD;
  <em class="hl-comment" style="color: #080">// formatter is created</em>&#xD;
  <span class="hl-keyword">public</span> String getHead(Handler h) {&#xD;
      <span class="hl-keyword">return</span> <span class="hl-string" style="color:blue">"&lt;!DOCTYPE html&gt;\n&lt;head&gt;\n&lt;style&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"table { width: 100% }\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"th { font:bold 10pt Tahoma; }\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"td { font:normal 10pt Tahoma; }\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"h1 {font:normal 11pt Tahoma;}\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;/style&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;/head&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;body&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;h1&gt;"</span> + (<span class="hl-keyword">new</span> Date()) + <span class="hl-string" style="color:blue">"&lt;/h1&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;table border=\"0\" cellpadding=\"5\" cellspacing=\"3\"&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;tr align=\"left\"&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"\t&lt;th style=\"width:10%\"&gt;Loglevel&lt;/th&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"\t&lt;th style=\"width:15%\"&gt;Time&lt;/th&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"\t&lt;th style=\"width:75%\"&gt;Log Message&lt;/th&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;/tr&gt;\n"</span>;&#xD;
    }&#xD;
&#xD;
  <em class="hl-comment" style="color: #080">// this method is called just after the handler using this</em>&#xD;
  <em class="hl-comment" style="color: #080">// formatter is closed</em>&#xD;
  <span class="hl-keyword">public</span> String getTail(Handler h) {&#xD;
    <span class="hl-keyword">return</span> <span class="hl-string" style="color:blue">"&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;"</span>;&#xD;
  }&#xD;
} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="general_manager"></a>1.7.&nbsp;Log Manager
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  The log manager is responsible for creating and managing the
                  logger and the maintenance of the configuration.
                  
               </p>
               <p>
                  We could set the logging level for a package, or even a set
                  of
                  packages, by calling the
                  <code class="code">LogManager.setLevel(String name,
                     Level level)
                     </code>
                  method. So, for example, we could set the
                  logging level of all loggers
                  to <code class="code">Level.FINE</code> by
                  making this call:
                  
               </p>
               <p>
                  
               </p><pre class="programlisting">LogManager.getLogManager().getLogger(Logger.GLOBAL_LOGGER_NAME).setLevel(Level.FINE); </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="chapter20s1a"></a>1.8.&nbsp;Best Practices
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  It is common practice to use the fully qualified name of
                  each
                  class whose activity is being logged as a message
                  category, because
                  this allows developers to fine-tune log
                  settings for each class.
                  
               </p>
               <p>
                  Using the fully qualified class name of your class as the
                  name of
                  your Logger is the approach recommended by the
                  Logging API
                  documentation.
                  
               </p>
            </div>
         </div>
         <!-- Non responsive Lake Quincy Ads
<div data-type="ad" data-publisher="lqm.javaeclipseandroid.site" data-zone="inBetween01" data-format="728x90">
</div> -->
         <!-- Responsive Lake Quincy Ads -->
         <div id="ad-inBetween01">
            	<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-inBetween01');});</script>
            </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="logexample"></a>2.&nbsp;Example
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="logexample_createLogger"></a>2.1.&nbsp;Create the logger
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  This example is stored in the project called
                  <em class="wordasword">com.vogella.logger</em>.
                  
               </p>
               <p>Create your own formatter class.</p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.logger;&#xD;
&#xD;
<span class="hl-keyword">import</span> java.text.SimpleDateFormat;&#xD;
<span class="hl-keyword">import</span> java.util.Date;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Formatter;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Handler;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Level;&#xD;
<span class="hl-keyword">import</span> java.util.logging.LogRecord;&#xD;
&#xD;
<em class="hl-comment" style="color: #080">// this custom formatter formats parts of a log record to a single line</em>&#xD;
<span class="hl-keyword">class</span> MyHtmlFormatter <span class="hl-keyword">extends</span> Formatter {&#xD;
  <em class="hl-comment" style="color: #080">// this method is called for every log records</em>&#xD;
  <span class="hl-keyword">public</span> String format(LogRecord rec) {&#xD;
    StringBuffer buf = <span class="hl-keyword">new</span> StringBuffer(<span class="hl-number">1000</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;tr&gt;\n"</span>);&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// colorize any levels &gt;= WARNING in red</em>&#xD;
    <span class="hl-keyword">if</span> (rec.getLevel().intValue() &gt;= Level.WARNING.intValue()) {&#xD;
      buf.append(<span class="hl-string" style="color:blue">"\t&lt;td style=\"color:red\"&gt;"</span>);&#xD;
      buf.append(<span class="hl-string" style="color:blue">"&lt;b&gt;"</span>);&#xD;
      buf.append(rec.getLevel());&#xD;
      buf.append(<span class="hl-string" style="color:blue">"&lt;/b&gt;"</span>);&#xD;
    } <span class="hl-keyword">else</span> {&#xD;
      buf.append(<span class="hl-string" style="color:blue">"\t&lt;td&gt;"</span>);&#xD;
      buf.append(rec.getLevel());&#xD;
    }&#xD;
&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/td&gt;\n"</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"\t&lt;td&gt;"</span>);&#xD;
    buf.append(calcDate(rec.getMillis()));&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/td&gt;\n"</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"\t&lt;td&gt;"</span>);&#xD;
    buf.append(formatMessage(rec));&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/td&gt;\n"</span>);&#xD;
    buf.append(<span class="hl-string" style="color:blue">"&lt;/tr&gt;\n"</span>);&#xD;
&#xD;
    <span class="hl-keyword">return</span> buf.toString();&#xD;
  }&#xD;
&#xD;
  <span class="hl-keyword">private</span> String calcDate(<span class="hl-keyword">long</span> millisecs) {&#xD;
    SimpleDateFormat date_format = <span class="hl-keyword">new</span> SimpleDateFormat(<span class="hl-string" style="color:blue">"MMM dd,yyyy HH:mm"</span>);&#xD;
    Date resultdate = <span class="hl-keyword">new</span> Date(millisecs);&#xD;
    <span class="hl-keyword">return</span> date_format.format(resultdate);&#xD;
  }&#xD;
&#xD;
  <em class="hl-comment" style="color: #080">// this method is called just after the handler using this</em>&#xD;
  <em class="hl-comment" style="color: #080">// formatter is created</em>&#xD;
  <span class="hl-keyword">public</span> String getHead(Handler h) {&#xD;
      <span class="hl-keyword">return</span> <span class="hl-string" style="color:blue">"&lt;!DOCTYPE html&gt;\n&lt;head&gt;\n&lt;style&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"table { width: 100% }\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"th { font:bold 10pt Tahoma; }\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"td { font:normal 10pt Tahoma; }\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"h1 {font:normal 11pt Tahoma;}\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;/style&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;/head&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;body&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;h1&gt;"</span> + (<span class="hl-keyword">new</span> Date()) + <span class="hl-string" style="color:blue">"&lt;/h1&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;table border=\"0\" cellpadding=\"5\" cellspacing=\"3\"&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;tr align=\"left\"&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"\t&lt;th style=\"width:10%\"&gt;Loglevel&lt;/th&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"\t&lt;th style=\"width:15%\"&gt;Time&lt;/th&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"\t&lt;th style=\"width:75%\"&gt;Log Message&lt;/th&gt;\n"</span>&#xD;
          + <span class="hl-string" style="color:blue">"&lt;/tr&gt;\n"</span>;&#xD;
    }&#xD;
&#xD;
  <em class="hl-comment" style="color: #080">// this method is called just after the handler using this</em>&#xD;
  <em class="hl-comment" style="color: #080">// formatter is closed</em>&#xD;
  <span class="hl-keyword">public</span> String getTail(Handler h) {&#xD;
    <span class="hl-keyword">return</span> <span class="hl-string" style="color:blue">"&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;"</span>;&#xD;
  }&#xD;
} </pre><p>
                  
               </p>
               <p>
                  Initialize the logger via the following code. This Logger class
                  uses the new HTML formatter you created.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.logger;&#xD;
&#xD;
<span class="hl-keyword">import</span> java.io.IOException;&#xD;
<span class="hl-keyword">import</span> java.util.logging.FileHandler;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Formatter;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Level;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Logger;&#xD;
<span class="hl-keyword">import</span> java.util.logging.SimpleFormatter;&#xD;
&#xD;
<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> MyLogger {&#xD;
  <span class="hl-keyword">static</span> <span class="hl-keyword">private</span> FileHandler fileTxt;&#xD;
  <span class="hl-keyword">static</span> <span class="hl-keyword">private</span> SimpleFormatter formatterTxt;&#xD;
&#xD;
  <span class="hl-keyword">static</span> <span class="hl-keyword">private</span> FileHandler fileHTML;&#xD;
  <span class="hl-keyword">static</span> <span class="hl-keyword">private</span> Formatter formatterHTML;&#xD;
&#xD;
  <span class="hl-keyword">static</span> <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setup() <span class="hl-keyword">throws</span> IOException {&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// get the global logger to configure it</em>&#xD;
    Logger logger = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// suppress the logging output to the console</em>&#xD;
    Logger rootLogger = Logger.*getLogger*(<span class="hl-string" style="color:blue">""</span>);&#xD;
    Handler[] handlers = rootLogger.getHandlers();&#xD;
    <span class="hl-keyword">if</span> (handlers[<span class="hl-number">0</span>] <span class="hl-keyword">instanceof</span> ConsoleHandler) {&#xD;
      rootLogger.removeHandler(handlers[<span class="hl-number">0</span>]);&#xD;
    }&#xD;
&#xD;
    logger.setLevel(Level.INFO);&#xD;
    fileTxt = <span class="hl-keyword">new</span> FileHandler(<span class="hl-string" style="color:blue">"Logging.txt"</span>);&#xD;
    fileHTML = <span class="hl-keyword">new</span> FileHandler(<span class="hl-string" style="color:blue">"Logging.html"</span>);&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// create a TXT formatter</em>&#xD;
    formatterTxt = <span class="hl-keyword">new</span> SimpleFormatter();&#xD;
    fileTxt.setFormatter(formatterTxt);&#xD;
    logger.addHandler(fileTxt);&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// create an HTML formatter</em>&#xD;
    formatterHTML = <span class="hl-keyword">new</span> MyHtmlFormatter();&#xD;
    fileHTML.setFormatter(formatterHTML);&#xD;
    logger.addHandler(fileHTML);&#xD;
  }&#xD;
}&#xD; </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="logexample_use"></a>2.2.&nbsp;Use the logger
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  The following example class demonstrates how you can use your
                  <code class="code">MyLogger</code>
                  class to create log messages.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.logger.test;&#xD;
&#xD;
<span class="hl-keyword">import</span> java.io.IOException;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Level;&#xD;
<span class="hl-keyword">import</span> java.util.logging.Logger;&#xD;
&#xD;
<span class="hl-keyword">import</span> com.vogella.logger.MyLogger;&#xD;
&#xD;
<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> UseLogger {&#xD;
  <em class="hl-comment" style="color: #080">// use the classname for the logger, this way you can refactor</em>&#xD;
  <span class="hl-keyword">private</span> <span class="hl-keyword">final</span> <span class="hl-keyword">static</span> Logger LOGGER = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);&#xD;
  &#xD;
&#xD;
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> doSomeThingAndLog() {&#xD;
    <em class="hl-comment" style="color: #080">// ... more code</em>&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// now we demo the logging</em>&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// set the LogLevel to Severe, only severe Messages will be written</em>&#xD;
    LOGGER.setLevel(Level.SEVERE);&#xD;
    LOGGER.severe(<span class="hl-string" style="color:blue">"Info Log"</span>);&#xD;
    LOGGER.warning(<span class="hl-string" style="color:blue">"Info Log"</span>);&#xD;
    LOGGER.info(<span class="hl-string" style="color:blue">"Info Log"</span>);&#xD;
    LOGGER.finest(<span class="hl-string" style="color:blue">"Really not important"</span>);&#xD;
&#xD;
    <em class="hl-comment" style="color: #080">// set the LogLevel to Info, severe, warning and info will be written</em>&#xD;
    <em class="hl-comment" style="color: #080">// finest is still not written</em>&#xD;
    LOGGER.setLevel(Level.INFO);&#xD;
    LOGGER.severe(<span class="hl-string" style="color:blue">"Info Log"</span>);&#xD;
    LOGGER.warning(<span class="hl-string" style="color:blue">"Info Log"</span>);&#xD;
    LOGGER.info(<span class="hl-string" style="color:blue">"Info Log"</span>);&#xD;
    LOGGER.finest(<span class="hl-string" style="color:blue">"Really not important"</span>);&#xD;
  }&#xD;
&#xD;
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {&#xD;
    UseLogger tester = <span class="hl-keyword">new</span> UseLogger();&#xD;
    <span class="hl-keyword">try</span> {&#xD;
      MyLogger.setup();&#xD;
    } <span class="hl-keyword">catch</span> (IOException e) {&#xD;
      e.printStackTrace();&#xD;
      <span class="hl-keyword">throw</span> <span class="hl-keyword">new</span> RuntimeException(<span class="hl-string" style="color:blue">"Problems with creating the log files"</span>);&#xD;
    }&#xD;
    tester.doSomeThingAndLog();&#xD;
  }&#xD;
}&#xD; </pre><p>
                  
               </p>
               <div class="tip" style="margin-left: 0.5in; margin-right: 0.5in;">
                  <h3 class="title">Tip</h3>
                  <p>
                     After you ran your program you need to
                     <span class="guilabel">Refresh</span>
                     your project in Eclipse (or check the file system directly) to see
                     the files in the
                     <span class="guilabel">Package Explorer</span>
                     view.
                     
                  </p>
               </div>
            </div>
         </div> 
         <script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         
         <!-- Article - Before Support 336 x 280 -->
         <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="3645921933"></ins>
         <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="supportandlicense"></a>3.&nbsp;About this website
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="thankyou"></a>3.1.&nbsp;Donate to support free tutorials
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  
                  	
               </p>
               <p>
                  		Please consider a contribution
                  	<a href="http://www.vogella.com/support.html">
                     			<img src="http://www.vogella.com/img/common/40x50xvogella-donate.png.pagespeed.ic.gMuY8kQC6X.png" width="40" height="50" alt="Support free tutorials" title="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Buttom tutorial in thank you']);"></a>
                  			if this article helped you. It will help to maintain our content and our Open Source activities.
                  	
               </p>
               <p>
                  
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="questions"></a>3.2.&nbsp;Questions and discussion
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Writing and updating these tutorials is a lot of work.
                  If this
                  free community service was helpful,
                  you can support the cause by
                  giving
                  a tip
                  as well as reporting typos and factual errors.
                  
               </p>
               <p>
                  If you find errors in this tutorial, please notify me
                  (see the
                  <a class="ulink" href="#top" target="_top">top of the page</a>).
                  Please note that due to the high volume of feedback I
                  receive, I
                  cannot answer questions to your implementation. Ensure you
                  have read
                  the
                  <a class="ulink" href="http://www.vogella.com/faq.html" target="_top">vogella FAQ</a>
                  as
                  I don't respond to questions already answered there.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="thankyou"></a>3.3.&nbsp;License for this tutorial and its code
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  This tutorial is Open Content under the
                  <a class="ulink" href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en" target="_top">
                     CC BY-NC-SA 3.0 DE
                     </a>
                  license. Source code in this tutorial is distributed under the
                  <a class="ulink" href="https://www.eclipse.org/legal/epl-v10.html" target="_top">Eclipse Public License</a>.
                  See the
                  <a class="ulink" href="http://www.vogella.com/license.html" target="_top">vogella License</a>
                  page
                  for details on the terms of reuse.
                  
               </p>
            </div>
         </div>
         
         
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="resources"></a>4.&nbsp;Links and Literature
                     </h2>
                  </div>
               </div>
            </div>
            <p>
               <a class="ulink" href="http://www.onjava.com/pub/a/onjava/2002/06/19/log.html" target="_top">
                  An introduction to the Java Logging API</a>, Brian Gilstrap
               (OnJava.com, June 2002) talks about the use of the standard
               logging API.
               
            </p>
            <p>
               <a class="ulink" href="http://www.fluffycat.com/Java/Logging/" target="_top">
                  The Java Logging API</a>, Stuart Dabbs Halloway (JavaPro, June
               2002) is another good introduction to the API.
               
            </p>
         </div><img src="http://vg08.met.vgwort.de/na/7d5353621fd4456da90d5474cdfab0a4" width="1" height="1" alt=""></div>
      
      
      
   <script pagespeed_no_defer="">//<![CDATA[
(function(){window.pagespeed=window.pagespeed||{};var f=window.pagespeed,h=function(e,a,c,b){this.c=e;this.a=a;this.b=c;this.d=b};f.beaconUrl="";
var k=function(e){var a=e.c,c=window.mod_pagespeed_start,b=Number(new Date)-c,a=a+(-1==a.indexOf("?")?"?":"&"),a=a+"ets="+("load"==e.a?"load:":"unload:"),a=a+b;if("beforeunload"!=e.a||!window.mod_pagespeed_loaded){a+="&r"+e.a+"=";if(window.performance){var b=window.performance.timing,d=b.navigationStart,g=b.requestStart,a=a+(b[e.a+"EventStart"]-d),a=a+("&nav="+(b.fetchStart-d)),a=a+("&dns="+(b.domainLookupEnd-b.domainLookupStart)),a=a+("&connect="+(b.connectEnd-b.connectStart)),a=a+("&req_start="+
(g-d)),a=a+("&ttfb="+(b.responseStart-g)),a=a+("&dwld="+(b.responseEnd-b.responseStart)),a=a+("&dom_c="+(b.domContentLoadedEventStart-d));window.performance.navigation&&(a+="&nt="+window.performance.navigation.type);d=-1;b.msFirstPaint?d=b.msFirstPaint:window.chrome&&window.chrome.loadTimes&&(d=Math.floor(1E3*window.chrome.loadTimes().firstPaintTime));d=d-g;0<=d&&(a+="&fp="+d)}else a+=b;f.getResourceTimingData&&window.parent==window&&(a+=f.getResourceTimingData());a+=window.parent!=window?"&ifr=1":
"&ifr=0";"load"==e.a&&(window.mod_pagespeed_loaded=!0,(b=window.mod_pagespeed_num_resources_prefetched)&&(a+="&nrp="+b),(b=window.mod_pagespeed_prefetch_start)&&(a+="&htmlAt="+(c-b)));f.panelLoader&&(c=f.panelLoader.getCsiTimingsString(),""!=c&&(a+="&b_csi="+c));f.criticalCss&&(c=f.criticalCss,a+="&ccis="+c.total_critical_inlined_size+"&cces="+c.total_original_external_size+"&ccos="+c.total_overhead_size+"&ccrl="+c.num_replaced_links+"&ccul="+c.num_unreplaced_links);""!=e.b&&(a+=e.b);document.referrer&&
(a+="&ref="+encodeURIComponent(document.referrer));a+="&url="+encodeURIComponent(e.d);f.beaconUrl=a;(new Image).src=a}};f.e=function(e,a,c,b){var d=new h(e,a,c,b);window.addEventListener?window.addEventListener(a,function(){k(d)},!1):window.attachEvent("on"+a,function(){k(d)})};f.addInstrumentationInit=f.e;})();

pagespeed.addInstrumentationInit('/mod_pagespeed_beacon', 'load', '', 'http://www.vogella.com/tutorials/Logging/article.html');
//]]></script></body>
</html>

