<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>11.4 &#8212; Constructors and initialization of derived classes &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 11.4 &#8212; Constructors and initialization of derived classes Comments Feed" href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"132.186.58.88, 14.141.35.115","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/114-constructors-and-initialization-of-derived-classes\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='11.3 &#8212; Order of construction of derived classes' href='http://www.learncpp.com/cpp-tutorial/113-order-of-construction-of-derived-classes/' />
<link rel='next' title='Alex&#8217;s Threaded Comments WordPress Plugin v0.1' href='http://www.learncpp.com/wordpress/alexsthreadedcomments/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=170' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="11.4 -- Constructors and initialization of derived classes" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/" />
<meta property="og:description" content="In the past two lessons,we&#039;ve looked at some basics about inheritance in C++ and explored the order that derived classes are initialized. In this lesson, we&#039;ll take a closer look at the role of con..." />
<meta property="article:published_time" content="2008-01-09T22:36:16+00:00" />
<meta property="article:modified_time" content="2008-01-09T22:36:16+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-170 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-170 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-170">
						<div class="post-headline">		<h1>11.4 &#8212; Constructors and initialization of derived classes</h1>
		</div>		<div class="post-byline">By Alex, on January 9th, 2008</div>		<div class="post-bodycopy clearfix"><p>In the past two lessons,we&#8217;ve looked at some basics about inheritance in C++ and explored the order that derived classes are initialized.  In this lesson, we&#8217;ll take a closer look at the role of constructors in the initialization of derived classes.  To do so, we will continue to use the simple Base and Derived class we developed in the previous lesson:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675c0380225056" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-6">6</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-8">8</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-10">10</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-12">12</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-14">14</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-16">16</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-18">18</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675c0380225056-20">20</div><div class="crayon-num" data-line="crayon-555d73ca675c0380225056-21">21</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675c0380225056-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nValue</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Base</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_nValue</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-10"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-12"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Derived</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-13"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-14"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">m_dValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-16">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca675c0380225056-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-o">=</span><span class="crayon-cn">0.0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_dValue</span><span class="crayon-sy">(</span><span class="crayon-v">dValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675c0380225056-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca675c0380225056-21"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0021 seconds] -->
<p></p>
<p>With non-derived classes, constructors only have to worry about their own members.  For example, consider Base.  We can create a Base object like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675d3225335064" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675d3225335064-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675d3225335064-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675d3225335064-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675d3225335064-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675d3225335064-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675d3225335064-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675d3225335064-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675d3225335064-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675d3225335064-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Base </span><span class="crayon-e">cBase</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// use Base(int) constructor</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675d3225335064-4">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca675d3225335064-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675d3225335064-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Here&#8217;s what actually happens when cBase is instantiated:</p>
<ol>
<li>Memory for cBase is set aside
<li>The appropriate Base constructor is called
<li>The initialization list initializes variables
<li>The body of the constructor executes
<li>Control is returned to the caller
</ol>
<p>This is pretty straightforward.  With derived classes, things are slightly more complex:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675da869154117" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675da869154117-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675da869154117-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675da869154117-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675da869154117-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675da869154117-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675da869154117-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675da869154117-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675da869154117-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675da869154117-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived </span><span class="crayon-e">cDerived</span><span class="crayon-sy">(</span><span class="crayon-cn">1.3</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// use Derived(double) constructor</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675da869154117-4">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca675da869154117-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675da869154117-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Here&#8217;s what actually happens when cDerived is instantiated:</p>
<ol>
<li>Memory for cDerived is set aside (enough for both the Base and Derived portions).
<li>The appropriate Derived constructor is called
<li><b>The Base object is constructed first using the appropriate Base constructor</b>
<li>The initialization list initializes variables
<li>The body of the constructor executes
<li>Control is returned to the caller
</ol>
<p>The only real difference between this case and the non-inherited case is that before the Derived constructor can do anything substantial, the Base constructor is called first.  The Base constructor sets up the Base portion of the object, control is returned to the Derived constructor, and the Derived constructor is allowed to finish up it&#8217;s job.</p>
<p><strong>Initializing base class members</strong></p>
<p>One of the current shortcomings of our Derived class as written is that there is no way to initialize m_nValue when we create a Derived object.  What if we want to set both m_dValue (from the Derived potion of the object) and m_nValue (from the Base portion of the object) when we create a Derived object?  </p>
<p>New programmers often attempt to solve this problem as follows:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675e2737416596" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675e2737416596-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675e2737416596-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675e2737416596-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675e2737416596-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675e2737416596-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675e2737416596-6">6</div><div class="crayon-num" data-line="crayon-555d73ca675e2737416596-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675e2737416596-8">8</div><div class="crayon-num" data-line="crayon-555d73ca675e2737416596-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675e2737416596-10">10</div><div class="crayon-num" data-line="crayon-555d73ca675e2737416596-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675e2737416596-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Derived</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675e2737416596-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675e2737416596-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675e2737416596-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">m_dValue</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca675e2737416596-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675e2737416596-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-o">=</span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675e2737416596-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// does not work</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675e2737416596-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_dValue</span><span class="crayon-sy">(</span><span class="crayon-v">dValue</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">m_nValue</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675e2737416596-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675e2737416596-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca675e2737416596-11"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p>This is a good attempt, and is almost the right idea.  We definitely need to add another parameter to our constructor, otherwise C++ will have no way of knowing what value we want to initialize m_nValue to.</p>
<p>However, C++ prevents classes from initializing inherited member variables in the initialization list of a constructor.  In other words, the value of a variable can only be set in an initialization list of a constructor belonging to the same class as the variable.</p>
<p>Why does C++ do this?  The answer has to do with const and reference variables.  Consider what would happen if m_nValue were const.  Because const variables must be initialized with a value at the time of creation, the base class constructor must set it&#8217;s value when the variable is created.  However, when the base class constructor finishes, the derived class constructors initialization lists are then executed.  Each derived class would then have the opportunity to initialize that variable, potentially changing it&#8217;s value!  By restricting the initialization of variables to the constructor of the class those variables belong to, C++ ensures that all variables are initialized only once.</p>
<p>The end result is that the above example does not work because m_nValue was inherited from Base, and only non-inherited variables can be changed in the initialization list.</p>
<p>However, inherited variables can still have their values changed in the body of the constructor using an assignment.  Consequently, new programmers often also try this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675ea955028102" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675ea955028102-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675ea955028102-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675ea955028102-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675ea955028102-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675ea955028102-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675ea955028102-6">6</div><div class="crayon-num" data-line="crayon-555d73ca675ea955028102-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675ea955028102-8">8</div><div class="crayon-num" data-line="crayon-555d73ca675ea955028102-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675ea955028102-10">10</div><div class="crayon-num" data-line="crayon-555d73ca675ea955028102-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675ea955028102-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Derived</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675ea955028102-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675ea955028102-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675ea955028102-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">m_dValue</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca675ea955028102-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675ea955028102-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-o">=</span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675ea955028102-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_dValue</span><span class="crayon-sy">(</span><span class="crayon-v">dValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675ea955028102-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675ea955028102-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nValue</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675ea955028102-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca675ea955028102-11"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p>While this actually works in this case, it wouldn&#8217;t work if m_nValue were a const or a reference (because const values and references have to be initialized in the initialization list of the constructor).  It&#8217;s also inefficient because m_nValue gets assigned a value twice: once in the initialization list of the Base class constructor, and then again in the body of the Derived class constructor.</p>
<p>So how do we properly initialize m_nValue when creating a Derived class object?</p>
<p>In all of the examples so far, when we instantiate a Derived class object, the Base class portion has been created using the default Base constructor.  Why does it always use the default Base constructor?  Because we never told it to do otherwise!</p>
<p>Fortunately, C++ gives us the ability to explicitly choose which Base class constructor will be called!  To do this, simply add a call to the base class Constructor in the initialization list of the derived class:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675f1961002446" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675f1961002446-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f1961002446-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675f1961002446-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f1961002446-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675f1961002446-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f1961002446-6">6</div><div class="crayon-num" data-line="crayon-555d73ca675f1961002446-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f1961002446-8">8</div><div class="crayon-num" data-line="crayon-555d73ca675f1961002446-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f1961002446-10">10</div><div class="crayon-num" data-line="crayon-555d73ca675f1961002446-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675f1961002446-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Derived</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f1961002446-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675f1961002446-3"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f1961002446-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">m_dValue</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca675f1961002446-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f1961002446-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-o">=</span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675f1961002446-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Base</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-c">// Call Base(int) constructor with value nValue!</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f1961002446-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">m_dValue</span><span class="crayon-sy">(</span><span class="crayon-v">dValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca675f1961002446-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f1961002446-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca675f1961002446-11"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0015 seconds] -->
<p></p>
<p>Now, when we execute this code:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca675f8436328740" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca675f8436328740-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f8436328740-2">2</div><div class="crayon-num" data-line="crayon-555d73ca675f8436328740-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f8436328740-4">4</div><div class="crayon-num" data-line="crayon-555d73ca675f8436328740-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca675f8436328740-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca675f8436328740-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f8436328740-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca675f8436328740-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived </span><span class="crayon-e">cDerived</span><span class="crayon-sy">(</span><span class="crayon-cn">1.3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// use Derived(double) constructor</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f8436328740-4">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca675f8436328740-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca675f8436328740-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>The base class constructor Base(int) will be used to initialize m_nValue to 5, and the derived class constructor will be used to initialize m_dValue to 1.3!</p>
<p>In more detail, here&#8217;s what happens:</p>
<ol>
<li>Memory for cDerived is allocated.
<li>The Derived(double, int) constructor is called, where dValue = 1.3, and nValue = 5
<li>The compiler looks to see if we&#8217;ve asked for a particular Base class constructor.  We have!  So it calls Base(int) with nValue = 5.
<li>The base class constructor initialization list sets m_nValue to 5
<li>The base class constructor body executes
<li>The base class constructor returns
<li>The derived class constuctor initialization list sets m_dValue to 1.3
<li>The derived class constructor body executes
<li>The derived class constructor returns
</ol>
<p>This may seem somewhat complex, but it&#8217;s actually very simple.  All that&#8217;s happening is that the Derived constructor is calling a specific Base constructor to initialize the Base portion of the object.  Because m_nValue lives in the Base portion of the object, the Base constructor is the only constructor that can initialize it&#8217;s value.</p>
<p><strong>Another example</strong></p>
<p>Let&#8217;s take a look at another pair of class we&#8217;ve previously worked with:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca67600032857273" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca67600032857273-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-2">2</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-4">4</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-6">6</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-8">8</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-10">10</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-12">12</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-14">14</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-16">16</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-18">18</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-20">20</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-22">22</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-24">24</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-26">26</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-28">28</div><div class="crayon-num" data-line="crayon-555d73ca67600032857273-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67600032857273-30">30</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca67600032857273-1"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Person</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-4"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nAge</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">m_bIsMale</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-8">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca67600032857273-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetAge</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nAge</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">IsMale</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_bIsMale</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-12">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca67600032857273-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Person</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">""</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nAge</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">bIsMale</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_strName</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">m_nAge</span><span class="crayon-sy">(</span><span class="crayon-v">nAge</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">m_bIsMale</span><span class="crayon-sy">(</span><span class="crayon-v">bIsMale</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-17"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-18">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca67600032857273-19"><span class="crayon-c">// BaseballPlayer publicly inheriting Person</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-20"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">BaseballPlayer</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Person</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-21"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-22"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">m_dBattingAverage</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nHomeRuns</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-25">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">BaseballPlayer</span><span class="crayon-sy">(</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dBattingAverage</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nHomeRuns</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_dBattingAverage</span><span class="crayon-sy">(</span><span class="crayon-v">dBattingAverage</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">m_nHomeRuns</span><span class="crayon-sy">(</span><span class="crayon-v">nHomeRuns</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca67600032857273-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67600032857273-30"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0049 seconds] -->
<p></p>
<p>As we&#8217;d previously written it, BaseballPlayer only initializes it&#8217;s own members and does not specify a Person constructor to use.  The means every BaseballPlayer we create is going to use the default Person constructor, which will initialize the name to blank and age to 0.  Because it makes sense to give our BaseballPlayer a name and age when we create them, we should modify this constructor to add those parameters.</p>
<p>Here&#8217;s our new BaseballPlayer class with a constructor that calls the Person constructor to initialize the inherited Person member variables.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca67607779539020" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca67607779539020-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-2">2</div><div class="crayon-num" data-line="crayon-555d73ca67607779539020-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-4">4</div><div class="crayon-num" data-line="crayon-555d73ca67607779539020-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-6">6</div><div class="crayon-num" data-line="crayon-555d73ca67607779539020-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-8">8</div><div class="crayon-num" data-line="crayon-555d73ca67607779539020-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-10">10</div><div class="crayon-num" data-line="crayon-555d73ca67607779539020-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-12">12</div><div class="crayon-num" data-line="crayon-555d73ca67607779539020-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67607779539020-14">14</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca67607779539020-1"><span class="crayon-c">// BaseballPlayer publicly inheriting Person</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">BaseballPlayer</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Person</span></div><div class="crayon-line" id="crayon-555d73ca67607779539020-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-4"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d73ca67607779539020-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">m_dBattingAverage</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nHomeRuns</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca67607779539020-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">BaseballPlayer</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">""</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nAge</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">bIsMale</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">false</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-555d73ca67607779539020-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dBattingAverage</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nHomeRuns</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Person</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nAge</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bIsMale</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-c">// call Person(std::string, int, bool) to initialize these fields</span></div><div class="crayon-line" id="crayon-555d73ca67607779539020-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">m_dBattingAverage</span><span class="crayon-sy">(</span><span class="crayon-v">dBattingAverage</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">m_nHomeRuns</span><span class="crayon-sy">(</span><span class="crayon-v">nHomeRuns</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca67607779539020-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67607779539020-14"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0030 seconds] -->
<p></p>
<p>Now we can create baseball players like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca6760e535990239" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca6760e535990239-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6760e535990239-2">2</div><div class="crayon-num" data-line="crayon-555d73ca6760e535990239-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6760e535990239-4">4</div><div class="crayon-num" data-line="crayon-555d73ca6760e535990239-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6760e535990239-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca6760e535990239-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6760e535990239-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6760e535990239-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">BaseballPlayer </span><span class="crayon-e">cPlayer</span><span class="crayon-sy">(</span><span class="crayon-s">"Pedro Cerrano"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">true</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.342</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">42</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6760e535990239-4">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca6760e535990239-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6760e535990239-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>To prove that it works:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca67614503073179" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca67614503073179-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67614503073179-2">2</div><div class="crayon-num" data-line="crayon-555d73ca67614503073179-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67614503073179-4">4</div><div class="crayon-num" data-line="crayon-555d73ca67614503073179-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67614503073179-6">6</div><div class="crayon-num" data-line="crayon-555d73ca67614503073179-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67614503073179-8">8</div><div class="crayon-num" data-line="crayon-555d73ca67614503073179-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca67614503073179-10">10</div><div class="crayon-num" data-line="crayon-555d73ca67614503073179-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca67614503073179-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67614503073179-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca67614503073179-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">BaseballPlayer </span><span class="crayon-e">cPlayer</span><span class="crayon-sy">(</span><span class="crayon-s">"Pedro Cerrano"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">32</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">true</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0.342</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">42</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67614503073179-4">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca67614503073179-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67614503073179-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cPlayer</span><span class="crayon-sy">.</span><span class="crayon-v">m_strName</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca67614503073179-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cPlayer</span><span class="crayon-sy">.</span><span class="crayon-v">m_nAge</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67614503073179-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cPlayer</span><span class="crayon-sy">.</span><span class="crayon-v">m_nHomeRuns</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca67614503073179-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca67614503073179-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca67614503073179-11"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>This outputs:</p>
<pre>
Pedro Cerrano
32
42
</pre>
<p>As you can see, the name and age in the base class were properly initialized, as was the number of home runs in the derived class.</p>
<p><strong>Inheritance chains</strong></p>
<p>Classes in an inheritance chain work in exactly the same way.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73ca6761b667548574" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-2">2</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-4">4</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-6">6</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-8">8</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-10">10</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-12">12</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-14">14</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-16">16</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-18">18</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-20">20</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-22">22</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-24">24</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-26">26</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-28">28</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-30">30</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-32">32</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-34">34</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-36">36</div><div class="crayon-num" data-line="crayon-555d73ca6761b667548574-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73ca6761b667548574-38">38</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73ca6761b667548574-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-2"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-4"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">A</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-6"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">A</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"A: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-11"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-12">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca6761b667548574-13"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">A</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-14"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-15"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">B</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">A</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"B: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-21"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-22">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca6761b667548574-23"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">C</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">B</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-24"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-25"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">C</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">B</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"C: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">chValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-31"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-32">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca6761b667548574-33"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-34"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73ca6761b667548574-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-i">C</span><span class="crayon-h"> </span><span class="crayon-e">cClass</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">4.3</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">'R'</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-36">&nbsp;</div><div class="crayon-line" id="crayon-555d73ca6761b667548574-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73ca6761b667548574-38"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0046 seconds] -->
<p></p>
<p>In this example, class C is derived from class B, which is derived from class A.  So what happens when we instantiate an object of class C?</p>
<p>First, main() calls C(int, double, char).  The C constructor calls B(int, double).  The B constructor calls A(int).  Because A is not inherited, this is the first class we&#8217;ll construct.  A is constructed, prints the value 5, and returns control to B.  B is constructed, prints the value 4.3, and returns control to C.  C is constructed, prints the value &#8216;R&#8217;, and returns control to main().  And we&#8217;re done!</p>
<p>Thus, this program prints:</p>
<pre>
A: 5
B: 4.3
C: R
</pre>
<p>It is worth mentioning that constructors can only call constructors from their immediate parent/base class.  Consequently, the C constructor could not call or pass parameters to the A constructor directly.  The C constructor can only call the B constructor (which has the responsibility of calling the A constructor).</p>
<p><strong>Destructors</strong></p>
<p>When a derived class is destroyed, each destructor is called in the reverse order of construction.  In the above example, when cClass is destroyed, the C destructor is called first, then the B destructor, then the A destructor.</p>
<p><strong>Summary</strong></p>
<p>Although it is true that the most base class is initialized first, this actually only happens after each constructor has called the parent constructor in turn.  This gives us the opportunity to specify which of the parent&#8217;s constructors we want to use to initialize inherited members.  Once the base constructor has finished constructing the base portion of the class, control returns to the derived constructor and it executes as normal.</p>
<p>One of the primary advantages of using a base class constructor to initialize the base class members is that if the base class constructor is ever changed, both the base class and all inherited classes will automatically use the changes!  This helps keep maintenance and duplicate code down.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/115-inheritance-and-access-specifiers/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 11.5 -- Inheritance and access specifiers</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter11" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/113-order-of-construction-of-derived-classes/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 11.3 -- Order of construction of derived classes</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-170" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-170" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-170" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-170" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">17 comments to 11.4 &#8212; Constructors and initialization of derived classes</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-30550">
		<div id="div-comment-30550" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/dea3866e5fd4ba54a7c1b8d315fa9b33?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/dea3866e5fd4ba54a7c1b8d315fa9b33?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">gswrg</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-30550">
		October 22, 2008 at 2:28 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=30550#respond' onclick='return addComment.moveForm( "comment-30550", "30550", "respond", "170" )' aria-label='Reply to gswrg'> &middot; Reply</a></span>		 
		</div>
		<p>In this example, class C is derived from class B, which is derived from class C</p>
<p>should read</p>
<p>In this example, class C is derived from class B, which is derived from class A</p>
<p>[ Fixed!  Thank you.  -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-32435">
		<div id="div-comment-32435" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/596d34b53710475cb7733077b354aa35?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/596d34b53710475cb7733077b354aa35?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ashish aec</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-32435">
		November 19, 2008 at 12:08 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=32435#respond' onclick='return addComment.moveForm( "comment-32435", "32435", "respond", "170" )' aria-label='Reply to ashish aec'> &middot; Reply</a></span>		 
		</div>
		<p>This is the exmple of multiple inheritance.<br />
in which class a is base class and class b and c is drived class .<br />
the base class a is publicly inherit by drive class b and c.<br />
should read with 100% efficency.<br />
thanks.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-60335">
		<div id="div-comment-60335" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4f31a7dae515c0180f5feb6b93a34a95?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4f31a7dae515c0180f5feb6b93a34a95?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">cammy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-60335">
		May 9, 2009 at 3:50 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=60335#respond' onclick='return addComment.moveForm( "comment-60335", "60335", "respond", "170" )' aria-label='Reply to cammy'> &middot; Reply</a></span>		 
		</div>
		<p>I have been getting on well with the tutorials and have learnt a lot. I was just wondering if they cover proper OOP because, as yet, there has been none and with only a few more lessons til the end, I am getting worried that it will not be covered. For example, &#8220;How do you output physical objects to the screen such as buttons and hyperlinks?</p>
<p>Thanks</p>
<p>Cammy</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-66880">
		<div id="div-comment-66880" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-66880">
		August 22, 2009 at 12:18 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=66880#respond' onclick='return addComment.moveForm( "comment-66880", "66880", "respond", "170" )' aria-label='Reply to baldo'> &middot; Reply</a></span>		 
		</div>
		<p>The advantage is only if the base class constructor changes. But if the base class constructor parameters change, then you need to rewrite all of yours derived class constructors&#8230;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-85803">
		<div id="div-comment-85803" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/309512142469b81f5c5827a1751418fd?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/309512142469b81f5c5827a1751418fd?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Taiwan boy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-85803">
		June 1, 2010 at 8:45 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=85803#respond' onclick='return addComment.moveForm( "comment-85803", "85803", "respond", "170" )' aria-label='Reply to Taiwan boy'> &middot; Reply</a></span>		 
		</div>
		<p>Thanks alot, this article saves me!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-89266">
		<div id="div-comment-89266" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/79972f45ab9d11a270541a1eb49fa688?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/79972f45ab9d11a270541a1eb49fa688?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">TutLover</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-89266">
		July 29, 2010 at 11:37 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=89266#respond' onclick='return addComment.moveForm( "comment-89266", "89266", "respond", "170" )' aria-label='Reply to TutLover'> &middot; Reply</a></span>		 
		</div>
		<p>For Baseball example by default bIsMale Should be bIsMale = true when sending parameters to Person&#8230; ;p</p>
<p>BTW Love Your Tutorials&#8230;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-91322">
		<div id="div-comment-91322" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d9ebd5fccf0f6a303ad336754deeafc8?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d9ebd5fccf0f6a303ad336754deeafc8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">MrAlshahawy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-91322">
		September 3, 2010 at 5:54 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=91322#respond' onclick='return addComment.moveForm( "comment-91322", "91322", "respond", "170" )' aria-label='Reply to MrAlshahawy'> &middot; Reply</a></span>		 
		</div>
		<p>Your tutorial is more than great, Many thanks for this effort, it is really appreciated, Keep up the good work.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-91732">
		<div id="div-comment-91732" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3e4c43ddcc89dda6ff1e432893c02aa3?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3e4c43ddcc89dda6ff1e432893c02aa3?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sorin</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-91732">
		September 9, 2010 at 2:16 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=91732#respond' onclick='return addComment.moveForm( "comment-91732", "91732", "respond", "170" )' aria-label='Reply to sorin'> &middot; Reply</a></span>		 
		</div>
		<p>this is a very good tutorial. thanks Alex!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-95065">
		<div id="div-comment-95065" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/583162c770ed576c4ece87d5bfbb5030?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/583162c770ed576c4ece87d5bfbb5030?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Dhaval</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-95065">
		December 21, 2010 at 3:32 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=95065#respond' onclick='return addComment.moveForm( "comment-95065", "95065", "respond", "170" )' aria-label='Reply to Dhaval'> &middot; Reply</a></span>		 
		</div>
		<p>Hi I have problem of calling constructor for base class from derived class. For that I have used above example. But called constructor externally.</p>
<p>//a.h<br />
#ifndef A_H_<br />
#define A_H_<br />
#include<br />
class A<br />
{<br />
public:<br />
    A(int nValue)<br />
    {<br />
        std::cout &lt;&lt; &quot;A: &quot; &lt;&lt; nValue &lt;&lt; &quot;\n&quot;;<br />
    }<br />
};<br />
#endif</p>
<p>//b.h<br />
#ifndef B_H_<br />
#define B_H_<br />
#include<br />
class B: public A<br />
{<br />
public:<br />
    B(int nValue, double dValue)<br />
    : A(nValue)<br />
    {<br />
        std::cout &lt;&lt; &quot;B: &quot; &lt;&lt; dValue &lt;&lt; &quot;\n&quot;;<br />
    }<br />
};<br />
#endif</p>
<p>//c.h<br />
#ifndef C_H_<br />
#define C_H_<br />
#include<br />
class C: public B<br />
{<br />
public:<br />
    C(int nValue, double dValue, char chValue);<br />
};<br />
#endif</p>
<p>//c.cpp<br />
#include<br />
#include &#8220;a.h&#8221;<br />
#include &#8220;b.h&#8221;<br />
#include &#8220;c.h&#8221;<br />
C::C(int nValue, double dValue, char chValue):B(nValue, dValue)<br />
{<br />
        std::cout &lt;&lt; &quot;C: &quot; &lt;&lt; chValue &lt;&lt; &quot;\n&quot;;<br />
}</p>
<p>//main.cpp<br />
#include<br />
#include </p>
<p>#include &#8220;a.h&#8221;<br />
#include &#8220;b.h&#8221;<br />
#include &#8220;c.h&#8221;</p>
<p>using namespace std;</p>
<p>int main()<br />
{<br />
    C cClass(5, 4.3, &#8216;R&#8217;);<br />
    system(&#8220;PAUSE&#8221;);<br />
    return EXIT_SUCCESS;<br />
}</p>
<p>when I compile this code I get error:<br />
multiple definition of `C::C(int, double, char)&#8217;</p>
<p>I dont understand why this error come. Any idea? Please let me know.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-95253">
		<div id="div-comment-95253" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e84197a59db194beef31206209ceb2fb?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e84197a59db194beef31206209ceb2fb?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">floatingDivs</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-95253">
		March 12, 2011 at 11:55 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=95253#respond' onclick='return addComment.moveForm( "comment-95253", "95253", "respond", "170" )' aria-label='Reply to floatingDivs'> &middot; Reply</a></span>		 
		</div>
		<p><q cite="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#highlighter_125309">The base class constructor Base(int) will be used to initialize m_nValue to 5, and the derived class constructor will be used to initialize m_dValue to 1.3!</q></p>
<p>Wouldn&#8217;t it be that the base class constructor would be used to initialize m_nValue to 1.3 and derived class constructor would be used to initialize m_dValue to 5 (which wouldn&#8217;t work since the base class constructor requires an integer)?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-118701">
		<div id="div-comment-118701" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2b4021df046e044bfe4a2676af345d90?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2b4021df046e044bfe4a2676af345d90?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">momalok</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-118701">
		January 15, 2014 at 7:13 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=118701#respond' onclick='return addComment.moveForm( "comment-118701", "118701", "respond", "170" )' aria-label='Reply to momalok'> &middot; Reply</a></span>		 
		</div>
		<p>(from the Derived potion of the object)</p>
<p>I never was that good at potions when i was at hogwarts.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-123367">
		<div id="div-comment-123367" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2616c31c98686cb2c98b7764a67cce00?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2616c31c98686cb2c98b7764a67cce00?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.ictvpn.net' rel='external nofollow' class='url'>ict_ifycent2</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-123367">
		February 6, 2014 at 10:11 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=123367#respond' onclick='return addComment.moveForm( "comment-123367", "123367", "respond", "170" )' aria-label='Reply to ict_ifycent2'> &middot; Reply</a></span>		 
		</div>
		<p>MR.ALEX THANKS ALOT FOR THIS YOUR WONDERFUL TUTORIAL&#8230;..</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-132566">
		<div id="div-comment-132566" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2847c01ea7512f77d9c655b411d99949?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2847c01ea7512f77d9c655b411d99949?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">LZ</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-132566">
		March 30, 2014 at 5:10 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=132566#respond' onclick='return addComment.moveForm( "comment-132566", "132566", "respond", "170" )' aria-label='Reply to LZ'> &middot; Reply</a></span>		 
		</div>
		<p>hi can someone help me please. i&#8217;ve assignment about to write a simple program that can save staffs&#8217; information. the program must include name, staff id, occupation, salaries, ic number and faculties. using insert and delete link list. please .</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-164337">
		<div id="div-comment-164337" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/43826bc86a3345633fe382970d5ea2c5?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/43826bc86a3345633fe382970d5ea2c5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">manojg</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-164337">
		July 27, 2014 at 6:08 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=164337#respond' onclick='return addComment.moveForm( "comment-164337", "164337", "respond", "170" )' aria-label='Reply to manojg'> &middot; Reply</a></span>		 
		</div>
		<p>What is the difference between these defnition of the derived classes constructors:</p>
<p>class Base<br />
{<br />
    protected:<br />
      int a, b;<br />
    public:<br />
      Base() {}<br />
      Base(int aa, int bb) { a = aa; b = bb; }<br />
};</p>
<p>class Derived : public Base<br />
{<br />
    protected:<br />
       int c<br />
    public:<br />
       Derived() {}<br />
       Derived(int aa, int bb, int cc) { Base(aa, bb); c = cc; }<br />
       // OR<br />
       Derived(int aa, int bb, int cc) : Base(aa, bb), c(cc) {}<br />
};</p>
<p>So, what is the difference between Derived(int aa, int bb, int cc) { Base(aa, bb); c = cc; } and Derived(int aa, int bb, int cc) : Base(aa, bb), c(cc) {}? First definition does not work but they look identical.</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-252047">
		<div id="div-comment-252047" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/731e67d9b57fa2cf3267598e2d67cb8c?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/731e67d9b57fa2cf3267598e2d67cb8c?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tradon</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-252047">
		April 3, 2015 at 8:45 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=252047#respond' onclick='return addComment.moveForm( "comment-252047", "252047", "respond", "170" )' aria-label='Reply to Tradon'> &middot; Reply</a></span>		 
		</div>
		<p>You can find the answer here.<br />
http://www.learncpp.com/cpp-tutorial/810-const-class-objects-and-member-functions/</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-252086">
		<div id="div-comment-252086" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/077c87b425f67d19247b2eb42c656e96?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/077c87b425f67d19247b2eb42c656e96?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">KETAN MAKWANA</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-252086">
		April 7, 2015 at 2:33 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=252086#respond' onclick='return addComment.moveForm( "comment-252086", "252086", "respond", "170" )' aria-label='Reply to KETAN MAKWANA'> &middot; Reply</a></span>		 
		</div>
		<p>FULL PROGRAM&#8230;&#8230;..</p>
<p>#include&lt;iostream&gt;<br />
#include&lt;conio.h&gt;<br />
#include&lt;string.h&gt;<br />
using namespace std;</p>
<p>class rcc<br />
{<br />
protected :<br />
&nbsp;&nbsp;&nbsp;&nbsp;char name[15];<br />
&nbsp;&nbsp;&nbsp;&nbsp;char address[20];<br />
&nbsp;&nbsp;&nbsp;&nbsp;char dob[10];</p>
<p>public:<br />
&nbsp;&nbsp;&nbsp;&nbsp;rcc(){}<br />
&nbsp;&nbsp;&nbsp;&nbsp;rcc(char n[],char a[],char d[])<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nCall rcc Constructor &quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(name,n);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(address,a);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(dob,d);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;~rcc()<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nRCC destructor call&quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br />
&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;&nbsp;void getdata()<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter Name :&quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;name;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter Address :&quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;address;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter Date of Birth :&quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;dob;<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;void display()<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nName : &quot;&lt;&lt;name&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Address : &quot;&lt;&lt;address&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Date of Birth : &quot;&lt;&lt;dob&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;}<br />
};</p>
<p>class student : public rcc<br />
{<br />
&nbsp;&nbsp;&nbsp;&nbsp;int rollno;<br />
&nbsp;&nbsp;&nbsp;&nbsp;int marks;<br />
&nbsp;&nbsp;&nbsp;&nbsp;int sem;<br />
&nbsp;&nbsp;&nbsp;&nbsp;char course[10];</p>
<p>public:<br />
&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;student(){}<br />
&nbsp;&nbsp;&nbsp;&nbsp;student(char n[],char a[],char d[],int r,int m,int s,char c[]):rcc(n,a,d)<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nCall student Constructor &quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rollno = r;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;marks = m;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sem = s;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(course,c);<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;~student()<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nSTUDENT destructor call&quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch();<br />
&nbsp;&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;&nbsp;void getdata()<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rcc::getdata();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter Roll no : &quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;rollno;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter marks : &quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;marks;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter Semester : &quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;sem;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;nEnter Course : &quot;;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cin&gt;&gt;course;<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;void display()<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rcc::display();<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Roll No : &quot;&lt;&lt;rollno&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Marks : &quot;&lt;&lt;marks&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Semester : &quot;&lt;&lt;sem&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cout&lt;&lt;&quot;Course : &quot;&lt;&lt;course&lt;&lt;endl;<br />
&nbsp;&nbsp;&nbsp;&nbsp;}<br />
};</p>
<p>void main()<br />
{<br />
&nbsp;&nbsp;&nbsp;&nbsp;student s1,s2(&quot;ketan&quot;,&quot;bhavnagar&quot;,&quot;14/11/92&quot;,16,88,2,&quot;MCA&quot;);<br />
&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;&nbsp;&nbsp;&nbsp;s2.display();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;s1.getdata();<br />
&nbsp;&nbsp;&nbsp;&nbsp;s1.display();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;getch();<br />
}</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-252340">
		<div id="div-comment-252340" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/126f08aa437003199e67033d1089a8ba?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/126f08aa437003199e67033d1089a8ba?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tary</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#comment-252340">
		May 5, 2015 at 12:20 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/?replytocom=252340#respond' onclick='return addComment.moveForm( "comment-252340", "252340", "respond", "170" )' aria-label='Reply to Tary'> &middot; Reply</a></span>		 
		</div>
		<p>Great tutorial&#8230; Helped me so much. Much appreciated. Keep it up.</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>9 &#43; three = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4Nzg1MHR5bTdtZjVxZ3o3ZGJwYWozMW04MTI=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432187850" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='170' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="4648d06638" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="70"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/114-constructors-and-initialization-of-derived-classes\/":170};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'170',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '170' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.777 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 21:57:30 -->

<!-- Compression = gzip -->
<!-- super cache -->

