<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>12.4 &#8212; Early binding and late binding &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 12.4 &#8212; Early binding and late binding Comments Feed" href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"61.246.186.198","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[["2015","05","06"],["1"]],"updatedVisitCount":"69","isblockedcount":"1383","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/124-early-binding-and-late-binding\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/hideads.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='12.3 &#8212; Virtual destructors, virtual assignment, and overriding virtualization' href='http://www.learncpp.com/cpp-tutorial/123-virtual-destructors-virtual-assignment-and-overriding-virtualization/' />
<link rel='next' title='12.5 &#8212; The virtual table' href='http://www.learncpp.com/cpp-tutorial/125-the-virtual-table/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=182' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="12.4 -- Early binding and late binding" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/" />
<meta property="og:description" content="In this chapter and the next, we are going to take a closer look at how virtual functions are implemented. While this information is not strictly necessary to effectively use virtual functions, it ..." />
<meta property="article:published_time" content="2008-02-07T23:46:43+00:00" />
<meta property="article:modified_time" content="2008-02-07T23:46:43+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-182 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-182 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-182">
						<div class="post-headline">		<h1>12.4 &#8212; Early binding and late binding</h1>
		</div>		<div class="post-byline">By Alex, on February 7th, 2008</div>		<div class="post-bodycopy clearfix"><p>In this chapter and the next, we are going to take a closer look at how virtual functions are implemented.  While this information is not strictly necessary to effectively use virtual functions, it is interesting.  Nevertheless, you can consider both sections optional reading.</p>
<p>When a C++ program is executed, it executes sequentially, beginning at the top of main().  When a function call is encountered, the point of execution jumps to the beginning of the function being called.  How does the CPU know to do this?</p>
<p>When a program is compiled, the compiler converts each statement in your C++ program into one or more lines of machine language.  Each line of machine language is given it&#8217;s own unique sequential address.  This is no different for functions -- when a function is encountered, it is converted into machine language and given the next available address.  Thus, each function ends up with a unique machine language address.</p>
<p><strong>Binding</strong> refers to the process that is used to convert identifiers (such as variable and function names) into machine language addresses.  Although binding is used for both variables and functions, in this lesson we&#8217;re going to focus on function binding.</p>
<p><strong>Early binding</strong></p>
<p>Most of the function calls the compiler encounters will be direct function calls.  A direct function call is a statement that directly calls a function.  For example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfd8f70811989641" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfd8f70811989641-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f70811989641-2">2</div><div class="crayon-num" data-line="crayon-555d73dfd8f70811989641-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f70811989641-4">4</div><div class="crayon-num" data-line="crayon-555d73dfd8f70811989641-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f70811989641-6">6</div><div class="crayon-num" data-line="crayon-555d73dfd8f70811989641-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f70811989641-8">8</div><div class="crayon-num" data-line="crayon-555d73dfd8f70811989641-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f70811989641-10">10</div><div class="crayon-num" data-line="crayon-555d73dfd8f70811989641-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f70811989641-12">12</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfd8f70811989641-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f70811989641-2">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f70811989641-3"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">PrintValue</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f70811989641-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f70811989641-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f70811989641-6"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73dfd8f70811989641-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f70811989641-8"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f70811989641-9"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f70811989641-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">PrintValue</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// This is a direct function call</span></div><div class="crayon-line" id="crayon-555d73dfd8f70811989641-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f70811989641-12"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0013 seconds] -->
<p></p>
<p>Direct function calls can be resolved using a process known as early binding.  <strong>Early binding</strong> (also called static binding) means the compiler is able to directly associate the identifier name (such as a function or variable name) with a machine address.  Remember that all functions have a unique machine address.  So when the compiler encounters a function call, it replaces the function call with a machine language instruction that tells the CPU to jump to the address of the function.</p>
<p>Let&#8217;s take a look at a simple calculator program that uses early binding:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfd8f82575098936" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-2">2</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-4">4</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-6">6</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-8">8</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-10">10</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-12">12</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-14">14</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-16">16</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-18">18</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-20">20</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-22">22</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-24">24</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-26">26</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-28">28</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-30">30</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-32">32</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-34">34</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-36">36</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-38">38</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-40">40</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-42">42</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-44">44</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f82575098936-46">46</div><div class="crayon-num" data-line="crayon-555d73dfd8f82575098936-47">47</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfd8f82575098936-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-2"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Add</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-7"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-8">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-9"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Subtract</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-10"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-12"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-14"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Multiply</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-15"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-17"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-18">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-19"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-20"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter a number: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-24">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter another number: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-28">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nOperation</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">do</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-31"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-32"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an operation (0=add, 1=subtract, 2=multiply): "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-33"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nOperation</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-34"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nOperation</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-35">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-36"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nResult</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-38"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">nResult</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Add</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-40"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">nResult</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Subtract</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-41"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">nResult</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Multiply</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-42"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-43">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-44"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"The answer is: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nResult</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-45">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f82575098936-46"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f82575098936-47"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0070 seconds] -->
<p></p>
<p>Because Add(), Subtract(), and Multiply() are all direct function calls, the compiler will use early binding to resolve the Add(), Subtract(), and Multiply() function calls.  The compiler will replace the Add() function call with an instruction that tells the CPU to jump to the address of the Add() function.  The same holds true for for Subtract() and Multiply().</p>
<p><strong>Late Binding</strong></p>
<p>In some programs, it is not possible to know which function will be called until runtime (when the program is run).  This is known as <strong>late binding</strong> (or dynamic binding).  In C++, one way to get late binding is to use function pointers.  To review function pointers briefly, a function pointer is a type of pointer that points to a function instead of a variable.  The function that a function pointer points to can be called by using the function call operator (()) on the pointer.</p>
<p>For example, the following code calls the Add() function:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfd8f8b679347098" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f8b679347098-2">2</div><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f8b679347098-4">4</div><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f8b679347098-6">6</div><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f8b679347098-8">8</div><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f8b679347098-10">10</div><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f8b679347098-12">12</div><div class="crayon-num" data-line="crayon-555d73dfd8f8b679347098-13">13</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Add</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f8b679347098-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f8b679347098-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f8b679347098-6"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-7"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f8b679347098-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Create a function pointer and make it point to the Add function</span></div><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-v">pFcn</span><span class="crayon-sy">)</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Add</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f8b679347098-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">pFcn</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// add 5 + 3</span></div><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f8b679347098-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f8b679347098-13"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0020 seconds] -->
<p></p>
<p>Calling a function via a function pointer is also known as an indirect function call.  The following calculator program is functionally identical to the calculator example above, except it uses a function pointer instead of a direct function call:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfd8f91966138436" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-2">2</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-4">4</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-6">6</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-8">8</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-10">10</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-12">12</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-14">14</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-16">16</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-18">18</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-20">20</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-22">22</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-24">24</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-26">26</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-28">28</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-30">30</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-32">32</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-34">34</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-36">36</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-38">38</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-40">40</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-42">42</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-44">44</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-46">46</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-48">48</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfd8f91966138436-50">50</div><div class="crayon-num" data-line="crayon-555d73dfd8f91966138436-51">51</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfd8f91966138436-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-2"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Add</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-7"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-8">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-9"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Subtract</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-10"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-12"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-14"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">Multiply</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-15"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-17"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-18">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-19"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-20"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter a number: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nX</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-24">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter another number: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-28">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nOperation</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">do</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-31"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-32"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an operation (0=add, 1=subtract, 2=multiply): "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-33"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nOperation</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-34"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nOperation</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-35">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-36"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Create a function pointer named pFcn (yes, the syntax is ugly)</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-v">pFcn</span><span class="crayon-sy">)</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-38">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Set pFcn to point to the function the user chose</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-40"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-41"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-42"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Add</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-43"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Subtract</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-44"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Multiply</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-45"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-46">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-47"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Call the function that pFcn is pointing to with nX and nY as parameters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-48"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"The answer is: "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-e">pFcn</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-49">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfd8f91966138436-50"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfd8f91966138436-51"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0069 seconds] -->
<p></p>
<p>In this example, instead of calling the Add(), Subtract(), or Multiply() function directly, we&#8217;ve instead set pFcn to point at the function we wish to call.  Then we call the function through the pointer.  The compiler is unable to use early binding to resolve the function call <code>pFcn(nX, nY)</code> because it can not tell which function pFcn will be pointing to at compile time!</p>
<p>Late binding is slightly less efficient since it involves an extra level of indirection.  With early binding, the compiler can tell the CPU to jump directly to the function&#8217;s address.  With late binding, the program has to read the address held in the pointer and then jump to that address.  This involves one extra step, making it slightly slower.  However, the advantage of late binding is that it is more flexible than early binding, because decisions about what function to call do not need to be made until run time.</p>
<p>In the next lesson, we&#8217;ll take a look at how late binding is used to implement virtual functions.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/125-the-virtual-table/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 12.5 -- The virtual table</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter12" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/123-virtual-destructors-virtual-assignment-and-overriding-virtualization/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 12.3 -- Virtual destructors, virtual assignment, and overriding virtualization</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-182" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-182" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-182" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-182" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">22 comments to 12.4 &#8212; Early binding and late binding</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-22238">
		<div id="div-comment-22238" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/ef0a463a7bd61ec966d1e8204ad16931?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/ef0a463a7bd61ec966d1e8204ad16931?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Arijit Chattopadhyay</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-22238">
		July 29, 2008 at 4:24 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=22238#respond' onclick='return addComment.moveForm( "comment-22238", "22238", "respond", "182" )' aria-label='Reply to Arijit Chattopadhyay'> &middot; Reply</a></span>		 
		</div>
		<p>Good example.. Easy to understand</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-25003">
		<div id="div-comment-25003" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/b19dc0e351c79cff9cf1df1f59641616?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/b19dc0e351c79cff9cf1df1f59641616?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sssss</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-25003">
		August 26, 2008 at 4:20 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=25003#respond' onclick='return addComment.moveForm( "comment-25003", "25003", "respond", "182" )' aria-label='Reply to sssss'> &middot; Reply</a></span>		 
		</div>
		<p>very good example</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-81303">
		<div id="div-comment-81303" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9d8e943143dddacfaf64cf476205b2c6?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9d8e943143dddacfaf64cf476205b2c6?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">RajenKumar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-81303">
		March 23, 2010 at 9:20 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=81303#respond' onclick='return addComment.moveForm( "comment-81303", "81303", "respond", "182" )' aria-label='Reply to RajenKumar'> &middot; Reply</a></span>		 
		</div>
		<p>Vary good example&#8230;.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-30710">
		<div id="div-comment-30710" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/dea3866e5fd4ba54a7c1b8d315fa9b33?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/dea3866e5fd4ba54a7c1b8d315fa9b33?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">gswrg</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-30710">
		October 23, 2008 at 1:25 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=30710#respond' onclick='return addComment.moveForm( "comment-30710", "30710", "respond", "182" )' aria-label='Reply to gswrg'> &middot; Reply</a></span>		 
		</div>
		<p>Why do you use the &#8220;&amp;&#8221; in the first example</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfdc97d683035464" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfdc97d683035464-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc97d683035464-2">2</div><div class="crayon-num" data-line="crayon-555d73dfdc97d683035464-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfdc97d683035464-1"><span class="crayon-h"> </span><span class="crayon-c">// Create a function pointer and make it point to the Add function&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc97d683035464-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-v">pFcn</span><span class="crayon-sy">)</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;Add</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d73dfdc97d683035464-3"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>but not in the second example?</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfdc988047820222" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfdc988047820222-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc988047820222-2">2</div><div class="crayon-num" data-line="crayon-555d73dfdc988047820222-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc988047820222-4">4</div><div class="crayon-num" data-line="crayon-555d73dfdc988047820222-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfdc988047820222-1"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">*</span><span class="crayon-v">pFcn</span><span class="crayon-sy">)</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc988047820222-2"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d73dfdc988047820222-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc988047820222-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d73dfdc988047820222-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Add</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-30970">
		<div id="div-comment-30970" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-30970">
		October 25, 2008 at 10:33 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=30970#respond' onclick='return addComment.moveForm( "comment-30970", "30970", "respond", "182" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>It actually works either way (as far as I know).  I changed the examples to make them consistent though.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-34230">
		<div id="div-comment-34230" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/39587dd22be9b0d38d9d414c3fecb348?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/39587dd22be9b0d38d9d414c3fecb348?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">waruna</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-34230">
		December 11, 2008 at 3:11 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=34230#respond' onclick='return addComment.moveForm( "comment-34230", "34230", "respond", "182" )' aria-label='Reply to waruna'> &middot; Reply</a></span>		 
		</div>
		<p>very clear</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-64070">
		<div id="div-comment-64070" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4c692ee7444631eae322290af57ab23?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4c692ee7444631eae322290af57ab23?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://fromthetenthplanet.blogspot.com' rel='external nofollow' class='url'>dracy</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-64070">
		July 10, 2009 at 4:49 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=64070#respond' onclick='return addComment.moveForm( "comment-64070", "64070", "respond", "182" )' aria-label='Reply to dracy'> &middot; Reply</a></span>		 
		</div>
		<p>that&#8217;s bullshit&#8230; it doesn&#8217;t work&#8230; !! do you know programming at all????? !!!!</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-98219">
		<div id="div-comment-98219" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/852cda50c1ede23d31f56b65851cf95f?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/852cda50c1ede23d31f56b65851cf95f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">HJ</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-98219">
		March 4, 2013 at 11:34 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=98219#respond' onclick='return addComment.moveForm( "comment-98219", "98219", "respond", "182" )' aria-label='Reply to HJ'> &middot; Reply</a></span>		 
		</div>
		<p>Hey friend,<br />
please, be gentle on the guy. Atleast, he is doing something you are not doing-giving his idea. kindly state what you saw that is wrong and help others to see it instead of just insulting the guy. thanks</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-72972">
		<div id="div-comment-72972" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/09e176284ae1a2cd8ed8d07497648168?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/09e176284ae1a2cd8ed8d07497648168?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Max</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-72972">
		November 25, 2009 at 4:18 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=72972#respond' onclick='return addComment.moveForm( "comment-72972", "72972", "respond", "182" )' aria-label='Reply to Max'> &middot; Reply</a></span>		 
		</div>
		<p>Nice and clear thank you.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-84181">
		<div id="div-comment-84181" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/ce974a55e95b4de25f77067286cd8a1f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/ce974a55e95b4de25f77067286cd8a1f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">mak</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-84181">
		May 4, 2010 at 10:55 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=84181#respond' onclick='return addComment.moveForm( "comment-84181", "84181", "respond", "182" )' aria-label='Reply to mak'> &middot; Reply</a></span>		 
		</div>
		<p>the piece of code is an example of late binding itself. Put a code of Virtual functions. Virtual functions are perfect example of late binding or runtime polymorphism.</p>
<p>these lines are clearly late binding example&#8230;.</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfdc70f861711357" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfdc70f861711357-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc70f861711357-2">2</div><div class="crayon-num" data-line="crayon-555d73dfdc70f861711357-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc70f861711357-4">4</div><div class="crayon-num" data-line="crayon-555d73dfdc70f861711357-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc70f861711357-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfdc70f861711357-1"><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc70f861711357-2"><span class="crayon-h">&nbsp;&nbsp; </span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfdc70f861711357-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Add</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc70f861711357-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Subtract</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfdc70f861711357-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-v">pFcn</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">Multiply</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc70f861711357-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-85301">
		<div id="div-comment-85301" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/700a547ad8f0581a72760a2188d05f10?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/700a547ad8f0581a72760a2188d05f10?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://gmail' rel='external nofollow' class='url'>G.Raushan</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-85301">
		May 24, 2010 at 9:02 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=85301#respond' onclick='return addComment.moveForm( "comment-85301", "85301", "respond", "182" )' aria-label='Reply to G.Raushan'> &middot; Reply</a></span>		 
		</div>
		<p>it is good example for C++ late binding and early binding</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-89658">
		<div id="div-comment-89658" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/df9f48c1a48c92f9b9a440621919034b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/df9f48c1a48c92f9b9a440621919034b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ganesh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-89658">
		August 4, 2010 at 10:06 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=89658#respond' onclick='return addComment.moveForm( "comment-89658", "89658", "respond", "182" )' aria-label='Reply to Ganesh'> &middot; Reply</a></span>		 
		</div>
		<p>Nice explanation, very easy to understand , I have already saved the web address.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-95315">
		<div id="div-comment-95315" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4f43c0482baa0af6859656670ed303c7?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4f43c0482baa0af6859656670ed303c7?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">nehemiah</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-95315">
		April 10, 2011 at 1:06 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=95315#respond' onclick='return addComment.moveForm( "comment-95315", "95315", "respond", "182" )' aria-label='Reply to nehemiah'> &middot; Reply</a></span>		 
		</div>
		<p>Woooohoooooo ALEX, Till now nobody cleared my doubt regarding even my college professors !!</p>
<p>Thank you Alex for your mind blowing session !!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-96873">
		<div id="div-comment-96873" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d3107e9cb9f5eac988da6953a6893d84?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d3107e9cb9f5eac988da6953a6893d84?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">rahul nagar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-96873">
		January 25, 2012 at 2:59 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=96873#respond' onclick='return addComment.moveForm( "comment-96873", "96873", "respond", "182" )' aria-label='Reply to rahul nagar'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>In the tutorial you said that &#8220;The compiler is unable to use early binding to resolve the function call pFcn(nX, nY) because it can not tell which function pFcn will be pointing to at compile time!&#8221;</p>
<p>I think the reason for late binding is that the allocation of function pointer pFcn(nX,nY) is at run time(as it is allocated from heap) and hence the function call cannot be resolved at compile time.</p>
<p>If I change the code to below ::</p>
<p>switch (nOperation)<br />
   {<br />
        case 0: Add(nX,nY); break;<br />
        case 1: Subtract(nX,nY); break;<br />
        case 2: Multiply(nX,nY); break;<br />
    }</p>
<p>Will this be late binding or early binding ??</p>
<p>I feel this is early binding as compiler has the address of the functions and the control can move to the address based on choice of user at run time.</p>
<p>Kindly suggest on the above.</p>
<p>Thanks<br />
Rahul</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-97012">
		<div id="div-comment-97012" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f94f39bdd66fa66917c321f72367160a?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f94f39bdd66fa66917c321f72367160a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Augustine P A</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-97012">
		February 29, 2012 at 9:14 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=97012#respond' onclick='return addComment.moveForm( "comment-97012", "97012", "respond", "182" )' aria-label='Reply to Augustine P A'> &middot; Reply</a></span>		 
		</div>
		<p>Nice explanation, very easy to understand.. But my personal opinion is that function pointers are quite interesting than conventional programming. Function Pointers provide some extremely interesting, e?cient and elegant programming techniques. You can use them to replace switch/if-statements, to realize your own late-binding or to implement callbacks.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-97298">
		<div id="div-comment-97298" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a34b6c3fc2d9a2207eb4e3afce7f4aa0?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a34b6c3fc2d9a2207eb4e3afce7f4aa0?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.monitortest.com' rel='external nofollow' class='url'>hubalu</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-97298">
		April 27, 2012 at 6:04 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=97298#respond' onclick='return addComment.moveForm( "comment-97298", "97298", "respond", "182" )' aria-label='Reply to hubalu'> &middot; Reply</a></span>		 
		</div>
		<p>&#8220;The same holds true <b>for for</b> Subtract() and Multiply().&#8221;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-98199">
		<div id="div-comment-98199" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/75cd4a893e0c1a40ec63bb4a3b5c9de4?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/75cd4a893e0c1a40ec63bb4a3b5c9de4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">tvyas</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-98199">
		February 22, 2013 at 7:46 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=98199#respond' onclick='return addComment.moveForm( "comment-98199", "98199", "respond", "182" )' aria-label='Reply to tvyas'> &middot; Reply</a></span>		 
		</div>
		<p>Alex,</p>
<p>I appreciate your efforts here.</p>
<p>However,  I think the example here is not one of late binding, since a compiler might already create  3 options/paths of codes based on the 3 options (0,1, &amp; 2) at compile time!  It is similar situation to the one asked by &#8220;Rahul Nagar&#8221;:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d73dfdc46f904851509" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d73dfdc46f904851509-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc46f904851509-2">2</div><div class="crayon-num" data-line="crayon-555d73dfdc46f904851509-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc46f904851509-4">4</div><div class="crayon-num" data-line="crayon-555d73dfdc46f904851509-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc46f904851509-6">6</div><div class="crayon-num" data-line="crayon-555d73dfdc46f904851509-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc46f904851509-8">8</div><div class="crayon-num" data-line="crayon-555d73dfdc46f904851509-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d73dfdc46f904851509-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d73dfdc46f904851509-1"><span class="crayon-st">If</span><span class="crayon-h"> </span><span class="crayon-i">I</span><span class="crayon-h"> </span><span class="crayon-e">change </span><span class="crayon-e">the </span><span class="crayon-e">code </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-v">below</span><span class="crayon-h"> </span><span class="crayon-o">::</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc46f904851509-2">&nbsp;</div><div class="crayon-line" id="crayon-555d73dfdc46f904851509-3"><span class="crayon-st">switch</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nOperation</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc46f904851509-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d73dfdc46f904851509-5"><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Add</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc46f904851509-6"><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Subtract</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d73dfdc46f904851509-7"><span class="crayon-st">case</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Multiply</span><span class="crayon-sy">(</span><span class="crayon-v">nX</span><span class="crayon-sy">,</span><span class="crayon-v">nY</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-st">break</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc46f904851509-8"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d73dfdc46f904851509-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d73dfdc46f904851509-10"><span class="crayon-e">Will </span><span class="crayon-r">this</span><span class="crayon-h"> </span><span class="crayon-e">be </span><span class="crayon-e">late </span><span class="crayon-e">binding </span><span class="crayon-st">or</span><span class="crayon-h"> </span><span class="crayon-e">early </span><span class="crayon-i">binding</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-sy">?</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0021 seconds] -->
<p></p>
<p>In either cases, I believe it is early binding, not a late binding.  Instead of this, if the end user is asked to input the address of one of the functions (assuming that their addresses are already output before somewhere), and if that address which is entered by the user is used for calling the function would definitely be a late binding example.  </p>
<p>Please feel free to comment/correct me if I am wrong.</p>
<p>Thanks in advance.</p>
<p>-Trilok Vyas.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-252205">
		<div id="div-comment-252205" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c30acc88df242eedcd5159dfab0f345d?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c30acc88df242eedcd5159dfab0f345d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sagar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-252205">
		April 20, 2015 at 1:44 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=252205#respond' onclick='return addComment.moveForm( "comment-252205", "252205", "respond", "182" )' aria-label='Reply to sagar'> &middot; Reply</a></span>		 
		</div>
		<p>I think second one is a example of late binding because while doing a actual function call ie pFcn(nX, nY) the compiler doesn&#8217;t know to jump to which address at the time of compilation because it is via function pointer and the value of the function pointer changes with user input. But in case of first one the compiler replaces the function call with proper jump statement to the address where the function is written and this is decided at compile time itself.So it is all about the compiler replacing user written function call with proper jump statement.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-110666">
		<div id="div-comment-110666" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/94ec4bdbea73e082c53c7c73cd96e144?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/94ec4bdbea73e082c53c7c73cd96e144?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">smru</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-110666">
		November 28, 2013 at 7:00 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=110666#respond' onclick='return addComment.moveForm( "comment-110666", "110666", "respond", "182" )' aria-label='Reply to smru'> &middot; Reply</a></span>		 
		</div>
		<p>precisely explained concept..was very useful..</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-125140">
		<div id="div-comment-125140" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2616c31c98686cb2c98b7764a67cce00?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2616c31c98686cb2c98b7764a67cce00?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.ictvpn.net' rel='external nofollow' class='url'>ict_ifycent2</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-125140">
		February 14, 2014 at 1:27 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=125140#respond' onclick='return addComment.moveForm( "comment-125140", "125140", "respond", "182" )' aria-label='Reply to ict_ifycent2'> &middot; Reply</a></span>		 
		</div>
		<p>nice tutorial</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-252210">
		<div id="div-comment-252210" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f4999922fdbcadd9b84719a983c7e9d9?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f4999922fdbcadd9b84719a983c7e9d9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ben</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-252210">
		April 21, 2015 at 6:01 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=252210#respond' onclick='return addComment.moveForm( "comment-252210", "252210", "respond", "182" )' aria-label='Reply to ben'> &middot; Reply</a></span>		 
		</div>
		<p>very help full .nice presentation. Thank you</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-252352">
		<div id="div-comment-252352" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d58845ee513e3bbb3972a361dc731241?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d58845ee513e3bbb3972a361dc731241?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">sarthak</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/124-early-binding-and-late-binding/#comment-252352">
		May 6, 2015 at 8:18 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/124-early-binding-and-late-binding/?replytocom=252352#respond' onclick='return addComment.moveForm( "comment-252352", "252352", "respond", "182" )' aria-label='Reply to sarthak'> &middot; Reply</a></span>		 
		</div>
		<p>Good explanation</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/124-early-binding-and-late-binding/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>12 &#43; seventeen = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4Nzg3MnR5bTdtZjVxZ3o3ZGJwYWozMW04Mjk=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432187872" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='182' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a5bbe2e578" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="247"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/124-early-binding-and-late-binding\/":182};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/124-early-binding-and-late-binding/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'182',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '182' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.831 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 21:57:52 -->

<!-- Compression = gzip -->
<!-- super cache -->

