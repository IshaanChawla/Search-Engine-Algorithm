<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

		<!-- Copyright (c) NextDawn 2007-2009 All rights reserved -->
  		<!-- Developed by : www.nextdawn.nl -->
		<!-- Contact : contact@nextdawn.nl -->
		
<head profile="http://gmpg.org/xfn/11">
<meta name="google-site-verification" content="G5RDgCqtCFBG4cey1sDM72BU7o__Y7tsE-nBe96YcYg" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>C Tutorial – Splitting a Text File into Multiple Files | CodingUnit Programming Tutorials</title>

    <meta name="description" content="C Tutorial – Splitting a Text File into Multiple Files" />

    <meta name="generator" content="WordPress 4.2.2" /> <!-- leave this for stats -->

    <script type="text/javascript" src="http://www.codingunit.com/wp-content/themes/codingunit-theme/nextdawn.js"></script>
    <link rel="stylesheet" href="http://www.codingunit.com/wp-content/themes/codingunit-theme/style.css" type="text/css" media="screen" />

    <link rel="stylesheet" href="http://www.codingunit.com/wp-content/themes/codingunit-theme/widgets.css" type="text/css" media="screen" />

    <link rel="shortcut icon" type="image/ico" href="http://www.codingunit.com/wp-content/themes/codingunit-theme/favicon.ico" />
	<link rel="alternate" type="text/xml" title="RSS .92" href="http://www.codingunit.com/feed/rss" />
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://www.codingunit.com/feed/atom" />
		<link rel='archives' title='June 2014' href='http://www.codingunit.com/2014/06' />
	<link rel='archives' title='June 2013' href='http://www.codingunit.com/2013/06' />
	<link rel='archives' title='January 2013' href='http://www.codingunit.com/2013/01' />
	<link rel='archives' title='November 2012' href='http://www.codingunit.com/2012/11' />
	<link rel='archives' title='June 2012' href='http://www.codingunit.com/2012/06' />
	<link rel='archives' title='April 2012' href='http://www.codingunit.com/2012/04' />
	<link rel='archives' title='November 2011' href='http://www.codingunit.com/2011/11' />
	<link rel='archives' title='February 2011' href='http://www.codingunit.com/2011/02' />
	<link rel='archives' title='December 2010' href='http://www.codingunit.com/2010/12' />
	<link rel='archives' title='October 2010' href='http://www.codingunit.com/2010/10' />
	<link rel='archives' title='June 2010' href='http://www.codingunit.com/2010/06' />
	<link rel='archives' title='May 2010' href='http://www.codingunit.com/2010/05' />
	<link rel='archives' title='April 2010' href='http://www.codingunit.com/2010/04' />
	<link rel='archives' title='March 2010' href='http://www.codingunit.com/2010/03' />
	<link rel='archives' title='February 2010' href='http://www.codingunit.com/2010/02' />
	<link rel='archives' title='January 2010' href='http://www.codingunit.com/2010/01' />
	<link rel='archives' title='November 2009' href='http://www.codingunit.com/2009/11' />
	<link rel='archives' title='September 2009' href='http://www.codingunit.com/2009/09' />
	<link rel='archives' title='July 2009' href='http://www.codingunit.com/2009/07' />
	<link rel='archives' title='September 2007' href='http://www.codingunit.com/2007/09' />
    <link rel="alternate" type="application/rss+xml" title="CodingUnit Programming Tutorials RSS Feed" href="http://www.codingunit.com/feed" />
    <link rel="pingback" href="http://www.codingunit.com/xmlrpc.php" />

<!--[if IE]>
<style type="text/css">#sizer {width:expression(document.body.clientWidth > 650 ? "100%" : "100%" );}</style>
<![endif]-->


<!-- All in One SEO Pack 2.2.6.2 by Michael Torbert of Semper Fi Web Design[537,643] -->
<meta name="description"  content="A new year (have a good new year by the way) a new C language tutorial. We start the year with a C language tutorial where we will look at how to split a text" />

<meta name="keywords"  content="c tutorials" />

<link rel="canonical" href="http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files" />
<!-- /all in one seo pack -->
<link rel="alternate" type="application/rss+xml" title="CodingUnit Programming Tutorials &raquo; C Tutorial – Splitting a Text File into Multiple Files Comments Feed" href="http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files/feed" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"wpemoji":"http:\/\/www.codingunit.com\/wp-includes\/js\/wp-emoji.js?ver=4.2.2","twemoji":"http:\/\/www.codingunit.com\/wp-includes\/js\/twemoji.js?ver=4.2.2"}};
			( function( window, document, settings ) {
	var src, ready;

	/**
	 * Detect if the browser supports rendering emoji or flag emoji. Flag emoji are a single glyph
	 * made of two characters, so some browsers (notably, Firefox OS X) don't support them.
	 *
	 * @since 4.2.0
	 *
	 * @param type {String} Whether to test for support of "simple" or "flag" emoji.
	 * @return {Boolean} True if the browser can render emoji, false if it cannot.
	 */
	function browserSupportsEmoji( type ) {
		var canvas = document.createElement( 'canvas' ),
			context = canvas.getContext && canvas.getContext( '2d' );

		if ( ! context || ! context.fillText ) {
			return false;
		}

		/*
		 * Chrome on OS X added native emoji rendering in M41. Unfortunately,
		 * it doesn't work when the font is bolder than 500 weight. So, we
		 * check for bold rendering support to avoid invisible emoji in Chrome.
		 */
		context.textBaseline = 'top';
		context.font = '600 32px Arial';

		if ( type === 'flag' ) {
			/*
			 * This works because the image will be one of three things:
			 * - Two empty squares, if the browser doesn't render emoji
			 * - Two squares with 'G' and 'B' in them, if the browser doesn't render flag emoji
			 * - The British flag
			 *
			 * The first two will encode to small images (1-2KB data URLs), the third will encode
			 * to a larger image (4-5KB data URL).
			 */
			context.fillText( String.fromCharCode( 55356, 56812, 55356, 56807 ), 0, 0 );
			return canvas.toDataURL().length > 3000;
		} else {
			/*
			 * This creates a smiling emoji, and checks to see if there is any image data in the
			 * center pixel. In browsers that don't support emoji, the character will be rendered
			 * as an empty square, so the center pixel will be blank.
			 */
			context.fillText( String.fromCharCode( 55357, 56835 ), 0, 0 );
			return context.getImageData( 16, 16, 1, 1 ).data[0] !== 0;
		}
	}

	function addScript( src ) {
		var script = document.createElement( 'script' );

		script.src = src;
		script.type = 'text/javascript';
		document.getElementsByTagName( 'head' )[0].appendChild( script );
	}

	settings.supports = {
		simple: browserSupportsEmoji( 'simple' ),
		flag:   browserSupportsEmoji( 'flag' )
	};

	settings.DOMReady = false;
	settings.readyCallback = function() {
		settings.DOMReady = true;
	};

	if ( ! settings.supports.simple || ! settings.supports.flag ) {
		ready = function() {
			settings.readyCallback();
		};

		if ( document.addEventListener ) {
			document.addEventListener( 'DOMContentLoaded', ready, false );
			window.addEventListener( 'load', ready, false );
		} else {
			window.attachEvent( 'onload', ready );
			document.attachEvent( 'onreadystatechange', function() {
				if ( 'complete' === document.readyState ) {
					settings.readyCallback();
				}
			} );
		}

		src = settings.source || {};

		if ( src.concatemoji ) {
			addScript( src.concatemoji );
		} else if ( src.wpemoji && src.twemoji ) {
			addScript( src.twemoji );
			addScript( src.wpemoji );
		}
	}

} )( window, document, window._wpemojiSettings );
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.codingunit.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.codingunit.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='C Tutorial – Deleting a Record from a Binary File' href='http://www.codingunit.com/c-tutorial-deleting-a-record-from-a-binary-file' />
<link rel='next' title='C Tutorial – Error Handling (Exception Handling)' href='http://www.codingunit.com/c-tutorial-error-handling-exception-handling' />
<meta name="generator" content="WordPress 4.2.2" />
<link rel='shortlink' href='http://www.codingunit.com/?p=1323' />
</head>
<body>

<div id="sizer">
<div id="expander">

<div id="newheader">
    <ul id="headerimage">
        <li><a href="http://www.codingunit.com/"></a></li>
    </ul>
</div>

<div id="navigation">
    <ul id="nav">
        <li><a href="http://www.codingunit.com/" title="Home: CodingUnit Programming Tutorials">Home</a></li>
        <li class="page_item page-item-2"><a href="http://www.codingunit.com/about">About</a></li>
    </ul>
	<div id="googlesearch">
		<form action="http://www.google.com/cse" id="cse-search-box" target="_blank">
  <div>
    <input type="hidden" name="cx" value="partner-pub-7868601750853261:s9r1fl-a8sm" />
    <input type="hidden" name="ie" value="ISO-8859-1" />
    <input type="text" name="q" size="25" />
    <input type="submit" name="sa" value="Search" />
  </div>
</form>
<script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>



	</div>
	<div id="rss">
		<a href="http://www.codingunit.com/feed" title="Subscribe to CodingUnit Programming Tutorials" class="iconrss">rss posts</a>
	</div>
</div>

<div id="wrapper1">

<div class="outer">

<div class="float-wrap">

<div id="column1">

<div class="centerbox">

    <a href="#" name="documentContent"></a>
  
	<div class="post" id="post-1323">
		<h1 class="firstheading"><a href="http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files" rel="bookmark" title="C Tutorial – Splitting a Text File into Multiple Files">
		C Tutorial – Splitting a Text File into Multiple Files</a></h1>

			<div class="entry">
				<div id="watermark">
					<p>A new year (have a good new year by the way) a new C language tutorial. We start the year with a C language tutorial where we will look at how to split a text file into multiple files. In previous tutorials we already looked at <strong><a href="http://www.codingunit.com/c-tutorial-file-io-using-text-files" title="C Tutorial on File IO using Text Files">reading and writing text files in C examples</a></strong> and <a href="http://www.codingunit.com/c-tutorial-searching-for-strings-in-a-text-file" title="C Tutorial Searching for  Strings in a Text File">searching in text files</a>, so in this tutorial we will build on these tutorials.<span id="more-1323"></span></p>
<h2>Splitting Text Files</h2>
<p>Let’s first look at the source code of our split text program, before we look at what we are doing in the example:</p>
<div id="cl">
<pre><code>
#include &lt;stdio.h&gt;

int main() {
	FILE *ptr_readfile;
	FILE *ptr_writefile;
	char line [128]; /* or some other suitable maximum line size */
	char fileoutputname[15];
	int filecounter=1, linecounter=1;

	ptr_readfile = fopen("test.txt","r");
	if (!ptr_readfile)
		return 1;

	sprintf(fileoutputname, "file_part%d", filecounter);
	ptr_writefile = fopen(fileoutputname, "w");

	while (fgets(line, sizeof line, ptr_readfile)!=NULL) {
		if (linecounter == 5) {
			fclose(ptr_writefile);
			linecounter = 1;
			filecounter++;
			sprintf(fileoutputname, "file_part%d", filecounter);
			ptr_writefile = fopen(fileoutputname, "w");
			if (!ptr_writefile)
				return 1;
		}
		fprintf(ptr_writefile,"%s\n", line);
		linecounter++;
	}
	fclose(ptr_readfile);
	return 0;
}

</code></pre>
</div>
<p>The example starts by including stdio.h header file. In the main() function we declare two file-pointers, one for reading and one for writing. Then a buffer is created with a maximum line size of 128 characters (or change it to any other suitable maximum line size). An array of characters is created to hold the file output name of the files that are split and there are some counters created (a filecounter and a linecounter).</p>
<p>After the declaration of some variable we need, we start by open a file for reading. In the if statement we check if the open went correctly.</p>
<p>In the next statements we create an output file name by adding the value of filecounter to the string file_part, so you get  file_part1, file_part2 and so on. Then we open the first output file for writing in the next statement.</p>
<p>Now that we have done all the initializations, we can take a look at the hard of program, the while loop. The while loop will run until there are no lines in the source file. The fgets function get those line (one by one) from the source file. In the if statement we check for the number of lines we have handled, if it equals 5 then the block of code is handled, otherwise the lines are written to the output file. If the if statement is true we want to switch to a new output file.</p>
<p>In the if statement we first close our output file and we reset the line counter. We then do a plus one of the file counter. Then an new output file name is created in the sprintf statement. We open the new file for writing and do some simple error checking in the if statement. As stated before, there will be files created until there are no more lines in the input file.</p>
<p><strong>NOTE:</strong> don’t add to much lines to your test.txt input file, otherwise number of split files can get very large! You’ve be warned ;-). </p>
<p><strong>Cleaning Up the Source Code</strong><br />
Last thing we need to clean up our c splitting files example, by removing the double parts of the program and moving them to a function we can call. First take a look at the result of this cleanup action:</p>
<div id="cl">
<pre><code>
#include &lt;stdio.h&gt;

FILE *openforwrite(int filecounter) {
	char fileoutputname[15];

	sprintf(fileoutputname, "file_part%d", filecounter);
	return fopen(fileoutputname, "w");
}

int main() {
	FILE *ptr_readfile;
	FILE *ptr_writefile;
	char line [128]; /* or some other suitable maximum line size */
	int filecounter=1, linecounter=1;

	ptr_readfile = fopen("test.txt","r");
	if (!ptr_readfile)
		return 1;

	ptr_writefile = openforwrite(filecounter);

	while (fgets(line, sizeof line, ptr_readfile)!=NULL) {
		if (linecounter == 5) {
			fclose(ptr_writefile);
			linecounter = 1;
			filecounter++;
			ptr_writefile = openforwrite(filecounter);	
			if (!ptr_writefile)
			return 1;
		}
		fprintf(ptr_writefile,"%s\n", line);
		linecounter++;
	}
	fclose(ptr_readfile);
	return 0;
}


</code></pre>
</div>
<p>If you compare the first source code example with the second example, you’ll see that the only thing that we’ve done is moving the creation and opening of the output file to a function. Let’s take a look at the function openforwrite().</p>
<p>The function openforwrite() takes an integer (filecounter) and will return a file pointer to an open file with a filename that was created in the sprintf statement.</p>
<p>The rest of the program is almost the same as the description of the previous example. Only the two calls to openforwrite() are added to replace the sprintf, open file and if control statements.</p>
<p>That’s all for this C tutorials, until next time!</p>
				</div>
				
    <div class="boxedup">
					<small>
						This entry was posted in <a href="http://www.codingunit.com/category/c-tutorials" rel="category tag">C Tutorials</a>.
						You can follow any responses to this entry through the <a href='http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files/feed'>RSS 2.0</a> feed.
												
													Both comments and pings are currently closed.

												
						<a href="http://twitter.com/home?status=C Tutorial – Splitting a Text File into Multiple Files http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files" title="Click to send this page to Twitter!" target="_blank"><img src="http://www.codingunit.com/wp-content/themes/codingunit-theme/images/tweet-this2.png" width="18" height="18" alt="Tweet This!" /> Tweet This!</a><strong> or use </strong>
<script type="text/javascript" src="http://w.sharethis.com/widget/?tabs=web&amp;charset=utf-8&amp;style=default&amp;publisher=175d6d6f-554e-47d3-97f3-e45eb2d68de7&amp;headerbg=%230997b9"></script><strong> to share this post with others.</strong>						
					</small>
				</div>

			</div>
		</div>

	<div class="boxedup">
<!-- You can start editing here. -->

	<h3 id="comments">There are currently 4 responses to &#8220;C Tutorial – Splitting a Text File into Multiple Files&#8221;</h3> 
        <p>Why not let us know what you think by adding your own comment!</p>
	<ol class="commentlist">

	
		<li class="alt" id="comment-5937">

            			<cite>paplaukias</cite> on <small>January 7th, 2013</small>:
			
			<p>Hi,<br />
great tutorials. been working them through. I&#8217;ve found a little bug in this tutorial. </p>
<p>in the part &#8216;sprintf(fileoutputname, &#8220;file_part%d&#8221;, filecounter)&#8217; it would be more convenient to write &#8220;file_part%d.txt&#8221; so then after the program runs, there would be .txt files.</p>
<p>but great tutorial otherwise. keep up the good work</p>
		</li>

	
	
		<li class="" id="comment-5948">

            			<cite><a href='http://www.codingunit.com' rel='external nofollow' class='url'>admin</a></cite> on <small>January 7th, 2013</small>:
			
			<p>@paplaukias: yes, that is possible to write “file_part%d.txt” instead of  “file_part%d” (and especially true on windows systems). But on Unix or Linux systems usually we don&#8217;t use extensions (in this case I created the source code on a Red Hat system). Both are fine, so use which ever is more clear to you. Good luck!.</p>
		</li>

	
	
		<li class="alt" id="comment-6651">

            			<cite>Igor</cite> on <small>March 24th, 2013</small>:
			
			<p>Thanks a lot for your tutorials.<br />
I used to work with C when I was at university. Some years passed and I need to make a program again (find a string in a line, remove unwanted words and put it on file). I&#8217;m spending this weekend trying to remember some C stuff. Tutorials here are really well explained and helped me to get my initial code better.</p>
		</li>

	
	
		<li class="" id="comment-10252">

            			<cite>pragnya</cite> on <small>April 2nd, 2014</small>:
			
			<p>Hi i m beginner in c language, i want code for one program&#8230;please help<br />
WAP to read a string from text file which contains:-<br />
place=usa<br />
place=japan<br />
place=canada<br />
bird=parrot<br />
bird=peacock<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
In the output we should get like<br />
place=usa,japan,canada<br />
bird=parrot,peacock</p>
		</li>

	
	
	</ol>

 

</div>

	
   <div id="back">
            <a href="#documentContent" title="up to the page content">up to content</a> &raquo;
    </div>
</div>
</div>

<div id="column2">
<div class="container-left">

							<ul><li class="listHeader"><h2>C Tutorials</h2></li>
			<hr/>
																<li><a href="http://www.codingunit.com/the-history-of-the-c-language" rel="bookmark" title="The History of the C Language">The History of the C Language</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-compilers-gnu-and-visual-studio" rel="bookmark" title="C Tutorial &#8211; Compilers (GNU and Visual Studio)">C Tutorial &#8211; Compilers (GNU and Visual Studio)</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-first-c-program-hello-world" rel="bookmark" title="First C program, Hello World">First C program, Hello World</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-variables-and-constants" rel="bookmark" title="C Tutorial &#8211; variables and constants">C Tutorial &#8211; variables and constants</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-the-if-and-switch-statement" rel="bookmark" title="C Tutorial &#8211; The if and switch statement">C Tutorial &#8211; The if and switch statement</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-for-loop-while-loop-break-and-continue" rel="bookmark" title="C Tutorial &#8211; for loop, while loop, break and continue">C Tutorial &#8211; for loop, while loop, break and continue</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-arrays-and-multi-dimensional-arrays" rel="bookmark" title="C Tutorial &#8211; Arrays and Multi-Dimensional Arrays">C Tutorial &#8211; Arrays and Multi-Dimensional Arrays</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-functions-and-global-local-variables" rel="bookmark" title="C Tutorial &#8211; Functions and Global/Local variables">C Tutorial &#8211; Functions and Global/Local variables</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-more-on-c-functions" rel="bookmark" title="C Tutorial &#8211; More on Functions">C Tutorial &#8211; More on Functions</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-how-to-use-pointers" rel="bookmark" title="C Tutorial &#8211; How to use Pointers">C Tutorial &#8211; How to use Pointers</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-more-on-pointers" rel="bookmark" title="C Tutorial &#8211; More on Pointers">C Tutorial &#8211; More on Pointers</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-strings-and-string-library-functions" rel="bookmark" title="C Tutorial &#8211; strings and string Library Functions">C Tutorial &#8211; strings and string Library Functions</a></li>
									<li><a href="http://www.codingunit.com/printf-format-specifiers-format-conversions-and-formatted-output" rel="bookmark" title="C Tutorial &#8211; printf, Format Specifiers, Format Conversions and Formatted Output">C Tutorial &#8211; printf, Format Specifiers, Format Conversions and Formatted Output</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-structures-unions-typedef" rel="bookmark" title="C Tutorial &#8211; structures, unions, typedef">C Tutorial &#8211; structures, unions, typedef</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-file-io-using-text-files" rel="bookmark" title="C Tutorial &#8211; File I/O (using text files)">C Tutorial &#8211; File I/O (using text files)</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-the-functions-malloc-and-free" rel="bookmark" title="C Tutorial &#8211; The functions malloc and free">C Tutorial &#8211; The functions malloc and free</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-binary-file-io" rel="bookmark" title="C Tutorial &#8211; Binary File I/O">C Tutorial &#8211; Binary File I/O</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-deleting-and-renaming-a-file" rel="bookmark" title="C Tutorial &#8211; Deleting and Renaming a File">C Tutorial &#8211; Deleting and Renaming a File</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-copying-a-file-in-c" rel="bookmark" title="C Tutorial &#8211; Copying a File">C Tutorial &#8211; Copying a File</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-command-line-parameter-parsing" rel="bookmark" title="C Tutorial &#8211; Command Line Parameter Parsing">C Tutorial &#8211; Command Line Parameter Parsing</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-how-to-use-time-and-date-in-c" rel="bookmark" title="How to use Time and Date in C">How to use Time and Date in C</a></li>
									<li><a href="http://www.codingunit.com/writing-memory-to-a-file-and-reading-memory-from-a-file-in-c" rel="bookmark" title="Writing Memory to a File and Reading Memory from a File in C">Writing Memory to a File and Reading Memory from a File in C</a></li>
									<li><a href="http://www.codingunit.com/how-to-make-a-calendar-in-c" rel="bookmark" title="How to make a Calendar in C">How to make a Calendar in C</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-searching-for-strings-in-a-text-file" rel="bookmark" title="C Tutorial &#8211; Searching for Strings in a Text File">C Tutorial &#8211; Searching for Strings in a Text File</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-number-of-seconds-in-decade-and-visaversa" rel="bookmark" title="C Tutorial &#8211; Number of Seconds in Decade and Visa-Versa">C Tutorial &#8211; Number of Seconds in Decade and Visa-Versa</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-a-star-pyramid-and-string-triangle-using-for-loops" rel="bookmark" title="C Tutorial – A Star pyramid and String triangle using for loops">C Tutorial – A Star pyramid and String triangle using for loops</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference" rel="bookmark" title="C Tutorial – Call by Value or Call by Reference">C Tutorial – Call by Value or Call by Reference</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-deleting-a-record-from-a-binary-file" rel="bookmark" title="C Tutorial – Deleting a Record from a Binary File">C Tutorial – Deleting a Record from a Binary File</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files" rel="bookmark" title="C Tutorial – Splitting a Text File into Multiple Files">C Tutorial – Splitting a Text File into Multiple Files</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-error-handling-exception-handling" rel="bookmark" title="C Tutorial – Error Handling (Exception Handling)">C Tutorial – Error Handling (Exception Handling)</a></li>
									<li><a href="http://www.codingunit.com/c-tutorial-queues" rel="bookmark" title="C Tutorial &#8211; Queues">C Tutorial &#8211; Queues</a></li>
								
			</ul>
					</div>
</div>
<br class="clear" />
</div>

<div id="column3">
<div class="container-right">
	<div class="google-skyscraper"><script type="text/javascript"><!--
google_ad_client = "pub-7868601750853261";
/* 300x250, created 9/24/08 */
google_ad_slot = "9605146122";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
			<ul><li class="listHeader"><h2>Latest Posts</h2></li>
		<hr/>
				<li><a href='http://www.codingunit.com/c-tutorial-queues'>C Tutorial &#8211; Queues</a></li>
	<li><a href='http://www.codingunit.com/c-tutorial-error-handling-exception-handling'>C Tutorial – Error Handling (Exception Handling)</a></li>
	<li><a href='http://www.codingunit.com/c-tutorial-splitting-a-text-file-into-multiple-files'>C Tutorial – Splitting a Text File into Multiple Files</a></li>
	<li><a href='http://www.codingunit.com/c-tutorial-deleting-a-record-from-a-binary-file'>C Tutorial – Deleting a Record from a Binary File</a></li>
	<li><a href='http://www.codingunit.com/c-tutorial-call-by-value-or-call-by-reference'>C Tutorial – Call by Value or Call by Reference</a></li>
	<li><a href='http://www.codingunit.com/checking-for-palindrome-strings-or-numbers-in-c-language'>Checking for Palindrome Strings or Numbers in C Language</a></li>
	<li><a href='http://www.codingunit.com/linear-search-algorithm-in-c-language'>Linear Search Algorithm in C Language</a></li>
	<li><a href='http://www.codingunit.com/determining-the-area-of-different-shaped-triangles-in-c'>Determining the Area of Different Shaped Triangles in C</a></li>
	<li><a href='http://www.codingunit.com/area-of-a-rectangle-circle-and-trapezium-in-c'>Area of a Rectangle Circle and Trapezium in C</a></li>
	<li><a href='http://www.codingunit.com/how-to-print-floyds-triangle-in-c'>How to Print Floyds Triangle in C</a></li>
		</ul>
		<div class="google-skyscraper"><script type="text/javascript"><!--
google_ad_client = "pub-7868601750853261";
/* 300x250, created 9/24/08 */
google_ad_slot = "9605146122";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
	<div class="google-skyscraper"><script type="text/javascript"><!--
google_ad_client = "pub-7868601750853261";
/* 300x250, created 9/24/08 */
google_ad_slot = "9605146122";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
</div>
</div>

<br class="clear" />

</div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-2735312-4");
pageTracker._trackPageview();
} catch(err) {}</script>
<div id="footer">
	<hr/>
    <p>&copy; 2015 <a href="http://www.codingunit.com">CodingUnit Programming Tutorials</a>. All Rights Reserved. | <a href="mailto:contact@codingunit.com?subject=Question">Contact</a></p>
	<p><a href="http://www.codingunit.com/terms" target="_blank">TERMS</a> 
	  and <a href="http://www.codingunit.com/privacy-policy" target="_blank">Privacy Policy</a> 
	  UNDER WHICH THIS SERVICE IS PROVIDED TO YOU.</p>
</div>

</div>


</div>
</div>
        <!-- 28 queries. 0.613 seconds. -->
</body>
</html>

