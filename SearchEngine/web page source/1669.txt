<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>14.5 &#8212; Class template specialization &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 14.5 &#8212; Class template specialization Comments Feed" href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"27.122.242.72","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[["2015","04","29"],["1"]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/145-class-template-specialization\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='14.4 &#8212; Expression parameters and template specialization' href='http://www.learncpp.com/cpp-tutorial/144-expression-parameters-and-template-specialization/' />
<link rel='next' title='14.6 &#8212; Partial template specialization' href='http://www.learncpp.com/cpp-tutorial/146-partial-template-specialization/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=210' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="14.5 -- Class template specialization" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/" />
<meta property="og:description" content="In the previous lesson on template specialization, we saw how it was possible to specialize member functions of a template class in order to provide different functionality for specific data types...." />
<meta property="article:published_time" content="2008-08-16T22:25:28+00:00" />
<meta property="article:modified_time" content="2008-08-16T22:25:28+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-210 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-210 post type-post status-publish format-standard hentry category-cpp-tutorial tag-c tag-classes tag-programming tag-specialization tag-templates tag-tutorial odd" id="post-210">
						<div class="post-headline">		<h1>14.5 &#8212; Class template specialization</h1>
		</div>		<div class="post-byline">By Alex, on August 16th, 2008</div>		<div class="post-bodycopy clearfix"><p>In the previous lesson on <a href="http://www.learncpp.com/cpp-tutorial/144-expression-parameters-and-template-specialization/">template specialization</a>, we saw how it was possible to specialize member functions of a template class in order to provide different functionality for specific data types.  As it turns out, it is not only possible to specialize member functions of a template class, it is also possible to specialize an entire class!</p>
<p>Consider the case where you want to design a class that stores 8 objects.  Here&#8217;s a simplified class to do so:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e38db90197080707" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e38db90197080707-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-2">2</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-4">4</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-6">6</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-8">8</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-10">10</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-12">12</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-14">14</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38db90197080707-16">16</div><div class="crayon-num" data-line="crayon-555d74e38db90197080707-17">17</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e38db90197080707-1"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-r">typename</span><span class="crayon-h"> </span><span class="crayon-e">T</span><span class="crayon-o">&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Storage8</span></div><div class="crayon-line" id="crayon-555d74e38db90197080707-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-4"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d74e38db90197080707-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-i">T</span><span class="crayon-h"> </span><span class="crayon-v">m_tType</span><span class="crayon-sy">[</span><span class="crayon-cn">8</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-6">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38db90197080707-7"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">Set</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-v">T</span><span class="crayon-h"> </span><span class="crayon-v">&amp;tType</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e38db90197080707-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_tType</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">tType</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38db90197080707-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-12">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38db90197080707-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-v">T</span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-e">Get</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e38db90197080707-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_tType</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38db90197080707-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d74e38db90197080707-17"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0023 seconds] -->
<p></p>
<p>Because this class is templated, it will work fine for any given type:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e38dba2800128580" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-2">2</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-4">4</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-6">6</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-8">8</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-10">10</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-12">12</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-14">14</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-16">16</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-18">18</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dba2800128580-20">20</div><div class="crayon-num" data-line="crayon-555d74e38dba2800128580-21">21</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e38dba2800128580-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Define a Storage8 for integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">.</span><span class="crayon-e">Set</span><span class="crayon-sy">(</span><span class="crayon-v">nCount</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-8">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38dba2800128580-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">.</span><span class="crayon-e">Get</span><span class="crayon-sy">(</span><span class="crayon-v">nCount</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Define a Storage8 for bool</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">bool</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cBoolStorage</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cBoolStorage</span><span class="crayon-sy">.</span><span class="crayon-e">Set</span><span class="crayon-sy">(</span><span class="crayon-v">nCount</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-16">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38dba2800128580-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">cBoolStorage</span><span class="crayon-sy">.</span><span class="crayon-e">Get</span><span class="crayon-sy">(</span><span class="crayon-v">nCount</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-s">"true"</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-s">"false"</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dba2800128580-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dba2800128580-21"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0047 seconds] -->
<p></p>
<p>This example prints:</p>
<pre>
0
1
2
3
4
5
6
7
false
true
true
true
false
true
true
true
</pre>
<p>While this class is completely functional, it turns out that the implementation of Storage8&lt;bool&gt; is much more inefficient than it needs to be.  Because all variables must have an address, and the CPU can&#8217;t address anything smaller than a byte, all variables must be at least a byte in size.  Consequently, a variable of type bool ends up using an entire byte even though technically it only needs a single bit to store its true or false value!  Thus, a bool is 1 bit of useful information and 7 bits of wasted space.  Our Storage8&lt;bool&gt; class, which contains 8 bools, is 1 byte worth of useful information and 7 types of wasted space.</p>
<p>As it turns out, using some basic bit logic, it&#8217;s possible to compress all 8 bools into a single byte, eliminating the wasted space altogether.  However, in order to do this, we&#8217;ll effectively need to essentially revamp the class, replacing the array of 8 bools with a variable that is a single byte in size.  While we could create an entirely new class to do so, this has one major downside: we have to give it a different name.  Then the programmer has to remember that Storage8&lt;T&gt; is meant for non-bool types, whereas Storage8Bool (or whatever we name the new class) is meant for bools.  That&#8217;s needless complexity we&#8217;d rather avoid.  Fortunately, C++ provides us a better method: class template specialization.</p>
<p><strong>Class template specialization</strong></p>
<p>Class template specialization allows us to specialize a template class for a particular data type (or set of data types, if there are multiple templated parameters).  In this case, we&#8217;re going to use class template specialization to write a customized version of Storage8&lt;bool&gt; that will take precedence over the generic Storage8&lt;T&gt; class.</p>
<p>Class template specializations are treated as completely independent classes, even though they are allocated in the same way as the templated class.  This means that we can change anything and everything about our specialization class, including the way it&#8217;s implemented and even the functions it makes public, just as if it were an independent class.  Here&#8217;s our specialized class:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e38dbac333719990" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-2">2</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-4">4</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-6">6</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-8">8</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-10">10</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-12">12</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-14">14</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-16">16</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-18">18</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-20">20</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-22">22</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-24">24</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-26">26</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbac333719990-28">28</div><div class="crayon-num" data-line="crayon-555d74e38dbac333719990-29">29</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e38dbac333719990-1"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&gt;</span><span class="crayon-h"> </span><span class="crayon-c">// the following is a template class with no templated parameters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">bool</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-c">// we're specializing Storage8 for bool</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-4"><span class="crayon-c">// What follows is just standard class implementation details</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-5"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">m_tType</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-8"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">Set</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-v">tType</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Figure out which bit we're setting/unsetting</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// This will put a 1 in the bit we're interested in turning on/off</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">nMask</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-14">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38dbac333719990-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">tType</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// If we're setting a bit</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_tType</span><span class="crayon-h"> </span><span class="crayon-o">|=</span><span class="crayon-h"> </span><span class="crayon-v">nMask</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// Use bitwise-or to turn that bit on</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// if we're turning a bit off</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_tType</span><span class="crayon-h"> </span><span class="crayon-o">&amp;=</span><span class="crayon-h"> </span><span class="crayon-o">~</span><span class="crayon-v">nMask</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-c">// bitwise-and the inverse mask to turn that bit off</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-19"><span class="crayon-h">	</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-20"><span class="crayon-h">	</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">bool</span><span class="crayon-h"> </span><span class="crayon-e">Get</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Figure out which bit we're getting</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">unsigned</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">nMask</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// bitwise-and to get the value of the bit we're interested in</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Then implicit cast to boolean</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_tType</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-v">nMask</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbac333719990-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d74e38dbac333719990-29"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0039 seconds] -->
<p></p>
<p>First, note that we start off with <code>template&lt;&gt;</code>.  The template keyword tells the compiler that what follows is templated, and the empty angle braces means that there aren&#8217;t any template parameters.  In this case, there aren&#8217;t any template parameters because we&#8217;re replacing the only template parameter (typename T) with a specific type (bool).</p>
<p>Next, we add <code>&lt;bool&gt;</code> to the class name to denote that we&#8217;re specializing a bool version of Storage8.</p>
<p>All of the other changes are just class implementation details.  You do not need to understand how the bit-logic works in order to use the class (though here&#8217;s a link to the lesson on <a href="http://www.learncpp.com/cpp-tutorial/38-bitwise-operators/">bitwise operators</a> if you want to figure it out, but need a refresher on how bitwise operators work).</p>
<p>Note that this specialization class utilizes a single unsigned char (1 byte) instead of an array of 8 bools (8 bytes).</p>
<p>Now, when we declare a class of type Storage8&lt;T&gt;, where T is not a bool, we&#8217;ll get a version stenciled from the generic templated Storage8&lt;T&gt; class.  When we declare a class of type Storage8&lt;bool&gt;, we&#8217;ll get the specialized version we just created.  Note that we have kept the publicly exposed interface of both classes the same -- while C++ gives us free reign to add, remove, or change functions of Storage8&lt;bool&gt; as we see fit, keeping a consistent interface means the programmer can use either class in exactly the same manner.</p>
<p>We can use the exact same example as before to show both Storage8&lt;T&gt; and Storage8&lt;bool&gt; being instantiated:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e38dbb5493966475" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-2">2</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-4">4</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-6">6</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-8">8</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-10">10</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-12">12</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-14">14</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-16">16</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-18">18</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e38dbb5493966475-20">20</div><div class="crayon-num" data-line="crayon-555d74e38dbb5493966475-21">21</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e38dbb5493966475-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Define a Storage8 for integers (instantiates Storage8&lt;T&gt;, where T = int)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">[</span><span class="crayon-v">nCount</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-8">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">[</span><span class="crayon-v">nCount</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Define a Storage8 for bool&nbsp;&nbsp;(instantiates Storage8&lt;bool&gt; specialization)</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">bool</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cBoolStorage</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cBoolStorage</span><span class="crayon-sy">.</span><span class="crayon-e">Set</span><span class="crayon-sy">(</span><span class="crayon-v">nCount</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-16">&nbsp;</div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">cBoolStorage</span><span class="crayon-sy">.</span><span class="crayon-e">Get</span><span class="crayon-sy">(</span><span class="crayon-v">nCount</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">?</span><span class="crayon-h"> </span><span class="crayon-s">"true"</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-s">"false"</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e38dbb5493966475-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e38dbb5493966475-21"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0047 seconds] -->
<p></p>
<p>As you might expect, this prints the same result as the previous example that used the non-specialized version of Storage8&lt;bool&gt;:</p>
<pre>
0
1
2
3
4
5
6
7
0
1
2
3
4
5
6
7
false
true
true
true
false
true
true
true
</pre>
<p>It&#8217;s worth noting again that keeping the public interface between your template class and all of the specializations identical is generally a good idea, as it makes them easier to use -- however, it&#8217;s not strictly necessary.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/146-partial-template-specialization/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 14.6 -- Partial template specialization</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter14" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/144-expression-parameters-and-template-specialization/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 14.4 -- Expression parameters and template specialization</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-210" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-210" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-210" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-210" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a> &nbsp; <img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/tag-gray.gif" alt="" /> <a href="http://www.learncpp.com/tag/c/" rel="tag">c++</a>, <a href="http://www.learncpp.com/tag/classes/" rel="tag">classes</a>, <a href="http://www.learncpp.com/tag/programming/" rel="tag">programming</a>, <a href="http://www.learncpp.com/tag/specialization/" rel="tag">specialization</a>, <a href="http://www.learncpp.com/tag/templates/" rel="tag">templates</a>, <a href="http://www.learncpp.com/tag/tutorial/" rel="tag">tutorial</a> &nbsp;   | <a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">16 comments to 14.5 &#8212; Class template specialization</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-27096">
		<div id="div-comment-27096" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/da5cc3776f3468a707beaff82831e5db?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/da5cc3776f3468a707beaff82831e5db?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Hasti</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-27096">
		September 12, 2008 at 12:07 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=27096#respond' onclick='return addComment.moveForm( "comment-27096", "27096", "respond", "210" )' aria-label='Reply to Hasti'> &middot; Reply</a></span>		 
		</div>
		<p>Hi,<br />
I don&#8217;t understand the meaning of line 15 of the first example in this page(in the main() function), I mean:<br />
       cBoolStorage.Set(nCount, nCount &amp; 3);<br />
I have problem with the second argument of the Set function? Would you please explain it more?(I know it should be a bool, but how could it be?)<br />
Herewith, I would like to thank the writer of this tutorial! I always enjoy reading these pages!</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor odd alt depth-2 clearfix" id="comment-28043">
		<div id="div-comment-28043" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-28043">
		September 21, 2008 at 9:31 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=28043#respond' onclick='return addComment.moveForm( "comment-28043", "28043", "respond", "210" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>I just realized I made a mistake in my code and flipped the true/false results.  That&#8217;s been fixed, so take another look now.  nCount &#038; 3 produces an integer value.  C++ will implicitly cast the result of this expression to an boolean.  If the result is 0, the boolean will be false.  If the result is non-zero, the boolean will be true.  So when is nCount &#038; 3 == 0?  When nCount is a number that has it&#8217;s first and second bits set to 0 (in other words, 0, 4, 8, 12, &#8230;).  Consequently, when nCount is one of these numbers, nCount &#038; 3 will be zero, and the boolean will be set to false.  When nCount is not one of these numbers, nCount &#038; 3 will be non-zero, which means the boolean will be set to true.</p>
		</div>
<ul class="children">
		<li class="comment even depth-3 clearfix" id="comment-251766">
		<div id="div-comment-251766" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/fc4179e4b554e6ce7e614965165c5aa1?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/fc4179e4b554e6ce7e614965165c5aa1?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Matheus</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-251766">
		March 10, 2015 at 7:59 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=251766#respond' onclick='return addComment.moveForm( "comment-251766", "251766", "respond", "210" )' aria-label='Reply to Matheus'> &middot; Reply</a></span>		 
		</div>
		<p>Thank you for explaining this fact, Alex! This whole tutorial is awesome!</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-51812">
		<div id="div-comment-51812" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/cc15d4e431667557a89d10fcce0ad086?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/cc15d4e431667557a89d10fcce0ad086?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Nedu</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-51812">
		March 19, 2009 at 11:39 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=51812#respond' onclick='return addComment.moveForm( "comment-51812", "51812", "respond", "210" )' aria-label='Reply to Nedu'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3914ae569618458" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-2">2</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-4">4</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-6">6</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-8">8</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-10">10</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-12">12</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-14">14</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-16">16</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-18">18</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-20">20</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-22">22</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-24">24</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-26">26</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-28">28</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-30">30</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-32">32</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-34">34</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-36">36</div><div class="crayon-num" data-line="crayon-555d74e3914ae569618458-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e3914ae569618458-38">38</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3914ae569618458-1"><span class="crayon-v">Hi</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-2"><span class="crayon-i">I</span><span class="crayon-h"> </span><span class="crayon-e">am </span><span class="crayon-e">really </span><span class="crayon-e">enjoying </span><span class="crayon-r">this</span><span class="crayon-h"> </span><span class="crayon-v">readings</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-3"><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-i">have</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-e">clarification </span><span class="crayon-v">here</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-4">&nbsp;</div><div class="crayon-line" id="crayon-555d74e3914ae569618458-5"><span class="crayon-cn">04</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-6"><span class="crayon-cn">05</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-7"><span class="crayon-cn">06</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;</span><span class="crayon-cn">8</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-8"><span class="crayon-cn">07</span><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">cIntStorage</span><span class="crayon-sy">[</span><span class="crayon-v">nCount</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-sy">;</span><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-10"><span class="crayon-e">look </span><span class="crayon-e">at </span><span class="crayon-i">lines</span><span class="crayon-h"> </span><span class="crayon-cn">04</span><span class="crayon-h"> </span><span class="crayon-o">&amp;</span><span class="crayon-h"> </span><span class="crayon-cn">07</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-11"><span class="crayon-h"> </span><span class="crayon-st">Is</span><span class="crayon-h"> </span><span class="crayon-r">this</span><span class="crayon-h"> </span><span class="crayon-e">legal </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-e">the </span><span class="crayon-i">compiler</span><span class="crayon-h"> </span><span class="crayon-sy">?</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-12"><span class="crayon-h"> </span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">so </span><span class="crayon-e">why </span><span class="crayon-e">the </span><span class="crayon-e">following </span><span class="crayon-e">gives </span><span class="crayon-e">compiler </span><span class="crayon-v">error</span><span class="crayon-sy">.</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-14">&nbsp;</div><div class="crayon-line" id="crayon-555d74e3914ae569618458-15"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">A</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-16"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">data</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-19"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-20">&nbsp;</div><div class="crayon-line" id="crayon-555d74e3914ae569618458-21">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-22"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-23"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-24">&nbsp;</div><div class="crayon-line" id="crayon-555d74e3914ae569618458-25"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-i">A</span><span class="crayon-h"> </span><span class="crayon-v">ob</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-v">i</span><span class="crayon-o">&lt;</span><span class="crayon-cn">10</span><span class="crayon-sy">;</span><span class="crayon-v">i</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">ob</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-o">=</span><span class="crayon-v">i</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-28">&nbsp;</div><div class="crayon-line" id="crayon-555d74e3914ae569618458-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-v">i</span><span class="crayon-o">&lt;</span><span class="crayon-cn">10</span><span class="crayon-sy">;</span><span class="crayon-v">i</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">ob</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-31">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-32"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-33">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-34"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d74e3914ae569618458-35">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-36">&nbsp;</div><div class="crayon-line" id="crayon-555d74e3914ae569618458-37">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d74e3914ae569618458-38"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0050 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-59729">
		<div id="div-comment-59729" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-59729">
		May 1, 2009 at 7:53 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=59729#respond' onclick='return addComment.moveForm( "comment-59729", "59729", "respond", "210" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>cIntStorage[nCount] will work if operator[] has been overridden for the Storage8 class.</p>
<p>Similarly, ob[i] will work if operator[] has been overridden for class A.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-95200">
		<div id="div-comment-95200" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3aa589a107b7a4f651e626603c29238b?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3aa589a107b7a4f651e626603c29238b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">A. Syukri Abdollah</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-95200">
		February 22, 2011 at 10:48 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=95200#respond' onclick='return addComment.moveForm( "comment-95200", "95200", "respond", "210" )' aria-label='Reply to A. Syukri Abdollah'> &middot; Reply</a></span>		 
		</div>
		<p>Which you didn&#8217;t.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-52708">
		<div id="div-comment-52708" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/ebf93600c6610154d5a833647c13d042?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/ebf93600c6610154d5a833647c13d042?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://memory-the-hedgehog.deviantart.com' rel='external nofollow' class='url'>Memory the Hedgehog</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-52708">
		March 23, 2009 at 1:40 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=52708#respond' onclick='return addComment.moveForm( "comment-52708", "52708", "respond", "210" )' aria-label='Reply to Memory the Hedgehog'> &middot; Reply</a></span>		 
		</div>
		<p>About 5 paragraphs above the go to next/previous page buttons, you forgot a semicolon on the html entity &amp; gt ;, writing &amp;gt, in the following:</p>
<p>..while C++ gives us free reign to add, remove, or change functions of Storage8<b>&lt;bool&amp;gt</b> as we see fit, keeping a consistent..</p>
<p>[ Fixed.  Thanks for noticing.  -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-69477">
		<div id="div-comment-69477" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/370503e5d38166b5fa2dc4a001350640?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/370503e5d38166b5fa2dc4a001350640?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom Backton</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-69477">
		October 1, 2009 at 10:35 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=69477#respond' onclick='return addComment.moveForm( "comment-69477", "69477", "respond", "210" )' aria-label='Reply to Tom Backton'> &middot; Reply</a></span>		 
		</div>
		<p>Few questions&#8230;<br />
1. Can I specialize a class template&#8217;s member function? For example, let&#8217;s say I have a class template like this: </p>
<p>template MyClass;</p>
<p>For B=int, some member functions need to have special implementations. Can I define<br />
template void MyClass<a>::func() {&#8230;}</p>
<p>and them just define a special implementation like this:</p>
<p>template void MyClass</a><a>::func() {&#8230;}</p>
<p>It it possible?</p>
<p>2. MyClass&#8217;s functions have few different implementations. And the interface is different too. One method is defining each version as a different class, but what if I&#8217;d like to use a template instead? in template, impl is the implementation&#8217;s number. Can I define a general class definition:</p>
<p>template class MyClass { &#8230; };</p>
<p>And then define a specialization for impl=1 like this:</p>
<p>template class MyClass</a><a> { &#8230; };</p>
<p>Is it possible?</p>
<p>3. If yes, let&#8217;s say MyClass is a template like this:<br />
template class MyClass { &#8230; };</p>
<p>For A=int, I&#8217;d like to specialize this class template:<br />
template class MyClass { &#8230; };</p>
<p>For A=int and C=double, I&#8217;d like to have another specialization:  (but for A=int and C!=double I&#8217;d like the compiler to use the first specialization)<br />
template class MyClass { &#8230; };</p>
<p>And I&#8217;d also like to have a full specialization for :<br />
template class MyClass { &#8230; };</p>
<p>Do compilers ready to handle such sets of specializations?</a></p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-69478">
		<div id="div-comment-69478" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/370503e5d38166b5fa2dc4a001350640?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/370503e5d38166b5fa2dc4a001350640?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom Backton</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-69478">
		October 1, 2009 at 10:44 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=69478#respond' onclick='return addComment.moveForm( "comment-69478", "69478", "respond", "210" )' aria-label='Reply to Tom Backton'> &middot; Reply</a></span>		 
		</div>
		<p>**************Please ignore the previous comment&#8230;I forgot the tags&#8230;*******<br />
******************************************************************************</p>
<p>Few questions&#8230;<br />
1. Can I specialize a class template&#8217;s member function? For example, let&#8217;s say I have a class template like this: </p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e391092019150052" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e391092019150052-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e391092019150052-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">C</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>For B=int, some member functions need to have special implementations. Can I define</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e39109c381101503" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e39109c381101503-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e39109c381101503-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">C</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-o">&lt;</span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-v">C</span><span class="crayon-o">&gt;</span><span class="crayon-o">::</span><span class="crayon-e">func</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>and then just define a special implementation like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910a2183668388" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910a2183668388-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910a2183668388-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">C</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-o">&lt;</span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-v">C</span><span class="crayon-o">&gt;</span><span class="crayon-o">::</span><span class="crayon-e">func</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>It it possible?</p>
<p>2. MyClass&#8217;s functions have few different implementations. And the interface is different too. One method is defining each version as a different class, but what if I&#8217;d like to use a template instead? in template, impl is the implementation&#8217;s number. Can I define a general class definition:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910a9294502750" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910a9294502750-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910a9294502750-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">impl</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">MyClass</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>And then define a specialization for impl=1 like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910af449174006" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910af449174006-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910af449174006-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-o">&lt;</span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-cn">1</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>Is it possible?</p>
<p>3. If yes, let&#8217;s say MyClass is a template like this:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910b5282705609" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910b5282705609-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910b5282705609-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">A</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">C</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">MyClass</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>For A=int, I&#8217;d like to specialize this class template:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910bb069349325" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910bb069349325-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910bb069349325-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">C</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-e">C</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>For A=int and C=double, I&#8217;d like to have another specialization:  (but for A=int and C!=double I&#8217;d like the compiler to use the first specialization)</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910c2530648109" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910c2530648109-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910c2530648109-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;</span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">B</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-v">B</span><span class="crayon-sy">,</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>And I&#8217;d also like to have a full specialization like this:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e3910c8578893542" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e3910c8578893542-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e3910c8578893542-1"><span class="crayon-t">template</span><span class="crayon-o">&lt;&gt;</span><span class="crayon-h"> </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">MyClass</span><span class="crayon-o">&lt;</span><span class="crayon-t">int</span><span class="crayon-sy">,</span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-sy">,</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Do compilers ready to handle such sets of specializations?</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-83561">
		<div id="div-comment-83561" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e1793bf63d56204774c7b35999f0d299?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e1793bf63d56204774c7b35999f0d299?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abhishek</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-83561">
		April 24, 2010 at 11:49 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=83561#respond' onclick='return addComment.moveForm( "comment-83561", "83561", "respond", "210" )' aria-label='Reply to Abhishek'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>Why is it so that for creating function template specialization we don&#8217;t need to have template&lt;&gt; keyword<br />
Like you have explained in previous tutorial :</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e390f4e611628459" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e390f4e611628459-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e390f4e611628459-2">2</div><div class="crayon-num" data-line="crayon-555d74e390f4e611628459-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e390f4e611628459-4">4</div><div class="crayon-num" data-line="crayon-555d74e390f4e611628459-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e390f4e611628459-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-v">Storage</span><span class="crayon-o">&lt;</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-o">::</span><span class="crayon-e">Print</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e390f4e611628459-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d74e390f4e611628459-3"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">scientific</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">m_tValue</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e390f4e611628459-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d74e390f4e611628459-5"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
<p>But for class template specialization we need the template &lt;&gt; keyword</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d74e390f59145052568" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d74e390f59145052568-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e390f59145052568-2">2</div><div class="crayon-num" data-line="crayon-555d74e390f59145052568-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d74e390f59145052568-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d74e390f59145052568-1"><span class="crayon-t">template</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e390f59145052568-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Storage8</span><span class="crayon-o">&lt;</span><span class="crayon-t">bool</span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span></div><div class="crayon-line" id="crayon-555d74e390f59145052568-3"><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d74e390f59145052568-4"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-97784">
		<div id="div-comment-97784" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/870433f9b7aebb0994e4130f148be442?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/870433f9b7aebb0994e4130f148be442?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Flurite</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-97784">
		September 4, 2012 at 12:42 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=97784#respond' onclick='return addComment.moveForm( "comment-97784", "97784", "respond", "210" )' aria-label='Reply to Flurite'> &middot; Reply</a></span>		 
		</div>
		<p>I think you do, it&#8217;s just that he didn&#8217;t mention it.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-97783">
		<div id="div-comment-97783" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/870433f9b7aebb0994e4130f148be442?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/870433f9b7aebb0994e4130f148be442?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Flurite</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-97783">
		September 4, 2012 at 12:41 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=97783#respond' onclick='return addComment.moveForm( "comment-97783", "97783", "respond", "210" )' aria-label='Reply to Flurite'> &middot; Reply</a></span>		 
		</div>
		<p>In the last example, you used the indexing operator for cIntStorage, which you never declared/defined in the declaration of the class.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-105359">
		<div id="div-comment-105359" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/ceb327de68a75b0a397dbb64e90ad05b?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/ceb327de68a75b0a397dbb64e90ad05b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">homenirbhai61</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-105359">
		September 22, 2013 at 9:44 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=105359#respond' onclick='return addComment.moveForm( "comment-105359", "105359", "respond", "210" )' aria-label='Reply to homenirbhai61'> &middot; Reply</a></span>		 
		</div>
		<p>Hi! I like this Tutorial, It is very good. I did not understand line 13 in section Class template specialization<br />
unsigned char nMask = 1 &lt;&lt; nIndex; why does it need, &lt;&lt;nIndex?<br />
I am looking compiler for c++ to run these program, from where I can get it? Please reply, Thank you.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-105360">
		<div id="div-comment-105360" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/ceb327de68a75b0a397dbb64e90ad05b?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/ceb327de68a75b0a397dbb64e90ad05b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Nirbhai</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-105360">
		September 22, 2013 at 12:17 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=105360#respond' onclick='return addComment.moveForm( "comment-105360", "105360", "respond", "210" )' aria-label='Reply to Nirbhai'> &middot; Reply</a></span>		 
		</div>
		<p>Hi! I like this Tutorial, It is very good. I did not understand line 13 in section Class template specialization<br />
unsigned char nMask = 1 &lt;&lt; nIndex; why does it need, &lt;&lt;nIndex?<br />
I am looking for a compiler for c++ to compile a program. from where I can get it? Please reply, Thank you.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-151284">
		<div id="div-comment-151284" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/530f6cea24f3a6b810506b10a521bda4?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/530f6cea24f3a6b810506b10a521bda4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vinay Ch</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-151284">
		June 9, 2014 at 10:41 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=151284#respond' onclick='return addComment.moveForm( "comment-151284", "151284", "respond", "210" )' aria-label='Reply to Vinay Ch'> &middot; Reply</a></span>		 
		</div>
		<p>Hi,<br />
I have a doubt.<br />
Can we specialize a template class for a templated class?</p>
<p>template<br />
class Storage8&lt;MyClass&gt;<br />
{<br />
--<br />
--<br />
};</p>
<p>Here MyClass is a templated class. Is the above valied? Where do we have to mention<br />
template for MyClass?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-209172">
		<div id="div-comment-209172" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/aa7c44a56ee357e5f72aca6ac5a8d688?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/aa7c44a56ee357e5f72aca6ac5a8d688?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">DOBRESCU Mihai</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/145-class-template-specialization/#comment-209172">
		November 4, 2014 at 2:43 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/145-class-template-specialization/?replytocom=209172#respond' onclick='return addComment.moveForm( "comment-209172", "209172", "respond", "210" )' aria-label='Reply to DOBRESCU Mihai'> &middot; Reply</a></span>		 
		</div>
		<p>Hi,</p>
<p>       The second example doesn&#8217;t compile because the &#8220;[]&#8221; operator has not been redefined in the specialized class. The setter and the getter have to be used. This is the full code:</p>
<p><code><br />
#include &lt;iostream&gt;</p>
<p>using namespace std;</p>
<p>template &lt;typename T&gt;<br />
class Storage8<br />
{<br />
private:<br />
    T m_tType[8];</p>
<p>public:<br />
    void Set(int nIndex, const T &amp;tType)<br />
    {<br />
        m_tType[nIndex] = tType;<br />
    }</p>
<p>    const T&amp; Get(int nIndex)<br />
    {<br />
        return m_tType[nIndex];<br />
    }<br />
};</p>
<p>template &lt;&gt; // the following is a template class with no templated parameters<br />
class Storage8&lt;bool&gt; // we&#039;re specializing Storage8 for bool<br />
{<br />
// What follows is just standard class implementation details<br />
private:<br />
    unsigned char m_tType;</p>
<p>public:<br />
    void Set(int nIndex, bool tType)<br />
    {<br />
        // Figure out which bit we&#039;re setting/unsetting<br />
        // This will put a 1 in the bit we&#039;re interested in turning on/off<br />
        unsigned char nMask = 1 &lt;&lt; nIndex;</p>
<p>        if (tType)  // If we&#039;re setting a bit<br />
            m_tType |= nMask;  // Use bitwise-or to turn that bit on<br />
        else  // if we&#039;re turning a bit off<br />
            m_tType &amp;= ~nMask;  // bitwise-and the inverse mask to turn that bit off<br />
    }</p>
<p>    bool Get(int nIndex)<br />
    {<br />
        // Figure out which bit we&#039;re getting<br />
        unsigned char nMask = 1 &lt;&lt; nIndex;<br />
        // bitwise-and to get the value of the bit we&#039;re interested in<br />
        // Then implicit cast to boolean<br />
        return m_tType &amp; nMask;<br />
    }<br />
};</p>
<p>int main()<br />
{<br />
    // Define a Storage8 for integers (instantiates Storage8&lt;T&gt;, where T = int)<br />
    Storage8&lt;int&gt; cIntStorage;</p>
<p>    for (int nCount=0; nCount&lt;8; nCount++)<br />
        cIntStorage.Set(nCount, nCount);</p>
<p>    for (int nCount=0; nCount&lt;8; nCount++)<br />
        std::cout &lt;&lt; cIntStorage.Get(nCount) &lt;&lt; std::endl;</p>
<p>    // Define a Storage8 for bool  (instantiates Storage8&lt;bool&gt; specialization)<br />
    Storage8&lt;bool&gt; cBoolStorage;<br />
    for (int nCount=0; nCount&lt;8; nCount++)<br />
        cBoolStorage.Set(nCount, nCount &amp; 3);</p>
<p>    for (int nCount=0; nCount&lt;8; nCount++)<br />
        std::cout &lt;&lt; (cBoolStorage.Get(nCount) ? &quot;true&quot; : &quot;false&quot;) &lt;&lt; std::endl;</p>
<p>    return 0;<br />
}<br />
</code></p>
<p>       Also, the output contains only one column of digits - I do not know why they were repeated in the version printed in the lesson. This is the correct output:</p>
<p><code><br />
0<br />
1<br />
2<br />
3<br />
4<br />
5<br />
6<br />
7<br />
false<br />
true<br />
true<br />
true<br />
false<br />
true<br />
true<br />
true<br />
</code></p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/145-class-template-specialization/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>eighteen &#8722; one = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4ODEzMXR5bTdtZjVxZ3o3ZGJwYWozMW04MTc=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432188131" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='210' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="ae96de2a9b" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="163"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/145-class-template-specialization\/":210};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/145-class-template-specialization/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'210',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '210' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.814 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:02:11 -->

<!-- Compression = gzip -->
<!-- super cache -->

