<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
      <title>Java and XML - Tutorial</title>
      <script type='text/javascript'>window.mod_pagespeed_start = Number(new Date());</script><link rel="stylesheet" type="text/css" href="http://www.vogella.com/css/A.articles.css.pagespeed.cf.R8TsdYc8Ks.css">
      <meta name="generator" content="DocBook XSL Stylesheets V1.77.1">
      <meta name="description" content="Java and XML This article gives an introduction into XML and its usage with Java. The Java Streaming API for XML (Stax) and the Java XPath library are explained and demonstrated.">
      <link rel="shortcut icon" href="http://www.vogella.com/favicon.ico">
      <meta name="viewport" content="width=device-width, initial-scale=1">
   </head>
   <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
      
      
      <!-- Google analytics (Jennifer) -->
      
      <script type="text/javascript">var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-3967758-1']);_gaq.push(['_setDomainName','vogella.com']);_gaq.push(['_setAllowLinker',true]);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();</script>
      
      
      
      <!-- Load jQuery -->
      <script type="text/javascript" src="http://www.vogella.com/javascript/jquery/jquery.js.pagespeed.jm.LynoS8h5RR.js"></script>
      
      <!-- jQuery Hide Buttons -->
      <script type="text/javascript">//<![CDATA[
var fixed=false;$(document).scroll(function(){if($(this).scrollTop()>955){if(!fixed){fixed=true;$('.bottom_left').css({display:'block'});$('.bottom_right').css({display:'block'});}}else{if(fixed){fixed=false;$('.bottom_left').css({display:'none'});$('.bottom_right').css({display:'none'});}}});
//]]></script>
      
      
      <!-- Lake Quincy Ads - old way now replaced with Lake Quincy Ads Responsive
<script type='text/javascript'>
	function _dmBootstrap(file) {
		var _dma = document.createElement('script');
		_dma.type = 'text/javascript';
		_dma.async = true;
		_dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
	}
	function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
	(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000);})();
</script>-->
      
      
      <!-- Lake Quincy Ads Responsive -->  
      <script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script>
      
      <script type="text/javascript">googletag.cmd.push(function(){var mapping=googletag.sizeMapping().addSize([320,700],[300,250]).addSize([750,200],[300,250]).addSize([1170,200],[728,90]).build();googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/right',[160,600],'ad-left').addService(googletag.pubads()).setTargeting('left');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/beforeTOC',[[300,250],[728,90]],'ad-beforeTOC').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('beforeTOC');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween01',[[300,250],[728,90]],'ad-inBetween01').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween01');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween02',[[300,250],[728,90]],'ad-inBetween02').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween02');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween03',[[300,250],[728,90]],'ad-inBetween03').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween03');googletag.pubads().enableSingleRequest();googletag.enableServices();});</script>
      
      <div id="headerpart">
         
         	
         <div id="logo">
            		<a title="vogella.com" href="http://www.vogella.com">
               			<img src="http://www.vogella.com/img/logo/xindex_logo.png.pagespeed.ic.W70tcDQqll.png" alt="vogella.com"> 
               		</a>
            	
         </div> 
         <!-- logo -->
         	
         	
         <div id="topnav">
            		
            <ul id="home" class="topnav">
               			
               <li id="home-icon"><a href="http://www.vogella.com/"></a></li>
               			
               <li class="currentpage"> <a href="http://www.vogella.com/tutorials/">Tutorials</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/tutorials/android.html">Android Programming</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/eclipseide.html">Eclipse IDE</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/eclipse.html">Eclipse RCP/Plug-ins</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/versioncontrol.html">Version Control</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/web.html">Web</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/java.html">Java</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/technology.html">Technology</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/google.html">Google</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/algorithms.html">Algorithms</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/designpattern.html">Design Pattern</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               			
               <li><a href="http://www.vogella.com/training/">Services</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/training/android/index.html">Android Development Training</a>
                        						
                        <ul>
                           							
                           <li><a href="http://www.vogella.com/training/android/androidprofessional.html">Android Professional</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/android/androidtesting.html">Android Testing and Appl. Optimization</a></li>
                           						
                        </ul>
                        					
                     </li>
                     					
                     <li><a href="http://www.vogella.com/training/eclipse/index.html">Eclipse Development Training</a>
                        						
                        <ul>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsercp.html">Eclipse RCP</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseide.html">Eclipse IDE Expert</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsercpmigration.html">Eclipse RCP Migration</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsecontribution.html">	Contributing to Eclipse</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseplugin.html">Eclipse IDE Plug-in Development</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/tycho.html">Maven/Tycho</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/rcpjavaeespring.html">Eclipse RCP with Java EE and Spring</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseoxygen.html">oXygen in Eclipse</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsenattable.html">NatTable</a></li>
                           						
                        </ul>
                        					
                     </li>
                     					
                     <li><a href="http://www.vogella.com/training/git.html">Git Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/groovy.html">Groovy Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/gradle.html">Gradle Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/java.html">Java Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/spring.html">Spring Workshop</a></li>
                     					
                     <li><a href="http://www.vogella.com/consulting/">Expert Consulting</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/products/">Products</a>
                  				
                  <ul>
                     					
                     <li><a href="http://saneclipse.vogella.com">saneclipse</a></li>
                     					
                     <li><a href="http://codemodify.vogella.com">CodeModify</a></li>
                     					
                     <li><a href="http://preferencespy.vogella.com">PreferenceSpy</a></li>
                     					
                     <!--<li><a href="http://e4tools.vogella.com">e4 tools</a></li>
					<li><a href="http://e4perspectiveswitcher.vogella.com">e4 perspectiveSwitcher</a></li>-->
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/books/">Books</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/books/eclipsecontribution.html">Contributing to the Eclipse Project</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/eclipsercp.html">Eclipse RCP</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/eclipseide.html">Eclipse IDE</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/git.html">Git</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/android.html">Android SQlite and ContentProvider</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/company/">Company</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/aboutvogella.html">About us</a></li>
                     					
                     <li><a href="http://www.vogella.com/people/index.html">People at vogella</a></li>
                     					
                     <li><a href="http://www.vogella.com/customers.html" onclick="_gaq.push(['_trackEvent', 'Customers', 'clicked', 'Header']);">Reference Customers</a></li>
                     					
                     <li><a href="http://blog.vogella.com/">Blog</a></li>
                     					
                     <li><a href="http://www.vogella.com/jobs/">Jobs</a></li>
                     					
                     <li><a href="http://www.vogella.com/faq.html">FAQ</a></li>
                     					
                     <li><a href="http://www.vogella.com/legal.html">Legal</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/support.html">Donate</a></li>
               			
               <li><a href="http://www.vogella.com/contact.html">Contact us</a></li>
               		
            </ul>
            	
         </div>
         <!-- topnav -->
         	
         
         	
         <div id="searchfixed">
            		
            <form action="http://www.vogella.com/search.html" id="cse-search-box">
               			
               <div id="searchwrapper">
                  
                  				<input type="hidden" name="cx" value="partner-pub-3851443674951530:3991491935">
                  				<input type="hidden" name="cof" value="FORID:10">
                  				<input type="hidden" name="ie" value="UTF-8">
                  				<input type="text" placeholder="Search" id="search_field" name="q" size="55">
                  				<input type="image" src="http://www.vogella.com/img/icons/xsrch.png.pagespeed.ic.BP8TtuQRzJ.png" id="search_button" name="sa" alt="Search">
                  			
               </div>
               		
            </form>
            	
         </div> 
         <!-- searchfixed -->
         
         
      </div> 
      <!-- headerpart -->
      
      
      <div id="leftcol">
         
         	<br>
         	<br>
         	
         	<a href="http://www.vogella.com/support.html">
            		<img src="http://www.vogella.com/img/common/140x150xvogella-donate.png.pagespeed.ic.gMuY8kQC6X.png" width="140" height="150" alt="Support free tutorials" title="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Top tutorial']);"></a>
         
         	<br>
         	<br>
         
         	<script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         	
         <!-- LeftColumn -->
         	<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="6294971031"></ins>
         	<script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         
         	<p></p>
         	
         	<br>
         	<br>
         
         	
         <!-- Nonresponsive Lake Quincy 160x600 Wide Skycraper code
	<div data-type="ad" data-publisher="lqm.javaeclipseandroid.site" data-zone="right" data-format="160x600"></div>-->
         	
         	
         <!-- Responsive Lake Quincy Ads -->
         	
         <div id="ad-left">
            		<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-left');});</script>
            	</div>
         
      </div> 
      <!-- leftcolumn -->
      
      
      <div id="rightcol">
         
         	
         <!-- vogellas own advertising for training and books --> 	
         	
         <p class="training-bg">
            		<a class="image-z" href="http://www.vogella.com/training/" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'whole Box']);">
               			<img src="http://www.vogella.com/img/training/200x364xvogellatraining_ad.png.pagespeed.ic.KQGlbyMRAP.png" height="364" width="200" alt="vogella training">
               		</a>
            		<a class="btn-training button1" href="http://www.vogella.com/training/" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'training']);">Training</a>
            		<a class="btn-training button2" href="http://www.vogella.com/books/index.html" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'books']);">Books</a>
            	
         </p> 
         	
         	
         <div class="bottom_right">
            		
            <div class="social_media">
               			<a href="http://www.twitter.com/vogellacompany">
                  				
                  <h1>FOLLOW<br>ME ON
                  </h1> 
                  				<img src="http://www.vogella.com/img/tutoriallinks/xtwitter.png.pagespeed.ic.5z4YhYIkb2.png" alt="Follow me on twitter">
                  			</a>
               		
            </div>
            <!-- social_media -->
            
            		
            <div class="social_media">
               			<a rel="me" href="https://profiles.google.com/104044918586174763681">
                  				
                  <h1>FOLLOW<br>ME ON
                  </h1> 
                  				<img src="http://www.vogella.com/img/tutoriallinks/xgoogle_plus.png.pagespeed.ic.d6W0KZShGF.png" alt="Follow me on Google+">
                  			</a>
               		
            </div>
            <!-- social_media -->
            	
         </div> 
         <!-- bottom_right -->
         	
         	
         <div class="bottom_left">
            	
            <div class="services">
               		<a href="http://www.vogella.com/training/index.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/xtraining.png.pagespeed.ic.xjFDFI8z_E.png" alt="Get training" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'Fix buttom left training']);">
                  	
                  <h1>GET TRAINING</h1>
                  	</a>
               
            </div>
            <!-- services -->
            	
            <div class="services">
               	<a href="http://www.vogella.com/books/index.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/books.png.pagespeed.ce.iDpNUUudib.png" alt="Purchase books" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'Fix buttom left books']);">
                  	
                  <h1>PURCHASE BOOKS</h1>
                  	</a>
               
            </div>
            <!-- services -->
            	
            <div class="services">	
               	<a href="http://www.vogella.com/support.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/xdonate.png.pagespeed.ic.DDVinfleA6.png" alt="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Fix buttom left']);">
                  	
                  <h1>SUPPORT FREE TUTORIAL</h1>
                  	</a>
               
               
            </div> 
            <!-- services -->       
            
         </div> 
         <!-- bottom_left -->
         
         
      </div> 
      <!--rightcol-->
      
      
      <div class="article">
         <div class="titlepage">
            <div>
               <div>
                  <h2 class="title"><a name="d453219e1"></a>Java and XML - Tutorial
                  </h2>
               </div>
               <div>
                  <div class="author">
                     <h3 class="author"><span class="firstname">Lars</span> <span class="surname">Vogel</span></h3>
                  </div>
               </div>
               <div>
                  <p class="releaseinfo">
                     
                  </p>
                  <p>Version 2.1</p>
                  <p class="releaseinfo">
                     
                  </p>
               </div>
               <div>
                  <p class="copyright">Copyright ? 2008, 2009, 2010, 2011, 2012, 2013, 2014 vogella GmbH</p>
               </div>
               <div>
                  <p class="pubdate">04.12.2014</p>
               </div>
               <div>
                  <div class="abstract"><a name="abstract"></a><p class="title"><b>Java and XML</b></p>
                     <p>
                        This article gives an introduction into XML and its usage
                        with Java. The Java Streaming API for XML (Stax) and the Java XPath
                        library are explained and demonstrated.
                        
                     </p>
                  </div>
               </div>
            </div>
            <div>
               <div xmlns:fo="http://www.w3.org/1999/XSL/Format" id="ad-beforeTOC"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-beforeTOC');});</script></div>
            </div>
            <hr>
         </div>
         <div class="toc">
            <p><b>Table of Contents</b></p>
            <dl>
               <dt><span class="section"><a href="#xml_overview">1. XML Introduction</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#xml_overview_s2a">1.1. XML Overview</a></span></dt>
                     <dt><span class="section"><a href="#xml_comparisionwithotherformats">1.2. Comparison of XML to other formats</a></span></dt>
                     <dt><span class="section"><a href="#xml_overview_s2b">1.3. XML Example</a></span></dt>
                     <dt><span class="section"><a href="#xml_overview_s2c">1.4. XML Elements</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#javaxml">2. Java XML overview</a></span></dt>
               <dt><span class="section"><a href="#javastax">3. Streaming API for XML (StaX)</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#javastax_overview">3.1. Overview</a></span></dt>
                     <dt><span class="section"><a href="#javastax_api">3.2. Event Iterator API</a></span></dt>
                     <dt><span class="section"><a href="#javastax_read">3.3. XMLEventReader - Read XML Example</a></span></dt>
                     <dt><span class="section"><a href="#javastax_write">3.4. Write XML File Example</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#javaxpath">4. XPath</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#javaxpath_a">4.1. Overview</a></span></dt>
                     <dt><span class="section"><a href="#javaxpath_b">4.2. Using XPath</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#supportandlicense">5. About this website</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#thankyou">5.1. Donate to support free tutorials</a></span></dt>
                     <dt><span class="section"><a href="#questions">5.2. Questions and discussion</a></span></dt>
                     <dt><span class="section"><a href="#thankyou">5.3. License for this tutorial and its code</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#resources">6. Links and Literature</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#sourcecode">6.1. Source Code</a></span></dt>
                     <dt><span class="section"><a href="#resources_xml">6.2. Links and Literature</a></span></dt>
                     <dt><span class="section"><a href="#resources_general">6.3. vogella Resources</a></span></dt>
                  </dl>
               </dd>
            </dl>
         </div>
         <script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         
         <!-- Responsive - After Table of Content -->
         <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-3851443674951530" data-ad-slot="4470606330" data-ad-format="auto"></ins>
         <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="xml_overview"></a>1.&nbsp;XML Introduction
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="xml_overview_s2a"></a>1.1.&nbsp;XML Overview
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  XML is the abbreviation for
                  <em class="wordasword">Extensible Markup Language</em>
                  and is an established data exchange format. XML
                  was defined
                  1998 by
                  the
                  World Wide Web Consortium (W3C).
                  
               </p>
               <p>
                  An XML document consists of elements, each element has a
                  start
                  tag, content and an end tag. An XML document must have
                  exactly
                  one root
                  element (i.e., one tag which encloses the
                  remaining tags). XML
                  differentiates between capital and non-capital letters.
                  
                  
               </p>
               <p>An XML file must be "well-formed".</p>
               <p>
                  A
                  <em class="wordasword">well-formed</em>
                  XML file must apply to the following conditions:
                  
               </p>
               <div class="itemizedlist">
                  <ul class="itemizedlist" type="disc">
                     <li class="listitem">
                        <p>An XML document always starts with a prolog (see
                           below for an
                           explanation of what a prolog is)
                           
                        </p>
                     </li>
                     <li class="listitem">
                        <p>Every opening tag has a closing tag.</p>
                     </li>
                     <li class="listitem">
                        <p>All tags are completely nested.</p>
                     </li>
                  </ul>
               </div>
               <p>
                  
               </p>
               <p>
                  An XML file is called
                  <em class="wordasword">valid</em>
                  if it is well-formed and if it is
                  contains a link to an XML schema
                  and
                  is valid according to the schema.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="xml_comparisionwithotherformats"></a>1.2.&nbsp;Comparison of XML to other formats
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  XML has the following characteristics which makes processing it via
                  computer programs relatively easy compared to a binary or
                  unstructured
                  format:
                  
               </p>
               <div class="itemizedlist">
                  <ul class="itemizedlist" type="disc">
                     <li class="listitem">
                        <p>XML is plain text</p>
                     </li>
                     <li class="listitem">
                        <p>XML represents data without defining how the data should be
                           displayed
                           
                        </p>
                     </li>
                     <li class="listitem">
                        <p>XML can be transformed into other formats via XSL</p>
                     </li>
                     <li class="listitem">
                        <p>XML can be easily processed via standard parsers
                           
                        </p>
                     </li>
                     <li class="listitem">
                        <p>XML files are hierarchical</p>
                     </li>
                  </ul>
               </div>
               <p>
                  
               </p>
               <p>On the other side is XML format is relatively verbose, e.g., if
                  data is
                  represented as XML the size of this data is relatively large
                  compared to other formats. In the Internet JSON or binary formats are
                  frequently used to
                  replace XML if the data throughput is important.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="xml_overview_s2b"></a>1.3.&nbsp;XML Example
                        </h3>
                     </div>
                  </div>
               </div>
               <p>The following is a valid, well-formed XML file.</p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-directive" style="color: maroon">&lt;?xml version="1.0"?&gt;</span>
<em class="hl-comment" style="color: #080">&lt;!-- This is a comment --&gt;</em>
<span class="hl-tag" style="color: #080">&lt;address&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;name&gt;</span>Lars <span class="hl-tag" style="color: #080">&lt;/name&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;street&gt;</span> Test <span class="hl-tag" style="color: #080">&lt;/street&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;telephone</span> <span class="hl-attribute" style="color: #7F0055">number</span>= <span class="hl-value" style="color: blue">"0123"</span><span class="hl-tag" style="color: #080">/&gt;</span>
<span class="hl-tag" style="color: #080">&lt;/address&gt;</span> </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="xml_overview_s2c"></a>1.4.&nbsp;XML Elements
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  An XML document always starts with a
                  <code class="code">prolog</code>
                  which
                  describes the XML file.
                  This
                  <code class="code">prolog</code>
                  can be minimal, e.g.
                  &lt;?xml version="1.0"?&gt; 
                  or can contain other information, e.g. the encoding,
                  e.g.
                  &lt;?xml version="1.0" encoding="UTF-8" standalone="yes" ?&gt; 
                  
               </p>
               <p>
                  A tag which does not enclose any content is know as an
                  "empty tag".
                  For
                  example:
                  
                  &lt;flag/&gt; 
                  
               </p>
            </div>
            <p>
               Comments in XML are defined as:
               &lt;! COMMENT&gt; 
               
            </p>
         </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javaxml"></a>2.&nbsp;Java XML overview
                     </h2>
                  </div>
               </div>
            </div>
            <p>
               The Java programming language contains several methods for
               processing and writing XML.
               
            </p>
            <p>Older Java versions supported only the DOM API (Document Object
               Model) and the SAX (Simple API for XML) API.
               
            </p>
            <p>In DOM you
               access the XML
               document over an object tree. DOM can be
               used to read
               and write XML
               files.
               
            </p>
            <p>SAX (Simple API for XML)
               is a Java API for
               sequential reading of
               XML files. SAX can only read XML
               documents. SAX provides an
               event driven
               XML Processing following the
               Push-Parsing Model, e.g., you register
               listeners in the
               form of Handlers to the
               Parser and these are
               notified
               through call-back
               methods.
               
            </p>
            <p>Both DOM and
               Sax are older APIs
               and I recommend not using them anymore.
               
            </p>
            <p> Stax (Streaming API for XML) is an API for
               reading and writing
               XML Documents. It was introduced in Java 6.0 and
               is considered better
               than SAX
               and DOM.
               
            </p>
            <p>
               Java Architecture for XML Binding (<a class="ulink" href="http://www.vogella.com/tutorials/JAXB/article.html" target="_top">JAXB</a>) is a Java standard that
               defines how Java objects are
               converted to
               XML
               and vice versa (specified using a
               standard set of mappings).
               JAXB
               defines a
               programmer API for reading and
               writing Java objects to
               / from
               XML
               documents and a service provider
               which allows
               the selection of the
               JAXB
               implementation. JAXB applies
               a lot of defaults
               thus making reading
               and
               writing
               of XML via Java very easy.
               
            </p>
            <p>
               The following explains the Stax interface; for an
               introduction to
               JAXB,
               please see
               <a class="ulink" href="http://www.vogella.com/tutorials/JAXB/article.html" target="_top"> JAXB tutorial</a>.
               
            </p>
         </div>
         <!-- Non responsive Lake Quincy Ads
<div data-type="ad" data-publisher="lqm.javaeclipseandroid.site" data-zone="inBetween01" data-format="728x90">
</div> -->
         <!-- Responsive Lake Quincy Ads -->
         <div id="ad-inBetween01">
            	<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-inBetween01');});</script>
            </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javastax"></a>3.&nbsp;Streaming API for XML (StaX)
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javastax_overview"></a>3.1.&nbsp;Overview
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Streaming API for XML, called StaX, is an API for
                  reading
                  and
                  writing XML Documents.
                  
               </p>
               <p>
                  StaX is a Pull-Parsing model. Application can take the
                  control
                  over parsing the XML documents by pulling (taking)
                  the events from the
                  parser.
                  
               </p>
               <p>
                  The core StaX API falls into two categories and they are
                  listed below.
                  They are
                  
                  
               </p>
               <div class="itemizedlist">
                  <ul class="itemizedlist" type="disc">
                     <li class="listitem">
                        <p>Cursor API</p>
                     </li>
                     <li class="listitem">
                        <p>Event Iterator API</p>
                     </li>
                  </ul>
               </div>
               <p>
                  
               </p>
               <p>
                  Applications can use any of these two API for parsing XML
                  documents.
                  The following will focus on the event iterator
                  API as I consider it
                  more convenient to use.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javastax_api"></a>3.2.&nbsp;Event Iterator API
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  The event iterator API has two main interfaces:
                  XMLEventReader
                  for parsing XML and XMLEventWriter for
                  generating XML.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javastax_read"></a>3.3.&nbsp;XMLEventReader - Read XML Example
                        </h3>
                     </div>
                  </div>
               </div>
               <p> This example is stored in project "de.vogella.xml.stax.reader".
                  
               </p>
               <p>
                  Applications loop over the entire document requesting for
                  the
                  Next Event. The Event Iterator API is implemented on top
                  of the Cursor
                  API.
                  
               </p>
               <p>
                  In this example we will read the following XML document and
                  create objects from it.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-directive" style="color: maroon">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="hl-tag" style="color: #080">&lt;config&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;item</span> <span class="hl-attribute" style="color: #7F0055">date</span>=<span class="hl-value" style="color: blue">"January 2009"</span><span class="hl-tag" style="color: #080">&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;mode&gt;</span>1<span class="hl-tag" style="color: #080">&lt;/mode&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;unit&gt;</span>900<span class="hl-tag" style="color: #080">&lt;/unit&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;current&gt;</span>1<span class="hl-tag" style="color: #080">&lt;/current&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;interactive&gt;</span>1<span class="hl-tag" style="color: #080">&lt;/interactive&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/item&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;item</span> <span class="hl-attribute" style="color: #7F0055">date</span>=<span class="hl-value" style="color: blue">"February 2009"</span><span class="hl-tag" style="color: #080">&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;mode&gt;</span>2<span class="hl-tag" style="color: #080">&lt;/mode&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;unit&gt;</span>400<span class="hl-tag" style="color: #080">&lt;/unit&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;current&gt;</span>2<span class="hl-tag" style="color: #080">&lt;/current&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;interactive&gt;</span>5<span class="hl-tag" style="color: #080">&lt;/interactive&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/item&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;item</span> <span class="hl-attribute" style="color: #7F0055">date</span>=<span class="hl-value" style="color: blue">"December 2009"</span><span class="hl-tag" style="color: #080">&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;mode&gt;</span>9<span class="hl-tag" style="color: #080">&lt;/mode&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;unit&gt;</span>5<span class="hl-tag" style="color: #080">&lt;/unit&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;current&gt;</span>100<span class="hl-tag" style="color: #080">&lt;/current&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;interactive&gt;</span>3<span class="hl-tag" style="color: #080">&lt;/interactive&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/item&gt;</span>
<span class="hl-tag" style="color: #080">&lt;/config&gt;</span> </pre><p>
                  
               </p>
               <p> Define therefore the following class to store the individual
                  entries of the XML file.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.xml.stax.model;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> Item {
  <span class="hl-keyword">private</span> String date; 
  <span class="hl-keyword">private</span> String mode;
  <span class="hl-keyword">private</span> String unit;
  <span class="hl-keyword">private</span> String current;
  <span class="hl-keyword">private</span> String interactive;
  
  <span class="hl-keyword">public</span> String getDate() {
    <span class="hl-keyword">return</span> date;
  }
  
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setDate(String date) {
    <span class="hl-keyword">this</span>.date = date;
  }
  <span class="hl-keyword">public</span> String getMode() {
    <span class="hl-keyword">return</span> mode;
  }
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setMode(String mode) {
    <span class="hl-keyword">this</span>.mode = mode;
  }
  <span class="hl-keyword">public</span> String getUnit() {
    <span class="hl-keyword">return</span> unit;
  }
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setUnit(String unit) {
    <span class="hl-keyword">this</span>.unit = unit;
  }
  <span class="hl-keyword">public</span> String getCurrent() {
    <span class="hl-keyword">return</span> current;
  }
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setCurrent(String current) {
    <span class="hl-keyword">this</span>.current = current;
  }
  <span class="hl-keyword">public</span> String getInteractive() {
    <span class="hl-keyword">return</span> interactive;
  }
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setInteractive(String interactive) {
    <span class="hl-keyword">this</span>.interactive = interactive;
  }

  <em><span class="hl-annotation" style="color: gray">@Override</span></em>
  <span class="hl-keyword">public</span> String toString() {
    <span class="hl-keyword">return</span> <span class="hl-string" style="color:blue">"Item [current="</span> + current + <span class="hl-string" style="color:blue">", date="</span> + date + <span class="hl-string" style="color:blue">", interactive="</span>
        + interactive + <span class="hl-string" style="color:blue">", mode="</span> + mode + <span class="hl-string" style="color:blue">", unit="</span> + unit + <span class="hl-string" style="color:blue">"]"</span>;
  }
} </pre><p>
                  
               </p>
               <p>
                  The following reads the XML file and creates a List of object
                  Items from the entries in the XML file.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.xml.stax.read;

<span class="hl-keyword">import</span> java.io.FileInputStream;
<span class="hl-keyword">import</span> java.io.FileNotFoundException;
<span class="hl-keyword">import</span> java.io.InputStream;
<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.Iterator;
<span class="hl-keyword">import</span> java.util.List;

<span class="hl-keyword">import</span> javax.xml.stream.XMLEventReader;
<span class="hl-keyword">import</span> javax.xml.stream.XMLInputFactory;
<span class="hl-keyword">import</span> javax.xml.stream.XMLStreamException;
<span class="hl-keyword">import</span> javax.xml.stream.events.Attribute;
<span class="hl-keyword">import</span> javax.xml.stream.events.EndElement;
<span class="hl-keyword">import</span> javax.xml.stream.events.StartElement;
<span class="hl-keyword">import</span> javax.xml.stream.events.XMLEvent;

<span class="hl-keyword">import</span> de.vogella.xml.stax.model.Item;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> StaXParser {
  <span class="hl-keyword">static</span> <span class="hl-keyword">final</span> String DATE = <span class="hl-string" style="color:blue">"date"</span>;
  <span class="hl-keyword">static</span> <span class="hl-keyword">final</span> String ITEM = <span class="hl-string" style="color:blue">"item"</span>;
  <span class="hl-keyword">static</span> <span class="hl-keyword">final</span> String MODE = <span class="hl-string" style="color:blue">"mode"</span>;
  <span class="hl-keyword">static</span> <span class="hl-keyword">final</span> String UNIT = <span class="hl-string" style="color:blue">"unit"</span>;
  <span class="hl-keyword">static</span> <span class="hl-keyword">final</span> String CURRENT = <span class="hl-string" style="color:blue">"current"</span>;
  <span class="hl-keyword">static</span> <span class="hl-keyword">final</span> String INTERACTIVE = <span class="hl-string" style="color:blue">"interactive"</span>;

  <em><span class="hl-annotation" style="color: gray">@SuppressWarnings({ "unchecked", "null" })</span></em>
  <span class="hl-keyword">public</span> List&lt;Item&gt; readConfig(String configFile) {
    List&lt;Item&gt; items = <span class="hl-keyword">new</span> ArrayList&lt;Item&gt;();
    <span class="hl-keyword">try</span> {
      <em class="hl-comment" style="color: #080">// First, create a new XMLInputFactory</em>
      XMLInputFactory inputFactory = XMLInputFactory.newInstance();
      <em class="hl-comment" style="color: #080">// Setup a new eventReader</em>
      InputStream in = <span class="hl-keyword">new</span> FileInputStream(configFile);
      XMLEventReader eventReader = inputFactory.createXMLEventReader(in);
      <em class="hl-comment" style="color: #080">// read the XML document</em>
      Item item = null;

      <span class="hl-keyword">while</span> (eventReader.hasNext()) {
        XMLEvent event = eventReader.nextEvent();

        <span class="hl-keyword">if</span> (event.isStartElement()) {
          StartElement startElement = event.asStartElement();
          <em class="hl-comment" style="color: #080">// If we have an item element, we create a new item</em>
          <span class="hl-keyword">if</span> (startElement.getName().getLocalPart() == (ITEM)) {
            item = <span class="hl-keyword">new</span> Item();
            <em class="hl-comment" style="color: #080">// We read the attributes from this tag and add the date</em>
            <em class="hl-comment" style="color: #080">// attribute to our object</em>
            Iterator&lt;Attribute&gt; attributes = startElement
                .getAttributes();
            <span class="hl-keyword">while</span> (attributes.hasNext()) {
              Attribute attribute = attributes.next();
              <span class="hl-keyword">if</span> (attribute.getName().toString().equals(DATE)) {
                item.setDate(attribute.getValue());
              }

            }
          }

          <span class="hl-keyword">if</span> (event.isStartElement()) {
            <span class="hl-keyword">if</span> (event.asStartElement().getName().getLocalPart()
                .equals(MODE)) {
              event = eventReader.nextEvent();
              item.setMode(event.asCharacters().getData());
              <span class="hl-keyword">continue</span>;
            }
          }
          <span class="hl-keyword">if</span> (event.asStartElement().getName().getLocalPart()
              .equals(UNIT)) {
            event = eventReader.nextEvent();
            item.setUnit(event.asCharacters().getData());
            <span class="hl-keyword">continue</span>;
          }

          <span class="hl-keyword">if</span> (event.asStartElement().getName().getLocalPart()
              .equals(CURRENT)) {
            event = eventReader.nextEvent();
            item.setCurrent(event.asCharacters().getData());
            <span class="hl-keyword">continue</span>;
          }

          <span class="hl-keyword">if</span> (event.asStartElement().getName().getLocalPart()
              .equals(INTERACTIVE)) {
            event = eventReader.nextEvent();
            item.setInteractive(event.asCharacters().getData());
            <span class="hl-keyword">continue</span>;
          }
        }
        <em class="hl-comment" style="color: #080">// If we reach the end of an item element, we add it to the list</em>
        <span class="hl-keyword">if</span> (event.isEndElement()) {
          EndElement endElement = event.asEndElement();
          <span class="hl-keyword">if</span> (endElement.getName().getLocalPart() == (ITEM)) {
            items.add(item);
          }
        }

      }
    } <span class="hl-keyword">catch</span> (FileNotFoundException e) {
      e.printStackTrace();
    } <span class="hl-keyword">catch</span> (XMLStreamException e) {
      e.printStackTrace();
    }
    <span class="hl-keyword">return</span> items;
  }

} </pre><p>
                  
               </p>
               <p> You can test the parser via the following test program. Please
                  note that the file <code class="filename">config.xml</code> must exist in the Java project folder.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.xml.stax.read;

<span class="hl-keyword">import</span> java.util.List;

<span class="hl-keyword">import</span> de.vogella.xml.stax.model.Item;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> TestRead {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String args[]) {
    StaXParser read = <span class="hl-keyword">new</span> StaXParser();
    List&lt;Item&gt; readConfig = read.readConfig(<span class="hl-string" style="color:blue">"config.xml"</span>);
    <span class="hl-keyword">for</span> (Item item : readConfig) {
      System.out.println(item);
    }
  }
} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javastax_write"></a>3.4.&nbsp;Write XML File Example
                        </h3>
                     </div>
                  </div>
               </div>
               <p> This example is stored in project "de.vogella.xml.stax.writer".
                  
               </p>
               <p>
                  Let's assume you would like to write the following simple XML
                  file.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-directive" style="color: maroon">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="hl-tag" style="color: #080">&lt;config&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;mode&gt;</span>1<span class="hl-tag" style="color: #080">&lt;/mode&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;unit&gt;</span>900<span class="hl-tag" style="color: #080">&lt;/unit&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;current&gt;</span>1<span class="hl-tag" style="color: #080">&lt;/current&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;interactive&gt;</span>1<span class="hl-tag" style="color: #080">&lt;/interactive&gt;</span>
<span class="hl-tag" style="color: #080">&lt;/config&gt;</span> </pre><p>
                  
               </p>
               <p>
                  StaX does not provide functionality to automatically format the XML file so you have to add end-of-lines and tab
                  information to
                  your XML file.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.xml.stax.writer;

<span class="hl-keyword">import</span> java.io.FileOutputStream;

<span class="hl-keyword">import</span> javax.xml.stream.XMLEventFactory;
<span class="hl-keyword">import</span> javax.xml.stream.XMLEventWriter;
<span class="hl-keyword">import</span> javax.xml.stream.XMLOutputFactory;
<span class="hl-keyword">import</span> javax.xml.stream.XMLStreamException;
<span class="hl-keyword">import</span> javax.xml.stream.events.Characters;
<span class="hl-keyword">import</span> javax.xml.stream.events.EndElement;
<span class="hl-keyword">import</span> javax.xml.stream.events.StartDocument;
<span class="hl-keyword">import</span> javax.xml.stream.events.StartElement;
<span class="hl-keyword">import</span> javax.xml.stream.events.XMLEvent;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> StaxWriter {
  <span class="hl-keyword">private</span> String configFile;

  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> setFile(String configFile) {
    <span class="hl-keyword">this</span>.configFile = configFile;
  }

  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> saveConfig() <span class="hl-keyword">throws</span> Exception {
    <em class="hl-comment" style="color: #080">// create an XMLOutputFactory</em>
    XMLOutputFactory outputFactory = XMLOutputFactory.newInstance();
    <em class="hl-comment" style="color: #080">// create XMLEventWriter</em>
    XMLEventWriter eventWriter = outputFactory
        .createXMLEventWriter(<span class="hl-keyword">new</span> FileOutputStream(configFile));
    <em class="hl-comment" style="color: #080">// create an EventFactory</em>
    XMLEventFactory eventFactory = XMLEventFactory.newInstance();
    XMLEvent end = eventFactory.createDTD(<span class="hl-string" style="color:blue">"\n"</span>);
    <em class="hl-comment" style="color: #080">// create and write Start Tag</em>
    StartDocument startDocument = eventFactory.createStartDocument();
    eventWriter.add(startDocument);

    <em class="hl-comment" style="color: #080">// create config open tag</em>
    StartElement configStartElement = eventFactory.createStartElement(<span class="hl-string" style="color:blue">""</span>,
        <span class="hl-string" style="color:blue">""</span>, <span class="hl-string" style="color:blue">"config"</span>);
    eventWriter.add(configStartElement);
    eventWriter.add(end);
    <em class="hl-comment" style="color: #080">// Write the different nodes</em>
    createNode(eventWriter, <span class="hl-string" style="color:blue">"mode"</span>, <span class="hl-string" style="color:blue">"1"</span>);
    createNode(eventWriter, <span class="hl-string" style="color:blue">"unit"</span>, <span class="hl-string" style="color:blue">"901"</span>);
    createNode(eventWriter, <span class="hl-string" style="color:blue">"current"</span>, <span class="hl-string" style="color:blue">"0"</span>);
    createNode(eventWriter, <span class="hl-string" style="color:blue">"interactive"</span>, <span class="hl-string" style="color:blue">"0"</span>);

    eventWriter.add(eventFactory.createEndElement(<span class="hl-string" style="color:blue">""</span>, <span class="hl-string" style="color:blue">""</span>, <span class="hl-string" style="color:blue">"config"</span>));
    eventWriter.add(end);
    eventWriter.add(eventFactory.createEndDocument());
    eventWriter.close();
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">void</span> createNode(XMLEventWriter eventWriter, String name,
      String value) <span class="hl-keyword">throws</span> XMLStreamException {

    XMLEventFactory eventFactory = XMLEventFactory.newInstance();
    XMLEvent end = eventFactory.createDTD(<span class="hl-string" style="color:blue">"\n"</span>);
    XMLEvent tab = eventFactory.createDTD(<span class="hl-string" style="color:blue">"\t"</span>);
    <em class="hl-comment" style="color: #080">// create Start node</em>
    StartElement sElement = eventFactory.createStartElement(<span class="hl-string" style="color:blue">""</span>, <span class="hl-string" style="color:blue">""</span>, name);
    eventWriter.add(tab);
    eventWriter.add(sElement);
    <em class="hl-comment" style="color: #080">// create Content</em>
    Characters characters = eventFactory.createCharacters(value);
    eventWriter.add(characters);
    <em class="hl-comment" style="color: #080">// create End node</em>
    EndElement eElement = eventFactory.createEndElement(<span class="hl-string" style="color:blue">""</span>, <span class="hl-string" style="color:blue">""</span>, name);
    eventWriter.add(eElement);
    eventWriter.add(end);

  }

} </pre><p>
                  
               </p>
               <p> And a little test.</p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.xml.stax.writer;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> TestWrite {

  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    StaxWriter configFile = <span class="hl-keyword">new</span> StaxWriter();
    configFile.setFile(<span class="hl-string" style="color:blue">"config2.xml"</span>);
    <span class="hl-keyword">try</span> {
      configFile.saveConfig();
    } <span class="hl-keyword">catch</span> (Exception e) {
      e.printStackTrace();
    }
  }
} </pre><p>
                  
               </p>
               <p>
                  For another (more complex) example of using Stax, please see
                  <a class="ulink" href="http://www.vogella.com/tutorials/RSSFeed/article.html" target="_top"> Reading and creating RSS feeds via Java (with Stax)</a>.
                  
               </p>
            </div>
         </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javaxpath"></a>4.&nbsp;XPath
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javaxpath_a"></a>4.1.&nbsp;Overview
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  XPath (XML Path Language) is a language for selecting /
                  searching nodes from an XML document.
                  Java 5 introduced the javax.xml.xpath package which provides a XPath library.
                  
               </p>
               <p>
                  The following explains how to use XPath to query an XML
                  document via Java.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javaxpath_b"></a>4.2.&nbsp;Using XPath
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  The following explains how to use XPath. Create a new Java
                  project called <em class="wordasword">UsingXPath</em>.
                  
               </p>
               <p>Create the following xml file.</p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-directive" style="color: maroon">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="hl-tag" style="color: #080">&lt;people&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;person&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;firstname&gt;</span>Lars<span class="hl-tag" style="color: #080">&lt;/firstname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;lastname&gt;</span>Vogel<span class="hl-tag" style="color: #080">&lt;/lastname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;city&gt;</span>Heidelberg<span class="hl-tag" style="color: #080">&lt;/city&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/person&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;person&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;firstname&gt;</span>Jim<span class="hl-tag" style="color: #080">&lt;/firstname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;lastname&gt;</span>Knopf<span class="hl-tag" style="color: #080">&lt;/lastname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;city&gt;</span>Heidelberg<span class="hl-tag" style="color: #080">&lt;/city&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/person&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;person&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;firstname&gt;</span>Lars<span class="hl-tag" style="color: #080">&lt;/firstname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;lastname&gt;</span>Strangelastname<span class="hl-tag" style="color: #080">&lt;/lastname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;city&gt;</span>London<span class="hl-tag" style="color: #080">&lt;/city&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/person&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;person&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;firstname&gt;</span>Landerman<span class="hl-tag" style="color: #080">&lt;/firstname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;lastname&gt;</span>Petrelli<span class="hl-tag" style="color: #080">&lt;/lastname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;city&gt;</span>Somewhere<span class="hl-tag" style="color: #080">&lt;/city&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/person&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;person&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;firstname&gt;</span>Lars<span class="hl-tag" style="color: #080">&lt;/firstname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;lastname&gt;</span>Tim<span class="hl-tag" style="color: #080">&lt;/lastname&gt;</span>
    <span class="hl-tag" style="color: #080">&lt;city&gt;</span>SomewhereElse<span class="hl-tag" style="color: #080">&lt;/city&gt;</span>
  <span class="hl-tag" style="color: #080">&lt;/person&gt;</span>
<span class="hl-tag" style="color: #080">&lt;/people&gt;</span> </pre><p>
                  
               </p>
               <p>
                  Create a new package "myxml" and a new Java class
                  "QueryXML".
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> myxml;

<span class="hl-keyword">import</span> java.io.IOException;

<span class="hl-keyword">import</span> javax.xml.parsers.DocumentBuilder;
<span class="hl-keyword">import</span> javax.xml.parsers.DocumentBuilderFactory;
<span class="hl-keyword">import</span> javax.xml.parsers.ParserConfigurationException;
<span class="hl-keyword">import</span> javax.xml.xpath.XPath;
<span class="hl-keyword">import</span> javax.xml.xpath.XPathConstants;
<span class="hl-keyword">import</span> javax.xml.xpath.XPathExpression;
<span class="hl-keyword">import</span> javax.xml.xpath.XPathExpressionException;
<span class="hl-keyword">import</span> javax.xml.xpath.XPathFactory;

<span class="hl-keyword">import</span> org.w3c.dom.Document;
<span class="hl-keyword">import</span> org.w3c.dom.NodeList;
<span class="hl-keyword">import</span> org.xml.sax.SAXException;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> QueryXML {
  <span class="hl-keyword">public</span> <span class="hl-keyword">void</span> query() <span class="hl-keyword">throws</span> ParserConfigurationException, SAXException,
      IOException, XPathExpressionException {
    <em class="hl-comment" style="color: #080">// standard for reading an XML file</em>
    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
    factory.setNamespaceAware(true);
    DocumentBuilder builder;
    Document doc = null;
    XPathExpression expr = null;
    builder = factory.newDocumentBuilder();
    doc = builder.parse(<span class="hl-string" style="color:blue">"person.xml"</span>);

    <em class="hl-comment" style="color: #080">// create an XPathFactory</em>
    XPathFactory xFactory = XPathFactory.newInstance();

    <em class="hl-comment" style="color: #080">// create an XPath object</em>
    XPath xpath = xFactory.newXPath();

    <em class="hl-comment" style="color: #080">// compile the XPath expression</em>
    expr = xpath.compile(<span class="hl-string" style="color:blue">"//person[firstname='Lars']/lastname/text()"</span>);
    <em class="hl-comment" style="color: #080">// run the query and get a nodeset</em>
    Object result = expr.evaluate(doc, XPathConstants.NODESET);

    <em class="hl-comment" style="color: #080">// cast the result to a DOM NodeList</em>
    NodeList nodes = (NodeList) result;
    <span class="hl-keyword">for</span> (<span class="hl-keyword">int</span> i=<span class="hl-number">0</span>; i&lt;nodes.getLength();i++){
      System.out.println(nodes.item(i).getNodeValue());
    }

    <em class="hl-comment" style="color: #080">// new XPath expression to get the number of people with name Lars</em>
    expr = xpath.compile(<span class="hl-string" style="color:blue">"count(//person[firstname='Lars'])"</span>);
    <em class="hl-comment" style="color: #080">// run the query and get the number of nodes</em>
    Double number = (Double) expr.evaluate(doc, XPathConstants.NUMBER);
    System.out.println(<span class="hl-string" style="color:blue">"Number of objects "</span> +number);

    <em class="hl-comment" style="color: #080">// do we have more than 2 people with name Lars?</em>
    expr = xpath.compile(<span class="hl-string" style="color:blue">"count(//person[firstname='Lars']) &gt;2"</span>);
    <em class="hl-comment" style="color: #080">// run the query and get the number of nodes</em>
    Boolean check = (Boolean) expr.evaluate(doc, XPathConstants.BOOLEAN);
    System.out.println(check);
  }

  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) <span class="hl-keyword">throws</span> XPathExpressionException, ParserConfigurationException, SAXException, IOException {
    QueryXML process = <span class="hl-keyword">new</span> QueryXML();
    process.query();
  }
} </pre><p>
                  
               </p>
            </div>
         </div> 
         <script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         
         <!-- Article - Before Support 336 x 280 -->
         <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="3645921933"></ins>
         <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="supportandlicense"></a>5.&nbsp;About this website
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="thankyou"></a>5.1.&nbsp;Donate to support free tutorials
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  
                  	
               </p>
               <p>
                  		Please consider a contribution
                  	<a href="http://www.vogella.com/support.html">
                     			<img src="http://www.vogella.com/img/common/40x50xvogella-donate.png.pagespeed.ic.gMuY8kQC6X.png" width="40" height="50" alt="Support free tutorials" title="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Buttom tutorial in thank you']);"></a>
                  			if this article helped you. It will help to maintain our content and our Open Source activities.
                  	
               </p>
               <p>
                  
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="questions"></a>5.2.&nbsp;Questions and discussion
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Writing and updating these tutorials is a lot of work.
                  If this
                  free community service was helpful,
                  you can support the cause by
                  giving
                  a tip
                  as well as reporting typos and factual errors.
                  
               </p>
               <p>
                  If you find errors in this tutorial, please notify me
                  (see the
                  <a class="ulink" href="#top" target="_top">top of the page</a>).
                  Please note that due to the high volume of feedback I
                  receive, I
                  cannot answer questions to your implementation. Ensure you
                  have read
                  the
                  <a class="ulink" href="http://www.vogella.com/faq.html" target="_top">vogella FAQ</a>
                  as
                  I don't respond to questions already answered there.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="thankyou"></a>5.3.&nbsp;License for this tutorial and its code
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  This tutorial is Open Content under the
                  <a class="ulink" href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en" target="_top">
                     CC BY-NC-SA 3.0 DE
                     </a>
                  license. Source code in this tutorial is distributed under the
                  <a class="ulink" href="https://www.eclipse.org/legal/epl-v10.html" target="_top">Eclipse Public License</a>.
                  See the
                  <a class="ulink" href="http://www.vogella.com/license.html" target="_top">vogella License</a>
                  page
                  for details on the terms of reuse.
                  
               </p>
            </div>
         </div>
         
         
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="resources"></a>6.&nbsp;Links and Literature
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="sourcecode"></a>6.1.&nbsp;Source Code
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  <a class="ulink" href="http://www.vogella.com/code/index.html" target="_top">Source Code of Examples</a>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="resources_xml"></a>6.2.&nbsp;Links and Literature
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  <a class="ulink" href="http://www.vogella.com/tutorials/RSSFeed/article.html" target="_top">
                     Read and write RSS feeds via Java (Stax)</a>
                  
               </p>
               <p>
                  <a class="ulink" href="http://java.sun.com/developer/technicalArticles/WebServices/jaxb/" target="_top">
                     JAXB Overview</a>
                  
               </p>
               <p>
                  <a class="ulink" href="http://www.ibm.com/developerworks/library/x-javaxpathapi.html" target="_top">
                     The Java XPath API (by Elliotte Rusty Harold)</a>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="resources_general"></a>6.3.&nbsp;vogella Resources
                        </h3>
                     </div>
                  </div>
               </div>
               <div class="informaltable">
                  <table border="0">
                     <colgroup>
                        <col width="50%" align="left">
                        <col width="50%" align="left">
                     </colgroup>
                     <thead>
                        <tr>
                           <th align="left"><a class="ulink" href="http://www.vogella.com/training/" target="_top">TRAINING</a></th>
                           <th align="left"><a class="ulink" href="http://www.vogella.com/consulting/" target="_top">SERVICE &amp; SUPPORT</a></th>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td align="left">
                              The vogella company provides comprehensive <a class="ulink" href="http://www.vogella.com/training/" target="_top">training and education services</a> 
                              from experts in the areas of Eclipse RCP, Android, Git, Java, Gradle and Spring.
                              We offer both public and inhouse training. Whichever course you decide to take, you are guaranteed to experience 
                              what many before you refer to as 
                              <a class="ulink" href="http://www.vogella.com/training/" target="_top">&#8220;The best IT class I have ever attended&#8221;</a>.
                              
                           </td>
                           <td align="left">
                              The vogella company offers <a class="ulink" href="http://www.vogella.com/consulting/" target="_top">expert consulting</a> services, development support and coaching. Our customers range from
                              Fortune 100 corporations to individual developers.  
                              
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </div>
            </div>
         </div><img src="http://vg04.met.vgwort.de/na/042ca4fa651246619aa092db7b5e1c45" width="1" height="1" alt=""></div>
      
      
      
   <script pagespeed_no_defer="">//<![CDATA[
(function(){window.pagespeed=window.pagespeed||{};var f=window.pagespeed,h=function(e,a,c,b){this.c=e;this.a=a;this.b=c;this.d=b};f.beaconUrl="";
var k=function(e){var a=e.c,c=window.mod_pagespeed_start,b=Number(new Date)-c,a=a+(-1==a.indexOf("?")?"?":"&"),a=a+"ets="+("load"==e.a?"load:":"unload:"),a=a+b;if("beforeunload"!=e.a||!window.mod_pagespeed_loaded){a+="&r"+e.a+"=";if(window.performance){var b=window.performance.timing,d=b.navigationStart,g=b.requestStart,a=a+(b[e.a+"EventStart"]-d),a=a+("&nav="+(b.fetchStart-d)),a=a+("&dns="+(b.domainLookupEnd-b.domainLookupStart)),a=a+("&connect="+(b.connectEnd-b.connectStart)),a=a+("&req_start="+
(g-d)),a=a+("&ttfb="+(b.responseStart-g)),a=a+("&dwld="+(b.responseEnd-b.responseStart)),a=a+("&dom_c="+(b.domContentLoadedEventStart-d));window.performance.navigation&&(a+="&nt="+window.performance.navigation.type);d=-1;b.msFirstPaint?d=b.msFirstPaint:window.chrome&&window.chrome.loadTimes&&(d=Math.floor(1E3*window.chrome.loadTimes().firstPaintTime));d=d-g;0<=d&&(a+="&fp="+d)}else a+=b;f.getResourceTimingData&&window.parent==window&&(a+=f.getResourceTimingData());a+=window.parent!=window?"&ifr=1":
"&ifr=0";"load"==e.a&&(window.mod_pagespeed_loaded=!0,(b=window.mod_pagespeed_num_resources_prefetched)&&(a+="&nrp="+b),(b=window.mod_pagespeed_prefetch_start)&&(a+="&htmlAt="+(c-b)));f.panelLoader&&(c=f.panelLoader.getCsiTimingsString(),""!=c&&(a+="&b_csi="+c));f.criticalCss&&(c=f.criticalCss,a+="&ccis="+c.total_critical_inlined_size+"&cces="+c.total_original_external_size+"&ccos="+c.total_overhead_size+"&ccrl="+c.num_replaced_links+"&ccul="+c.num_unreplaced_links);""!=e.b&&(a+=e.b);document.referrer&&
(a+="&ref="+encodeURIComponent(document.referrer));a+="&url="+encodeURIComponent(e.d);f.beaconUrl=a;(new Image).src=a}};f.e=function(e,a,c,b){var d=new h(e,a,c,b);window.addEventListener?window.addEventListener(a,function(){k(d)},!1):window.attachEvent("on"+a,function(){k(d)})};f.addInstrumentationInit=f.e;})();

pagespeed.addInstrumentationInit('/mod_pagespeed_beacon', 'load', '', 'http://www.vogella.com/tutorials/JavaXML/article.html');
//]]></script></body>
</html>

