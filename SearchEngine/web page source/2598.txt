<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
      <title>Java Collections - Tutorial</title>
      <script type='text/javascript'>window.mod_pagespeed_start = Number(new Date());</script><link rel="stylesheet" type="text/css" href="http://www.vogella.com/css/A.articles.css.pagespeed.cf.R8TsdYc8Ks.css">
      <meta name="generator" content="DocBook XSL Stylesheets V1.77.1">
      <meta name="description" content="Introduction to the Java Collections framework This tutorial explains the usage of the Java collections, e.g. Lists, ArrayLists and Maps.">
      <link rel="shortcut icon" href="http://www.vogella.com/favicon.ico">
      <meta name="viewport" content="width=device-width, initial-scale=1">
   </head>
   <body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
      
      
      <!-- Google analytics (Jennifer) -->
      
      <script type="text/javascript">var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-3967758-1']);_gaq.push(['_setDomainName','vogella.com']);_gaq.push(['_setAllowLinker',true]);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();</script>
      
      
      
      <!-- Load jQuery -->
      <script type="text/javascript" src="http://www.vogella.com/javascript/jquery/jquery.js.pagespeed.jm.LynoS8h5RR.js"></script>
      
      <!-- jQuery Hide Buttons -->
      <script type="text/javascript">//<![CDATA[
var fixed=false;$(document).scroll(function(){if($(this).scrollTop()>955){if(!fixed){fixed=true;$('.bottom_left').css({display:'block'});$('.bottom_right').css({display:'block'});}}else{if(fixed){fixed=false;$('.bottom_left').css({display:'none'});$('.bottom_right').css({display:'none'});}}});
//]]></script>
      
      
      <!-- Lake Quincy Ads - old way now replaced with Lake Quincy Ads Responsive
<script type='text/javascript'>
	function _dmBootstrap(file) {
		var _dma = document.createElement('script');
		_dma.type = 'text/javascript';
		_dma.async = true;
		_dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
	}
	function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
	(function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000);})();
</script>-->
      
      
      <!-- Lake Quincy Ads Responsive -->  
      <script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script>
      
      <script type="text/javascript">googletag.cmd.push(function(){var mapping=googletag.sizeMapping().addSize([320,700],[300,250]).addSize([750,200],[300,250]).addSize([1170,200],[728,90]).build();googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/right',[160,600],'ad-left').addService(googletag.pubads()).setTargeting('left');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/beforeTOC',[[300,250],[728,90]],'ad-beforeTOC').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('beforeTOC');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween01',[[300,250],[728,90]],'ad-inBetween01').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween01');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween02',[[300,250],[728,90]],'ad-inBetween02').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween02');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inBetween03',[[300,250],[728,90]],'ad-inBetween03').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inBetween03');googletag.pubads().enableSingleRequest();googletag.enableServices();});</script>
      
      <div id="headerpart">
         
         	
         <div id="logo">
            		<a title="vogella.com" href="http://www.vogella.com">
               			<img src="http://www.vogella.com/img/logo/xindex_logo.png.pagespeed.ic.W70tcDQqll.png" alt="vogella.com"> 
               		</a>
            	
         </div> 
         <!-- logo -->
         	
         	
         <div id="topnav">
            		
            <ul id="home" class="topnav">
               			
               <li id="home-icon"><a href="http://www.vogella.com/"></a></li>
               			
               <li class="currentpage"> <a href="http://www.vogella.com/tutorials/">Tutorials</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/tutorials/android.html">Android Programming</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/eclipseide.html">Eclipse IDE</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/eclipse.html">Eclipse RCP/Plug-ins</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/versioncontrol.html">Version Control</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/web.html">Web</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/java.html">Java</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/technology.html">Technology</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/google.html">Google</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/algorithms.html">Algorithms</a></li>
                     					
                     <li><a href="http://www.vogella.com/tutorials/designpattern.html">Design Pattern</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               			
               <li><a href="http://www.vogella.com/training/">Services</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/training/android/index.html">Android Development Training</a>
                        						
                        <ul>
                           							
                           <li><a href="http://www.vogella.com/training/android/androidprofessional.html">Android Professional</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/android/androidtesting.html">Android Testing and Appl. Optimization</a></li>
                           						
                        </ul>
                        					
                     </li>
                     					
                     <li><a href="http://www.vogella.com/training/eclipse/index.html">Eclipse Development Training</a>
                        						
                        <ul>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsercp.html">Eclipse RCP</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseide.html">Eclipse IDE Expert</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsercpmigration.html">Eclipse RCP Migration</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsecontribution.html">	Contributing to Eclipse</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseplugin.html">Eclipse IDE Plug-in Development</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/tycho.html">Maven/Tycho</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/rcpjavaeespring.html">Eclipse RCP with Java EE and Spring</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipseoxygen.html">oXygen in Eclipse</a></li>
                           							
                           <li><a href="http://www.vogella.com/training/eclipse/eclipsenattable.html">NatTable</a></li>
                           						
                        </ul>
                        					
                     </li>
                     					
                     <li><a href="http://www.vogella.com/training/git.html">Git Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/groovy.html">Groovy Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/gradle.html">Gradle Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/java.html">Java Training</a></li>
                     					
                     <li><a href="http://www.vogella.com/training/spring.html">Spring Workshop</a></li>
                     					
                     <li><a href="http://www.vogella.com/consulting/">Expert Consulting</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/products/">Products</a>
                  				
                  <ul>
                     					
                     <li><a href="http://saneclipse.vogella.com">saneclipse</a></li>
                     					
                     <li><a href="http://codemodify.vogella.com">CodeModify</a></li>
                     					
                     <li><a href="http://preferencespy.vogella.com">PreferenceSpy</a></li>
                     					
                     <!--<li><a href="http://e4tools.vogella.com">e4 tools</a></li>
					<li><a href="http://e4perspectiveswitcher.vogella.com">e4 perspectiveSwitcher</a></li>-->
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/books/">Books</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/books/eclipsecontribution.html">Contributing to the Eclipse Project</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/eclipsercp.html">Eclipse RCP</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/eclipseide.html">Eclipse IDE</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/git.html">Git</a></li>
                     					
                     <li><a href="http://www.vogella.com/books/android.html">Android SQlite and ContentProvider</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/company/">Company</a>
                  				
                  <ul>
                     					
                     <li><a href="http://www.vogella.com/aboutvogella.html">About us</a></li>
                     					
                     <li><a href="http://www.vogella.com/people/index.html">People at vogella</a></li>
                     					
                     <li><a href="http://www.vogella.com/customers.html" onclick="_gaq.push(['_trackEvent', 'Customers', 'clicked', 'Header']);">Reference Customers</a></li>
                     					
                     <li><a href="http://blog.vogella.com/">Blog</a></li>
                     					
                     <li><a href="http://www.vogella.com/jobs/">Jobs</a></li>
                     					
                     <li><a href="http://www.vogella.com/faq.html">FAQ</a></li>
                     					
                     <li><a href="http://www.vogella.com/legal.html">Legal</a></li>
                     				
                  </ul>
                  			
               </li>
               			
               <li><a href="http://www.vogella.com/support.html">Donate</a></li>
               			
               <li><a href="http://www.vogella.com/contact.html">Contact us</a></li>
               		
            </ul>
            	
         </div>
         <!-- topnav -->
         	
         
         	
         <div id="searchfixed">
            		
            <form action="http://www.vogella.com/search.html" id="cse-search-box">
               			
               <div id="searchwrapper">
                  
                  				<input type="hidden" name="cx" value="partner-pub-3851443674951530:3991491935">
                  				<input type="hidden" name="cof" value="FORID:10">
                  				<input type="hidden" name="ie" value="UTF-8">
                  				<input type="text" placeholder="Search" id="search_field" name="q" size="55">
                  				<input type="image" src="http://www.vogella.com/img/icons/xsrch.png.pagespeed.ic.BP8TtuQRzJ.png" id="search_button" name="sa" alt="Search">
                  			
               </div>
               		
            </form>
            	
         </div> 
         <!-- searchfixed -->
         
         
      </div> 
      <!-- headerpart -->
      
      
      <div id="leftcol">
         
         	<br>
         	<br>
         	
         	<a href="http://www.vogella.com/support.html">
            		<img src="http://www.vogella.com/img/common/140x150xvogella-donate.png.pagespeed.ic.gMuY8kQC6X.png" width="140" height="150" alt="Support free tutorials" title="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Top tutorial']);"></a>
         
         	<br>
         	<br>
         
         	<script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         	
         <!-- LeftColumn -->
         	<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="6294971031"></ins>
         	<script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         
         	<p></p>
         	
         	<br>
         	<br>
         
         	
         <!-- Nonresponsive Lake Quincy 160x600 Wide Skycraper code
	<div data-type="ad" data-publisher="lqm.javaeclipseandroid.site" data-zone="right" data-format="160x600"></div>-->
         	
         	
         <!-- Responsive Lake Quincy Ads -->
         	
         <div id="ad-left">
            		<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-left');});</script>
            	</div>
         
      </div> 
      <!-- leftcolumn -->
      
      
      <div id="rightcol">
         
         	
         <!-- vogellas own advertising for training and books --> 	
         	
         <p class="training-bg">
            		<a class="image-z" href="http://www.vogella.com/training/" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'whole Box']);">
               			<img src="http://www.vogella.com/img/training/200x364xvogellatraining_ad.png.pagespeed.ic.KQGlbyMRAP.png" height="364" width="200" alt="vogella training">
               		</a>
            		<a class="btn-training button1" href="http://www.vogella.com/training/" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'training']);">Training</a>
            		<a class="btn-training button2" href="http://www.vogella.com/books/index.html" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'books']);">Books</a>
            	
         </p> 
         	
         	
         <div class="bottom_right">
            		
            <div class="social_media">
               			<a href="http://www.twitter.com/vogellacompany">
                  				
                  <h1>FOLLOW<br>ME ON
                  </h1> 
                  				<img src="http://www.vogella.com/img/tutoriallinks/xtwitter.png.pagespeed.ic.5z4YhYIkb2.png" alt="Follow me on twitter">
                  			</a>
               		
            </div>
            <!-- social_media -->
            
            		
            <div class="social_media">
               			<a rel="me" href="https://profiles.google.com/104044918586174763681">
                  				
                  <h1>FOLLOW<br>ME ON
                  </h1> 
                  				<img src="http://www.vogella.com/img/tutoriallinks/xgoogle_plus.png.pagespeed.ic.d6W0KZShGF.png" alt="Follow me on Google+">
                  			</a>
               		
            </div>
            <!-- social_media -->
            	
         </div> 
         <!-- bottom_right -->
         	
         	
         <div class="bottom_left">
            	
            <div class="services">
               		<a href="http://www.vogella.com/training/index.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/xtraining.png.pagespeed.ic.xjFDFI8z_E.png" alt="Get training" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'Fix buttom left training']);">
                  	
                  <h1>GET TRAINING</h1>
                  	</a>
               
            </div>
            <!-- services -->
            	
            <div class="services">
               	<a href="http://www.vogella.com/books/index.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/books.png.pagespeed.ce.iDpNUUudib.png" alt="Purchase books" onclick="_gaq.push(['_trackEvent', 'vogella Services', 'clicked', 'Fix buttom left books']);">
                  	
                  <h1>PURCHASE BOOKS</h1>
                  	</a>
               
            </div>
            <!-- services -->
            	
            <div class="services">	
               	<a href="http://www.vogella.com/support.html">
                  	<img src="http://www.vogella.com/img/tutoriallinks/xdonate.png.pagespeed.ic.DDVinfleA6.png" alt="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Fix buttom left']);">
                  	
                  <h1>SUPPORT FREE TUTORIAL</h1>
                  	</a>
               
               
            </div> 
            <!-- services -->       
            
         </div> 
         <!-- bottom_left -->
         
         
      </div> 
      <!--rightcol-->
      
      
      <div class="article">
         <div class="titlepage">
            <div>
               <div>
                  <h2 class="title"><a name="d413753e1"></a>Java Collections - Tutorial
                  </h2>
               </div>
               <div>
                  <div class="author">
                     <h3 class="author"><span class="firstname">Lars</span> <span class="surname">Vogel</span></h3>
                  </div>
               </div>
               <div>
                  <p class="releaseinfo">
                     
                  </p>
                  <p>Version 2.5</p>
                  <p class="releaseinfo">
                     
                  </p>
               </div>
               <div>
                  <p class="copyright">Copyright ? 2008, 2009, 2010, 2011, 2012, 2013, 2014 vogella GmbH</p>
               </div>
               <div>
                  <p class="pubdate">08.12.2014</p>
               </div>
               <div>
                  <div class="abstract"><a name="abstract"></a><p class="title"><b>Introduction to the Java Collections framework</b></p>
                     <p> This tutorial explains the usage of the Java collections, e.g.
                        Lists, ArrayLists and Maps.
                        
                     </p>
                  </div>
               </div>
            </div>
            <div>
               <div xmlns:fo="http://www.w3.org/1999/XSL/Format" id="ad-beforeTOC"><script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-beforeTOC');});</script></div>
            </div>
            <hr>
         </div>
         <div class="toc">
            <p><b>Table of Contents</b></p>
            <dl>
               <dt><span class="section"><a href="#javacollections">1. Java Collections</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#javacollections1">1.1. What are collections</a></span></dt>
                     <dt><span class="section"><a href="#javacollections_typicaltypes1">1.2. Important default implementations</a></span></dt>
                     <dt><span class="section"><a href="#javacollections_typicaltypes2">1.3. Type information with Generics</a></span></dt>
                     <dt><span class="section"><a href="#javacollections_lambdas">1.4. Collections and lambdas</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#javacollections_types">2. Maps in Java</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#map_hashmap">2.1. Map and HashMap</a></span></dt>
                     <dt><span class="section"><a href="#map_convert">2.2. Convert keys in the Map to Array or ArrayList</a></span></dt>
                     <dt><span class="section"><a href="#map_hashmap">2.3. Map and HashMap</a></span></dt>
                     <dt><span class="section"><a href="#map_convert">2.4. Convert keys in the map to an Array or a List</a></span></dt>
                     <dt><span class="section"><a href="#map_processingmapselements">2.5. Processing every element in the map</a></span></dt>
                     <dt><span class="section"><a href="#map_getordefault">2.6. Getting the current value or a default for a map </a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#javacollections_list">3. Important implementations</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#javacollections_lists">3.1. The List interface</a></span></dt>
                     <dt><span class="section"><a href="#javacollections_lists">3.2. ArrayList and LinkedList as implementations</a></span></dt>
                     <dt><span class="section"><a href="#javacollections_sorting">3.3. Sorting lists</a></span></dt>
                     <dt><span class="section"><a href="#javacollections_removinglistitems">3.4. Remove list members based on condition</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#javacollections_methods">4. Useful collection methods</a></span></dt>
               <dt><span class="section"><a href="#collectionssort">5. Using Collections.sort and Comparator in Java</a></span></dt>
               <dt><span class="section"><a href="#exercise_javacollections">6. Exercise: Use Java Collections</a></span></dt>
               <dt><span class="section"><a href="#supportandlicense">7. About this website</a></span></dt>
               <dd>
                  <dl>
                     <dt><span class="section"><a href="#thankyou">7.1. Donate to support free tutorials</a></span></dt>
                     <dt><span class="section"><a href="#questions">7.2. Questions and discussion</a></span></dt>
                     <dt><span class="section"><a href="#thankyou">7.3. License for this tutorial and its code</a></span></dt>
                  </dl>
               </dd>
               <dt><span class="section"><a href="#resources">8. Links and Literature</a></span></dt>
            </dl>
         </div>
         <script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         
         <!-- Responsive - After Table of Content -->
         <ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-3851443674951530" data-ad-slot="4470606330" data-ad-format="auto"></ins>
         <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javacollections"></a>1.&nbsp;Java Collections
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections1"></a>1.1.&nbsp;What are collections
                        </h3>
                     </div>
                  </div>
               </div><a class="indexterm" name="d413753e54"></a><p>
                  The Java language supports arrays to store data. Arrays
                  are of a
                  fixed size which is defined during initialization of the array.
                  
               </p>
               <p>
                  Developer typically require a data structure which is flexible
                  in
                  size, so that they can add and remove items from this data
                  structure
                  on request. To avoid that every developer has to implement
                  his custom
                  data structure the Java library provide several default
                  implementations for this via the
                  <code class="code">collection</code>
                  framework.
                  
               </p>
               <p>
                  Java collections are dynamic in
                  size,
                  e.g. a collection
                  can contain
                  a
                  flexible number of objects.
                  
               </p>
               <div class="tip" style="margin-left: 0.5in; margin-right: 0.5in;">
                  <h3 class="title">Tip</h3>
                  <p>
                     Collections are implemented based on arrays. See for example
                     <a class="ulink" href="http://www.vogella.com/tutorials/JavaDatastructureList/article.html" target="_top">Implementing an ArrayList in Java</a>
                     for and example how to implement a list based on arrays.
                     
                  </p>
               </div>
               <p>
                  More theoretical said,
                  collection
                  is a data structure which
                  contains and
                  processes a
                  set of data.
                  The
                  data
                  stored in the collection is
                  encapsulated and
                  the access to
                  the
                  data
                  is only
                  possible via predefined
                  methods.
                  
               </p>
               <p>
                  For example if your application saves data in an
                  object of type
                  <code class="code">People</code>,
                  you can store several
                  <code class="code">People</code>
                  objects in a
                  collection.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_typicaltypes1"></a>1.2.&nbsp;Important default implementations
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Typical collections are: stacks, queues, deques, lists and
                  trees.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_typicaltypes2"></a>1.3.&nbsp;Type information with Generics
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  As of Java 5 collections should get parameterized with an object
                  declaration
                  to enable the compiler to check if objects which are
                  added
                  to
                  the collection have the correct type. This is based on
                  <em class="wordasword">Generics</em>. Generics allow a type or method to operate on objects of
                  various
                  types while providing compile-time type safety.
                  
               </p>
               <p>
                  The following code shows an example how to create a Collection of
                  type
                  <code class="code">List</code>
                  which is parameterized with &lt;String&gt;
                  to indicate to the Java compiler that only Strings are allowed in
                  this
                  list.
                  .
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> collections;

<span class="hl-keyword">import</span> java.util.ArrayList;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> MyArrayList {

    <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {

      <em class="hl-comment" style="color: #080">// create a list, use is ArrayList as concrete type </em>
      <em class="hl-comment" style="color: #080">// ArrayList&lt;&gt; infers the String type from the left side</em>
        List&lt;String&gt; var = <span class="hl-keyword">new</span> ArrayList&lt;&gt;();
        
        <em class="hl-comment" style="color: #080">// add a few Strings to it</em>
        var.add(<span class="hl-string" style="color:blue">"Lars"</span>);
        var.add(<span class="hl-string" style="color:blue">"Tom"</span>);
        
        <em class="hl-comment" style="color: #080">// Loop over it and print the result to the console</em>
        <span class="hl-keyword">for</span> (String s : var) {
            System.out.println(s);
        }
    }
} </pre><p>
                  
               </p>
               <p>If you try to put a non String into this list, you would
                  receive
                  a compiler error.
                  
               </p>
               <p>
                  <code class="code">List</code>
                  is only an interface, a common implementation is the
                  <code class="code">ArrayList</code>
                  class, hence you need to call
                  <code class="code">new ArrayList()</code>.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_lambdas"></a>1.4.&nbsp;Collections and lambdas
                        </h3>
                     </div>
                  </div>
               </div>
               <p>With Java 8 the Collections library has been updated to support
                  lambdas. Operations on Collections have been largely simplified with
                  this.
                  
               </p>
            </div>
         </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javacollections_types"></a>2.&nbsp;Maps in Java
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="map_hashmap"></a>2.1.&nbsp;Map and HashMap
                        </h3>
                     </div>
                  </div>
               </div><a class="indexterm" name="d413753e129"></a><a class="indexterm" name="d413753e132"></a><p>
                  The
                  <code class="code">Map</code>
                  interface defines an object that maps keys to values. A map cannot
                  contain
                  duplicate keys; each key can map to at most one value.
                  
               </p>
               <p>
                  The
                  <code class="code">HashMap</code>
                  class is an efficient implementation of the
                  <code class="code">Map</code>
                  interface. The following code demonstrates its usage.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.map;

<span class="hl-keyword">import</span> java.util.HashMap;
<span class="hl-keyword">import</span> java.util.Map;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> MapTester {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    
    <em class="hl-comment" style="color: #080">// keys are Strings</em>
    <em class="hl-comment" style="color: #080">// objects are also Strings</em>
    Map&lt;String, String&gt; map = <span class="hl-keyword">new</span> HashMap&lt;&gt;();
    fillData(map);

    <em class="hl-comment" style="color: #080">// write to command line</em>
    map.forEach((k, v) -&gt; System.out.printf(<span class="hl-string" style="color:blue">"%s %s%n"</span>, k, v));

    <em class="hl-comment" style="color: #080">// add and remove from the map</em>
    map.put(<span class="hl-string" style="color:blue">"iPhone"</span>, <span class="hl-string" style="color:blue">"Created by Apple"</span>);
    map.remove(<span class="hl-string" style="color:blue">"Android"</span>);

    <em class="hl-comment" style="color: #080">// write again to command line</em>
    map.forEach((k, v) -&gt; System.out.printf(<span class="hl-string" style="color:blue">"%s %s%n"</span>, k, v));
  
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> fillData(Map&lt;String, String&gt; map) {
    map.put(<span class="hl-string" style="color:blue">"Android"</span>, <span class="hl-string" style="color:blue">"Mobile"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse IDE"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse RCP"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Git"</span>, <span class="hl-string" style="color:blue">"Version control system"</span>);
    
  }

} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="map_convert"></a>2.2.&nbsp;Convert keys in the Map to Array or ArrayList
                        </h3>
                     </div>
                  </div>
               </div>
               <p>You can convert your keys or values to an array or list. The
                  following code demonstrates that.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.map;

<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.HashMap;
<span class="hl-keyword">import</span> java.util.List;
<span class="hl-keyword">import</span> java.util.Map;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> ConvertMapTester {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    
    <em class="hl-comment" style="color: #080">// keys are Strings</em>
    <em class="hl-comment" style="color: #080">// objects are also Strings</em>
    Map&lt;String, String&gt; map = <span class="hl-keyword">new</span> HashMap&lt;&gt;();
    fillData(map);
    
    <em class="hl-comment" style="color: #080">// convert keys to array</em>
    String[] strings = keysAsArray(map);
    <span class="hl-keyword">for</span> (String string : strings) {
      System.out.println(string);
    }
    <em class="hl-comment" style="color: #080">// convert keys to list</em>
    List&lt;String&gt; list = keysAsList(map);
    <span class="hl-keyword">for</span> (String string : list) {
      System.out.println(string);
    }
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> fillData(Map&lt;String, String&gt; map) {
    map.put(<span class="hl-string" style="color:blue">"Android"</span>, <span class="hl-string" style="color:blue">"Mobile"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse IDE"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse RCP"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Git"</span>, <span class="hl-string" style="color:blue">"Version control system"</span>);
    
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> String[] keysAsArray(Map&lt;String, String&gt; map) {
    <span class="hl-keyword">return</span> map.keySet().toArray(<span class="hl-keyword">new</span> String[map.keySet().size()]);
  }

  <em class="hl-comment" style="color: #080">// assumes the key is of type String</em>
  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> List&lt;String&gt; keysAsList(Map&lt;String, String&gt; map) {
    List&lt;String&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;String&gt;(map.keySet());
    <span class="hl-keyword">return</span> list;
  }

} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="map_hashmap"></a>2.3.&nbsp;Map and HashMap
                        </h3>
                     </div>
                  </div>
               </div><a class="indexterm" name="d413753e166"></a><a class="indexterm" name="d413753e169"></a><p>
                  The
                  <code class="code">Map</code>
                  interface defines an object that maps keys to values. A map cannot
                  contain
                  duplicate keys; each key can map to at most one value.
                  
               </p>
               <p>
                  The
                  <code class="code">HashMap</code>
                  class is an efficient implementation of the
                  <code class="code">Map</code>
                  interface. The following code demonstrates its usage.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.map;

<span class="hl-keyword">import</span> java.util.HashMap;
<span class="hl-keyword">import</span> java.util.Map;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> MapTester {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    
    <em class="hl-comment" style="color: #080">// keys are Strings</em>
    <em class="hl-comment" style="color: #080">// objects are also Strings</em>
    Map&lt;String, String&gt; map = <span class="hl-keyword">new</span> HashMap&lt;&gt;();
    fillData(map);

    <em class="hl-comment" style="color: #080">// write to command line</em>
    map.forEach((k, v) -&gt; System.out.printf(<span class="hl-string" style="color:blue">"%s %s%n"</span>, k, v));

    <em class="hl-comment" style="color: #080">// add and remove from the map</em>
    map.put(<span class="hl-string" style="color:blue">"iPhone"</span>, <span class="hl-string" style="color:blue">"Created by Apple"</span>);
    map.remove(<span class="hl-string" style="color:blue">"Android"</span>);

    <em class="hl-comment" style="color: #080">// write again to command line</em>
    map.forEach((k, v) -&gt; System.out.printf(<span class="hl-string" style="color:blue">"%s %s%n"</span>, k, v));
  
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> fillData(Map&lt;String, String&gt; map) {
    map.put(<span class="hl-string" style="color:blue">"Android"</span>, <span class="hl-string" style="color:blue">"Mobile"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse IDE"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse RCP"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Git"</span>, <span class="hl-string" style="color:blue">"Version control system"</span>);
    
  }

} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="map_convert"></a>2.4.&nbsp;Convert keys in the map to an Array or a List
                        </h3>
                     </div>
                  </div>
               </div>
               <p>You can convert your keys or values to an array or list. The
                  following code demonstrates that.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.map;

<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.HashMap;
<span class="hl-keyword">import</span> java.util.List;
<span class="hl-keyword">import</span> java.util.Map;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> ConvertMapTester {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    
    <em class="hl-comment" style="color: #080">// keys are Strings</em>
    <em class="hl-comment" style="color: #080">// objects are also Strings</em>
    Map&lt;String, String&gt; map = <span class="hl-keyword">new</span> HashMap&lt;&gt;();
    fillData(map);
    
    <em class="hl-comment" style="color: #080">// convert keys to array</em>
    String[] strings = keysAsArray(map);
    <span class="hl-keyword">for</span> (String string : strings) {
      System.out.println(string);
    }
    <em class="hl-comment" style="color: #080">// convert keys to list</em>
    List&lt;String&gt; list = keysAsList(map);
    <span class="hl-keyword">for</span> (String string : list) {
      System.out.println(string);
    }
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> fillData(Map&lt;String, String&gt; map) {
    map.put(<span class="hl-string" style="color:blue">"Android"</span>, <span class="hl-string" style="color:blue">"Mobile"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse IDE"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse RCP"</span>, <span class="hl-string" style="color:blue">"Java"</span>);
    map.put(<span class="hl-string" style="color:blue">"Git"</span>, <span class="hl-string" style="color:blue">"Version control system"</span>);
    
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> String[] keysAsArray(Map&lt;String, String&gt; map) {
    <span class="hl-keyword">return</span> map.keySet().toArray(<span class="hl-keyword">new</span> String[map.keySet().size()]);
  }

  <em class="hl-comment" style="color: #080">// assumes the key is of type String</em>
  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> List&lt;String&gt; keysAsList(Map&lt;String, String&gt; map) {
    List&lt;String&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;String&gt;(map.keySet());
    <span class="hl-keyword">return</span> list;
  }

} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="map_processingmapselements"></a>2.5.&nbsp;Processing every element in the map
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  To process every element a map you can use the
                  <code class="code">forEach</code>
                  method, which take a lambda as parameter.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="map_getordefault"></a>2.6.&nbsp;Getting the current value or a default for a map 
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Java 8 introduces the
                  <code class="code">getOrDefault()</code>
                  method, which allows to get the current value and if this is not
                  found in the map to return a default value.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.map;

<span class="hl-keyword">import</span> java.util.HashMap;
<span class="hl-keyword">import</span> java.util.Map;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> MapOrDefault {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {

    Map&lt;String,Integer&gt; map = createMap();
    map.put(<span class="hl-string" style="color:blue">"Android"</span>, <span class="hl-number">1</span> + map.getOrDefault(<span class="hl-string" style="color:blue">"Android"</span>, <span class="hl-number">0</span>));

    <em class="hl-comment" style="color: #080">// write to command line</em>
    map.forEach((k, v) -&gt; System.out.printf(<span class="hl-string" style="color:blue">"%s %s%n"</span>, k, v));
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> Map&lt;String, Integer&gt; createMap() {
    Map&lt;String, Integer&gt; map = <span class="hl-keyword">new</span> HashMap&lt;&gt;();
    map.put(<span class="hl-string" style="color:blue">"Eclipse IDE"</span>, <span class="hl-number">0</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse RCP"</span>, <span class="hl-number">0</span>);
    map.put(<span class="hl-string" style="color:blue">"Git"</span>, <span class="hl-number">0</span>);
    <span class="hl-keyword">return</span> map;
  }
} </pre><p>
                  
               </p>
               <p>
                  If you want to add a new entry automatically to a map if it is not
                  present you can use the
                  <code class="code">computeIfAbsent</code>
                  method to calculate a value and add it to the map.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.map;

<span class="hl-keyword">import</span> java.util.HashMap;
<span class="hl-keyword">import</span> java.util.Map;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> ComputeIfAbsent {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {

    Map&lt;String,Integer&gt; map = createMap();
    
    Integer calculatedVaue = map.computeIfAbsent(<span class="hl-string" style="color:blue">"Java"</span>, it -&gt; <span class="hl-number">0</span>);
    System.out.println(calculatedVaue);
    
    <em class="hl-comment" style="color: #080">// write to command line</em>
    map.keySet().forEach(key -&gt; System.out.println(key + <span class="hl-string" style="color:blue">" "</span> + map.get(key)));
  }

  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> Map&lt;String, Integer&gt; createMap() {
    Map&lt;String, Integer&gt; map = <span class="hl-keyword">new</span> HashMap&lt;&gt;();
    map.put(<span class="hl-string" style="color:blue">"Eclipse IDE"</span>, <span class="hl-number">0</span>);
    map.put(<span class="hl-string" style="color:blue">"Eclipse RCP"</span>, <span class="hl-number">0</span>);
    map.put(<span class="hl-string" style="color:blue">"Git"</span>, <span class="hl-number">0</span>);
    map.put(<span class="hl-string" style="color:blue">"Groovy"</span>, <span class="hl-number">0</span>);
    <span class="hl-keyword">return</span> map;
  }
} </pre><p>
                  
               </p>
            </div>
         </div>
         <!-- Non responsive Lake Quincy Ads
<div data-type="ad" data-publisher="lqm.javaeclipseandroid.site" data-zone="inBetween01" data-format="728x90">
</div> -->
         <!-- Responsive Lake Quincy Ads -->
         <div id="ad-inBetween01">
            	<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-inBetween01');});</script>
            </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javacollections_list"></a>3.&nbsp;Important implementations
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_lists"></a>3.1.&nbsp;The List interface
                        </h3>
                     </div>
                  </div>
               </div><a class="indexterm" name="d413753e238"></a><p>
                  The
                  <code class="code">List</code>
                  interface is the base
                  interface for collections which allows to store
                  objects in a resizable
                  container.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_lists"></a>3.2.&nbsp;ArrayList and LinkedList as implementations
                        </h3>
                     </div>
                  </div>
               </div><a class="indexterm" name="d413753e249"></a><a class="indexterm" name="d413753e252"></a><p>
                  <code class="code">ArrayList</code>
                  is an implementation of this interface and allow that elements are
                  dynamically added and removed from the list. If more elements are
                  added to
                  ArrayList than its initial size, its size is increased
                  dynamically.
                  The elements in an
                  <code class="code">ArrayList</code>
                  can be
                  accessed directly and efficiently by using the
                  <code class="code">get()</code>
                  and
                  <code class="code">set()</code>
                  methods, since
                  ArrayList
                  is implemented based on an array.
                  <code class="code">ArrayList</code>
                  is typically used in implementations as implementation class for the
                  <code class="code">List</code>
                  interface.
                  
               </p>
               <p>
                  <code class="code">LinkedList</code>
                  is implemented as a double linked list. Its
                  performance on
                  <code class="code">add()</code>
                  and
                  <code class="code">remove()</code>
                  is better than the performance of Arraylist. The
                  <code class="code">get()</code>
                  and
                  <code class="code">set()</code>
                  methods have worse performance than the ArrayList, as the
                  <code class="code">LinkedList</code>
                  does not provide direct access to its members.
                  
               </p>
               <p>
                  The following code demonstrates the usage of
                  <code class="code">List</code>
                  and
                  <code class="code">ArrayList</code>.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.list;
<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.List;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> ListExample {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    <em class="hl-comment" style="color: #080">// use type inference for ArrayList</em>
    List&lt;Integer&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;&gt;();
    list.add(<span class="hl-number">3</span>);
    list.add(<span class="hl-number">2</span>);
    list.add(<span class="hl-number">1</span>);
    list.add(<span class="hl-number">4</span>);
    list.add(<span class="hl-number">5</span>);
    list.add(<span class="hl-number">6</span>);
    list.add(<span class="hl-number">6</span>);
    <span class="hl-keyword">for</span> (Integer integer : list) {
      System.out.println(integer);
    }
  }

} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_sorting"></a>3.3.&nbsp;Sorting lists
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  You can sort lists using their natural order of via lambdas for
                  defining the
                  <code class="code">Comparator.compare()</code>. Typically in Java 8 you use a lambda expression or a method
                  reference for the definion of the
                  <code class="code">compare</code>
                  method.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.list;

<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.List;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> ListSorter {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    System.out.println(<span class="hl-string" style="color:blue">"Sorting with natural order"</span>);
    List&lt;String&gt; l1 = createList();
    l1.sort(null);
    l1.forEach(System.out::println);
    
    System.out.println(<span class="hl-string" style="color:blue">"Sorting with a lamba expression for the comparison"</span>);
    List&lt;String&gt; l2 = createList();
    l2.sort((s1, s2) -&gt; s1.compareToIgnoreCase(s2));  <em class="hl-comment" style="color: #080">// sort ignoring case</em>
    l2.forEach(System.out::println);
    
    System.out.println(<span class="hl-string" style="color:blue">"Sorting with a method references"</span>);
    List&lt;String&gt; l3 = createList();
    l3.sort(String::compareToIgnoreCase);   
    l3.forEach(System.out::println);
         
  }
  
  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> List&lt;String&gt;  createList() {
    List&lt;String&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;&gt;();
    list.add(<span class="hl-string" style="color:blue">"iPhone"</span>);
    list.add(<span class="hl-string" style="color:blue">"Ubuntu"</span>);
    list.add(<span class="hl-string" style="color:blue">"Android"</span>);
    list.add(<span class="hl-string" style="color:blue">"Mac OS X"</span>);
    <span class="hl-keyword">return</span> list;
  }

} </pre><p>
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="javacollections_removinglistitems"></a>3.4.&nbsp;Remove list members based on condition
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  The
                  <code class="code">removeIf</code>
                  method allows to remove list items based on a condition.
                  
               </p>
               <p>
                  
               </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections.list;

<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.List;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> RemoveIfList {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    System.out.println(<span class="hl-string" style="color:blue">"Demonstration of removeIf"</span>);
    List&lt;String&gt; l1 = createList();
    <em class="hl-comment" style="color: #080">// remove all items which contains an "x"</em>
    l1.removeIf(s-&gt; s.toLowerCase().contains(<span class="hl-string" style="color:blue">"x"</span>));
    l1.forEach(s-&gt;System.out.println(s));
    
         
  }
  
  <span class="hl-keyword">private</span> <span class="hl-keyword">static</span> List&lt;String&gt;  createList() {
    List&lt;String&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;&gt;();
    list.add(<span class="hl-string" style="color:blue">"iPhone"</span>);
    list.add(<span class="hl-string" style="color:blue">"Ubuntu"</span>);
    list.add(<span class="hl-string" style="color:blue">"Android"</span>);
    list.add(<span class="hl-string" style="color:blue">"Mac OS X"</span>);
    <span class="hl-keyword">return</span> list;
  }

} </pre><p>
                  
               </p>
            </div>
         </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="javacollections_methods"></a>4.&nbsp;Useful collection methods
                     </h2>
                  </div>
               </div>
            </div><a class="indexterm" name="d413753e342"></a><p>
               The
               <code class="code">java.util.Collections</code>
               class provides useful functionalities for working with collections.
               
            </p>
            <div class="table"><a name="d413753e352"></a><p class="title"><b>Table&nbsp;1.&nbsp;Collections</b></p>
               <div class="table-contents">
                  <table summary="Collections" border="1">
                     <colgroup>
                        <col align="left" class="c1">
                        <col align="left" class="c2">
                     </colgroup>
                     <thead>
                        <tr>
                           <th align="left">Method</th>
                           <th align="left">Description</th>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td align="left">Collections.copy(list, list)</td>
                           <td align="left">Copy a collection to another</td>
                        </tr>
                        <tr>
                           <td align="left">Collections.reverse(list)</td>
                           <td align="left">Reverse the order of the list</td>
                        </tr>
                        <tr>
                           <td align="left">Collections.shuffle(list)</td>
                           <td align="left">Shuffle the list</td>
                        </tr>
                        <tr>
                           <td align="left">Collections.sort(list)</td>
                           <td align="left">Sort the list</td>
                        </tr>
                     </tbody>
                  </table>
               </div>
            </div><br class="table-break"></div> 
         
         <!-- Responsive Lake Quincy Ads -->
         
         <div id="ad-inBetween02">
            	<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-inBetween02');});</script>
            </div>
         
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="collectionssort"></a>5.&nbsp;Using Collections.sort and Comparator in Java
                     </h2>
                  </div>
               </div>
            </div><a class="indexterm" name="d413753e389"></a><p>
               Sorting a collection in Java is easy, just use the
               <code class="code">Collections.sort(Collection)</code>
               to sort your values. The following code shows an example for this.
               
            </p>
            <p>
               
            </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.algorithms.sort.standardjava;
 
<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.Collections;
<span class="hl-keyword">import</span> java.util.List;
 
<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> Simple {
    <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
        List list = <span class="hl-keyword">new</span> ArrayList();
        list.add(<span class="hl-number">5</span>);
        list.add(<span class="hl-number">4</span>);
        list.add(<span class="hl-number">3</span>);
        list.add(<span class="hl-number">7</span>);
        list.add(<span class="hl-number">2</span>);
        list.add(<span class="hl-number">1</span>);
        Collections.sort(list);
        <span class="hl-keyword">for</span> (Integer integer : list) {
            System.out.println(integer);
        }
    }
} </pre><p>
               
            </p>
            <p>
               This is possible because Integer implements the
               <code class="code">Comparable</code>
               interface. This interface defines the method compare which performs
               pairwise comparison of the elements and returns -1 if the element is
               smaller then the compared element, 0 if it is equal and 1 if it is
               larger.
               
            </p>
            <p>
               If what to sort differently you can define your own implementation
               based on the
               <code class="code">Comparator</code>
               interface.
               
            </p>
            <p>
               
            </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.algorithms.sort.standardjava;
 
<span class="hl-keyword">import</span> java.util.Comparator;
 
<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> MyIntComparable <span class="hl-keyword">implements</span> Comparator&lt;Integer&gt;{
 
    <em><span class="hl-annotation" style="color: gray">@Override</span></em>
    <span class="hl-keyword">public</span> <span class="hl-keyword">int</span> compare(Integer o1, Integer o2) {
        <span class="hl-keyword">return</span> (o1&gt;o2 ? -<span class="hl-number">1</span> : (o1==o2 ? <span class="hl-number">0</span> : <span class="hl-number">1</span>));
    }
} </pre><p>
               
            </p>
            <p>
               
            </p><pre class="programlisting"><span class="hl-keyword">package</span> de.vogella.algorithms.sort.standardjava;

<span class="hl-keyword">import</span> java.util.ArrayList;
<span class="hl-keyword">import</span> java.util.Collections;
<span class="hl-keyword">import</span> java.util.List;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> Simple2 {
  <span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    List&lt;Integer&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;Integer&gt;();
    list.add(<span class="hl-number">5</span>);
    list.add(<span class="hl-number">4</span>);
    list.add(<span class="hl-number">3</span>);
    list.add(<span class="hl-number">7</span>);
    list.add(<span class="hl-number">2</span>);
    list.add(<span class="hl-number">1</span>);
    Collections.sort(list, <span class="hl-keyword">new</span> MyIntComparable());
    <span class="hl-keyword">for</span> (Integer integer : list) {
      System.out.println(integer);
    }
  }

} </pre><p>
               
            </p>
            <div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
               <h3 class="title">Note</h3>
               <p>
                  For the above you could also have used the
                  <code class="code">Collection.reverse()</code>
                  method call.
                  
               </p>
            </div>
            <p>
               This approach is that you then sort any
               object by any attribute or
               even
               a combination of attributes. For
               example if you have objects of
               type
               <code class="code">Person</code>
               with the attributes called
               <code class="code">income</code>
               and
               <code class="code">dataOfBirth</code>
               you could define different implementations of
               <code class="code">Comparator</code>
               and sort the objects according to your needs.
               
            </p>
         </div>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="exercise_javacollections"></a>6.&nbsp;Exercise: Use Java Collections
                     </h2>
                  </div>
               </div>
            </div>
            <p>
               Create a new Java project called
               <code class="code">com.vogella.java.collections</code>. Also add a package with the same name.
               
               
            </p>
            <p>
               Create a Java class called
               <em class="wordasword">Server</em>
               with one String attribute called
               <span class="property">url</span>.
               
            </p>
            <p>
               
            </p><pre class="programlisting"><span class="hl-keyword">package</span> com.vogella.java.collections;

<span class="hl-keyword">public</span> <span class="hl-keyword">class</span> Server {
    <span class="hl-keyword">private</span> String url;
} </pre><p>
               
            </p>
            <p>
               Create getter and setter methods for this attribute using code
               generation capabilities of Eclipse. For this select
               <span class="guimenu">Source</span> &#8594; <span class="guisubmenu">Generate Getters and Setters</span>
               from the Eclipse menu.
               
            </p>
            <p>
               Create via Eclipse a constructor which gets a url as parameter. For
               this select
               <span class="guimenu">Source</span> &#8594; <span class="guisubmenu">Generate Constructor using Fields...</span>
               from the Eclipse menu.
               
            </p>
            <p>
               Type
               <em class="parameter"><code>main</code></em>
               in the class body and use code completion (<span class="keycap"><strong>Ctrl</strong></span>+<span class="keycap"><strong>Space</strong></span>) to generate a
               <code class="code">main</code>
               method.
               
            </p>
            <p>
               
            </p>
            <div class="mediaobject"><img src="images/xcollectioncodecompletion10.png.pagespeed.ic.L8XSXnUViW.png" alt="Code completion"></div>
            <p>
               
            </p>
            <p>
               In your
               <code class="code">main</code>
               method create a
               <code class="code">List</code>
               of type
               <code class="code">ArrayList</code>
               and add 3 objects of type
               <code class="code">Server</code>
               objects to this list.
               
            </p>
            <p>
               
            </p><pre class="programlisting"><span class="hl-keyword">public</span> <span class="hl-keyword">static</span> <span class="hl-keyword">void</span> main(String[] args) {
    List&lt;Server&gt; list = <span class="hl-keyword">new</span> ArrayList&lt;Server&gt;();
    list.add(<span class="hl-keyword">new</span> Server(<span class="hl-string" style="color:blue">"http://www.vogella.com"</span>));
    list.add(<span class="hl-keyword">new</span> Server(<span class="hl-string" style="color:blue">"http://www.google.com"</span>));
    list.add(<span class="hl-keyword">new</span> Server(<span class="hl-string" style="color:blue">"http://www.heise.de"</span>));
} </pre><p>
               
            </p>
            <p>
               Use code completion to create a
               <span class="guilabel">foreach</span>
               loop and write the
               <code class="code">toString</code>
               method to the console. Use code completion based on
               <code class="code">syso</code>
               for that.
               
            </p>
            <p>Run your program.</p>
            <p>
               Use Eclipse to create a
               <code class="code">toString</code>
               method based on the
               <span class="property">url</span>
               parameter and re-run your program again.
               
            </p>
         </div> 
         <script async="async" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
         
         <!-- Article - Before Support 336 x 280 -->
         <ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="3645921933"></ins>
         <script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="supportandlicense"></a>7.&nbsp;About this website
                     </h2>
                  </div>
               </div>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="thankyou"></a>7.1.&nbsp;Donate to support free tutorials
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  
                  	
               </p>
               <p>
                  		Please consider a contribution
                  	<a href="http://www.vogella.com/support.html">
                     			<img src="http://www.vogella.com/img/common/40x50xvogella-donate.png.pagespeed.ic.gMuY8kQC6X.png" width="40" height="50" alt="Support free tutorials" title="Support free tutorials" onclick="_gaq.push(['_trackEvent', 'Donations', 'clicked', 'Buttom tutorial in thank you']);"></a>
                  			if this article helped you. It will help to maintain our content and our Open Source activities.
                  	
               </p>
               <p>
                  
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="questions"></a>7.2.&nbsp;Questions and discussion
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  Writing and updating these tutorials is a lot of work.
                  If this
                  free community service was helpful,
                  you can support the cause by
                  giving
                  a tip
                  as well as reporting typos and factual errors.
                  
               </p>
               <p>
                  If you find errors in this tutorial, please notify me
                  (see the
                  <a class="ulink" href="#top" target="_top">top of the page</a>).
                  Please note that due to the high volume of feedback I
                  receive, I
                  cannot answer questions to your implementation. Ensure you
                  have read
                  the
                  <a class="ulink" href="http://www.vogella.com/faq.html" target="_top">vogella FAQ</a>
                  as
                  I don't respond to questions already answered there.
                  
               </p>
            </div>
            <div class="section">
               <div class="titlepage">
                  <div>
                     <div>
                        <h3 class="title"><a name="thankyou"></a>7.3.&nbsp;License for this tutorial and its code
                        </h3>
                     </div>
                  </div>
               </div>
               <p>
                  This tutorial is Open Content under the
                  <a class="ulink" href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en" target="_top">
                     CC BY-NC-SA 3.0 DE
                     </a>
                  license. Source code in this tutorial is distributed under the
                  <a class="ulink" href="https://www.eclipse.org/legal/epl-v10.html" target="_top">Eclipse Public License</a>.
                  See the
                  <a class="ulink" href="http://www.vogella.com/license.html" target="_top">vogella License</a>
                  page
                  for details on the terms of reuse.
                  
               </p>
            </div>
         </div>
         
         
         <div class="section">
            <div class="titlepage">
               <div>
                  <div>
                     <h2 class="title"><a name="resources"></a>8.&nbsp;Links and Literature
                     </h2>
                  </div>
               </div>
            </div>
            <p>
               
               <a class="ulink" href="http://java.sun.com/docs/codeconv/index.html" target="_top">
                  http://java.sun.com/docs/codeconv/index.html - Sun Coding Convention</a>.
               
            </p>
         </div><img src="http://vg04.met.vgwort.de/na/ad36f293b53046daa9783ae2681c5bd3" width="1" height="1" alt=""></div>
      
      
      
   <script pagespeed_no_defer="">//<![CDATA[
(function(){window.pagespeed=window.pagespeed||{};var f=window.pagespeed,h=function(e,a,c,b){this.c=e;this.a=a;this.b=c;this.d=b};f.beaconUrl="";
var k=function(e){var a=e.c,c=window.mod_pagespeed_start,b=Number(new Date)-c,a=a+(-1==a.indexOf("?")?"?":"&"),a=a+"ets="+("load"==e.a?"load:":"unload:"),a=a+b;if("beforeunload"!=e.a||!window.mod_pagespeed_loaded){a+="&r"+e.a+"=";if(window.performance){var b=window.performance.timing,d=b.navigationStart,g=b.requestStart,a=a+(b[e.a+"EventStart"]-d),a=a+("&nav="+(b.fetchStart-d)),a=a+("&dns="+(b.domainLookupEnd-b.domainLookupStart)),a=a+("&connect="+(b.connectEnd-b.connectStart)),a=a+("&req_start="+
(g-d)),a=a+("&ttfb="+(b.responseStart-g)),a=a+("&dwld="+(b.responseEnd-b.responseStart)),a=a+("&dom_c="+(b.domContentLoadedEventStart-d));window.performance.navigation&&(a+="&nt="+window.performance.navigation.type);d=-1;b.msFirstPaint?d=b.msFirstPaint:window.chrome&&window.chrome.loadTimes&&(d=Math.floor(1E3*window.chrome.loadTimes().firstPaintTime));d=d-g;0<=d&&(a+="&fp="+d)}else a+=b;f.getResourceTimingData&&window.parent==window&&(a+=f.getResourceTimingData());a+=window.parent!=window?"&ifr=1":
"&ifr=0";"load"==e.a&&(window.mod_pagespeed_loaded=!0,(b=window.mod_pagespeed_num_resources_prefetched)&&(a+="&nrp="+b),(b=window.mod_pagespeed_prefetch_start)&&(a+="&htmlAt="+(c-b)));f.panelLoader&&(c=f.panelLoader.getCsiTimingsString(),""!=c&&(a+="&b_csi="+c));f.criticalCss&&(c=f.criticalCss,a+="&ccis="+c.total_critical_inlined_size+"&cces="+c.total_original_external_size+"&ccos="+c.total_overhead_size+"&ccrl="+c.num_replaced_links+"&ccul="+c.num_unreplaced_links);""!=e.b&&(a+=e.b);document.referrer&&
(a+="&ref="+encodeURIComponent(document.referrer));a+="&url="+encodeURIComponent(e.d);f.beaconUrl=a;(new Image).src=a}};f.e=function(e,a,c,b){var d=new h(e,a,c,b);window.addEventListener?window.addEventListener(a,function(){k(d)},!1):window.attachEvent("on"+a,function(){k(d)})};f.addInstrumentationInit=f.e;})();

pagespeed.addInstrumentationInit('/mod_pagespeed_beacon', 'load', '', 'http://www.vogella.com/tutorials/JavaCollections/article.html');
//]]></script></body>
</html>

