<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>7.12 &#8212; Handling errors (assert, cerr, exit, and exceptions) &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 7.12 &#8212; Handling errors (assert, cerr, exit, and exceptions) Comments Feed" href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"50.144.0.132","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/712-handling-errors-assert-cerr-exit-and-exceptions\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='9.8 &#8212; Overloading the subscript operator' href='http://www.learncpp.com/cpp-tutorial/98-overloading-the-subscript-operator/' />
<link rel='next' title='9.9 &#8212; Overloading the parenthesis operator' href='http://www.learncpp.com/cpp-tutorial/99-overloading-the-parenthesis-operator/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=147' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="7.12 -- Handling errors (assert, cerr, exit, and exceptions)" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/" />
<meta property="og:description" content="When writing programs, it is almost inevitable that you will make mistakes. In this section, we will talk about the different kinds of errors that are made, and how they are commonly handled. Error..." />
<meta property="article:published_time" content="2007-10-22T22:45:23+00:00" />
<meta property="article:modified_time" content="2015-03-27T23:03:53+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-147 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-147 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-147">
						<div class="post-headline">		<h1>7.12 &#8212; Handling errors (assert, cerr, exit, and exceptions)</h1>
		</div>		<div class="post-byline">By Alex, on October 22nd, 2007</div>		<div class="post-bodycopy clearfix"><p>When writing programs, it is almost inevitable that you will make mistakes.  In this section, we will talk about the different kinds of errors that are made, and how they are commonly handled.</p>
<p>Errors fall into two categories: syntax and semantic errors.</p>
<p><strong>Syntax errors</strong></p>
<p>A syntax error occurs when you write a statement that is not valid according to the grammar of the C++ language.  For example:</p>
<pre>
if 5 &gt; 6 then write &quot;not equal&quot;;
</pre>
<p>Although this statement is understandable by humans, it is not valid according to C++ syntax.  The correct C++ statement would be:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc95d9f392075800" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc95d9f392075800-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc95d9f392075800-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc95d9f392075800-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">6</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc95d9f392075800-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"not equal"</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>Syntax errors are almost always caught by the compiler and are usually easy to fix.  Consequently, we typically don&#8217;t worry about them too much.</p>
<p><strong>Semantic errors</strong></p>
<p>A semantic error occurs when a statement is syntactically valid, but does not do what the programmer intended.  For example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96504235226121" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96504235226121-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96504235226121-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96504235226121-1"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">&lt;=</span><span class="crayon-cn">3</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96504235226121-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nCount</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" "</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>The programmer may have intended this statement to print <code>0 1 2</code>, but it actually prints <code>0 1 2 3</code>.</p>
<p>Semantic errors are not caught by the compiler, and can have any number of effects: they may not show up at all, cause the program to produce the wrong output, cause erratic behavior, corrupt data, or cause the program to crash.</p>
<p>It is largely the semantic errors that we are concerned with.</p>
<p>Semantic errors can occur in a number of ways.  One of the most common semantic errors is a logic error.  A <strong>logic error</strong> occurs when the programmer incorrectly codes the logic of a statement.  The above for statement example is a logic error.  Here is another example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96522228801369" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96522228801369-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96522228801369-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96522228801369-1"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-h"> </span><span class="crayon-o">&gt;=</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96522228801369-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"x is greater than 5"</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
<p>What happens when x is exactly 5?  The conditional expression evaluates to true, and the program prints &#8220;x is greater than 5&#8243;.  Logic errors can be easy or hard to locate, depending on the nature of the problem.</p>
<p>Another common semantic error is the violated assumption.  A <strong>violated assumption</strong> occurs when the programmer assumes that something will be either true or false, and it isn&#8217;t.  For example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc9652b433412006" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc9652b433412006-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9652b433412006-2">2</div><div class="crayon-num" data-line="crayon-555d78dc9652b433412006-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9652b433412006-4">4</div><div class="crayon-num" data-line="crayon-555d78dc9652b433412006-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9652b433412006-6">6</div><div class="crayon-num" data-line="crayon-555d78dc9652b433412006-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc9652b433412006-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Hello, world!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9652b433412006-2"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an index: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc9652b433412006-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9652b433412006-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc9652b433412006-5"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9652b433412006-6">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc9652b433412006-7"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Letter #"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p>See the potential problem here?  The programmer has assumed that the user will enter a value between 0 and the length of &#8220;Hello, world!&#8221;.  If the user enters a negative number, or a large number, the array index nIndex will be out of bounds.  In this case, since we are just reading a value, the program will probably print a garbage letter.  But in other cases, the program might corrupt other variables, the stack, or crash.</p>
<p><strong>Defensive programming</strong> is a form of program design that involves trying to identify areas where assumptions may be violated, and writing code that detects and handles any violation of those assumptions so that the program reacts in a predictable way when those violations do occur.</p>
<p><strong>Detecting assumption errors</strong></p>
<p>As it turns out, we can catch almost all assumptions that need to be checked in one of three locations:</p>
<ul>
<li>When a function has been called, the user may have passed the function parameters that are semantically meaningless.
<li>When a function returns, the return value may indicate that an error has occured.
<li>When program receives input (either from the user, or a file), the input may not be in the correct format.
</ul>
<p>Consequently, the following rules should be used when programming defensively:</p>
<ul>
<li>At the top of each function, check to make sure any parameters have appropriate values.
<li>After a function is called, check it&#8217;s return value (if any), and any other error reporting mechanisms, to see if an error occured.
<li>Validate any user input to make sure it meets the expected formatting or range criteria.
</ul>
<p>Let&#8217;s take a look at examples of each of these.</p>
<p>Problem: When a function is called, the user may have passed the function parameters that are semantically meaningless.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96534495205308" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96534495205308-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96534495205308-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96534495205308-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96534495205308-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96534495205308-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">PrintString</span><span class="crayon-sy">(</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96534495205308-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d78dc96534495205308-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96534495205308-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0007 seconds] -->
<p></p>
<p>Can you identify the assumption that may be violated?  The answer is that the user might pass in a NULL pointer instead of a valid C-style string.  If that happens, the program will crash.  Here&#8217;s the function again with code that checks to make sure the function parameter is non-NULL:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc9653a475497706" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc9653a475497706-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9653a475497706-2">2</div><div class="crayon-num" data-line="crayon-555d78dc9653a475497706-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9653a475497706-4">4</div><div class="crayon-num" data-line="crayon-555d78dc9653a475497706-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9653a475497706-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc9653a475497706-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">PrintString</span><span class="crayon-sy">(</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9653a475497706-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d78dc9653a475497706-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Only print if strString is non-null</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9653a475497706-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc9653a475497706-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9653a475497706-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>Problem: When a function returns, the return value may indicate that an error has occured.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96540747866127" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96540747866127-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96540747866127-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96540747866127-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96540747866127-1"><span class="crayon-c">// Declare an array of 10 integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96540747866127-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">panData</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">new</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc96540747866127-3"><span class="crayon-v">panData</span><span class="crayon-sy">[</span><span class="crayon-cn">5</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0008 seconds] -->
<p></p>
<p>Can you identify the assumption that may be violated?  The answer is that operator new (which actually calls a function to do the allocation) could fail if the user runs out of memory.  If that happens, panData will be set to NULL, and when we use the subscript operator on panData, the program will crash.  Here&#8217;s a new version with error checking:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96547222947956" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96547222947956-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96547222947956-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96547222947956-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96547222947956-4">4</div><div class="crayon-num" data-line="crayon-555d78dc96547222947956-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96547222947956-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96547222947956-1"><span class="crayon-c">// Delcare an array of 10 integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96547222947956-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">panData</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">new</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc96547222947956-3"><span class="crayon-c">// If something went wrong</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96547222947956-4"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">!</span><span class="crayon-v">panData</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc96547222947956-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">exit</span><span class="crayon-sy">(</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// exit the program with error code 2</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96547222947956-6"><span class="crayon-v">panData</span><span class="crayon-sy">[</span><span class="crayon-cn">5</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>Problem: When program receives input (either from the user, or a file), the input may not be in the correct format.  Here&#8217;s the sample program you saw previously:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc9654d973210188" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc9654d973210188-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9654d973210188-2">2</div><div class="crayon-num" data-line="crayon-555d78dc9654d973210188-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9654d973210188-4">4</div><div class="crayon-num" data-line="crayon-555d78dc9654d973210188-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9654d973210188-6">6</div><div class="crayon-num" data-line="crayon-555d78dc9654d973210188-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc9654d973210188-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Hello, world!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9654d973210188-2"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an index: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc9654d973210188-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9654d973210188-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc9654d973210188-5"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9654d973210188-6">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc9654d973210188-7"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Letter #"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p>And here&#8217;s the version that checks the user input to make sure it is valid:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96554283304112" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96554283304112-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96554283304112-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96554283304112-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96554283304112-4">4</div><div class="crayon-num" data-line="crayon-555d78dc96554283304112-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96554283304112-6">6</div><div class="crayon-num" data-line="crayon-555d78dc96554283304112-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96554283304112-8">8</div><div class="crayon-num" data-line="crayon-555d78dc96554283304112-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96554283304112-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96554283304112-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Hello, world!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96554283304112-2">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc96554283304112-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96554283304112-4"><span class="crayon-st">do</span></div><div class="crayon-line" id="crayon-555d78dc96554283304112-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96554283304112-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an index: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc96554283304112-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96554283304112-8"><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;=</span><span class="crayon-h"> </span><span class="crayon-e">strlen</span><span class="crayon-sy">(</span><span class="crayon-v">strHello</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc96554283304112-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96554283304112-10"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Letter #"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0022 seconds] -->
<p></p>
<p><strong>Handling assumption errors</strong></p>
<p>Now that you know where assumption errors typically occur, let&#8217;s finish up by talking about different ways to handle them when they do occur.  There is no best way to handle an error -- it really depends on the nature of the problem.</p>
<p>Here are some typical responses:</p>
<p>1) Quietly skip the code that depends on the assumption being valid:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc9655a204817581" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc9655a204817581-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9655a204817581-2">2</div><div class="crayon-num" data-line="crayon-555d78dc9655a204817581-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9655a204817581-4">4</div><div class="crayon-num" data-line="crayon-555d78dc9655a204817581-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9655a204817581-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc9655a204817581-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">PrintString</span><span class="crayon-sy">(</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9655a204817581-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d78dc9655a204817581-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Only print if strString is non-null</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9655a204817581-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc9655a204817581-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9655a204817581-6"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p></p>
<p>In the above example, if strString is null, we don&#8217;t print anything.  We have skipped the code that depends on strString being non-null.</p>
<p>2) If we are in a function, return an error code back to the caller and let the caller deal with the problem.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96561901102325" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96561901102325-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96561901102325-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96561901102325-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96561901102325-4">4</div><div class="crayon-num" data-line="crayon-555d78dc96561901102325-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96561901102325-6">6</div><div class="crayon-num" data-line="crayon-555d78dc96561901102325-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96561901102325-8">8</div><div class="crayon-num" data-line="crayon-555d78dc96561901102325-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96561901102325-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96561901102325-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">g_anArray</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// a global array of 10 characters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96561901102325-2">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc96561901102325-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetArrayValue</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96561901102325-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d78dc96561901102325-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// use if statement to detect violated assumption</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96561901102325-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">9</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc96561901102325-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// return error code to caller</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96561901102325-8">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc96561901102325-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">g_anArray</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96561901102325-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p>In this case, the function returns -1 if the user passes in an invalid index.</p>
<p>3) If we want to terminate the program immediately, the <b>exit</b> function can be used to return an error code to the operating system:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96567705322381" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96567705322381-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96567705322381-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96567705322381-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96567705322381-4">4</div><div class="crayon-num" data-line="crayon-555d78dc96567705322381-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96567705322381-6">6</div><div class="crayon-num" data-line="crayon-555d78dc96567705322381-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96567705322381-8">8</div><div class="crayon-num" data-line="crayon-555d78dc96567705322381-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96567705322381-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96567705322381-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">g_anArray</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// a global array of 10 characters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96567705322381-2">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc96567705322381-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetArrayValue</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96567705322381-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d78dc96567705322381-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// use if statement to detect violated assumption</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96567705322381-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">9</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc96567705322381-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-e">exit</span><span class="crayon-sy">(</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// terminate program and return error number 2 to OS</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96567705322381-8">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc96567705322381-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">g_anArray</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96567705322381-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0016 seconds] -->
<p></p>
<p>If the user enters an invalid index, this program will terminate immediately (with no error message) and pass error code 2 to the operating system.</p>
<p>4) If the user has entered invalid input, ask the user to enter the input again.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc9656e211732152" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc9656e211732152-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9656e211732152-2">2</div><div class="crayon-num" data-line="crayon-555d78dc9656e211732152-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9656e211732152-4">4</div><div class="crayon-num" data-line="crayon-555d78dc9656e211732152-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9656e211732152-6">6</div><div class="crayon-num" data-line="crayon-555d78dc9656e211732152-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9656e211732152-8">8</div><div class="crayon-num" data-line="crayon-555d78dc9656e211732152-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9656e211732152-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc9656e211732152-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Hello, world!"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9656e211732152-2">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc9656e211732152-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9656e211732152-4"><span class="crayon-st">do</span></div><div class="crayon-line" id="crayon-555d78dc9656e211732152-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9656e211732152-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Enter an index: "</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc9656e211732152-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cin</span><span class="crayon-h"> </span><span class="crayon-o">&gt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9656e211732152-8"><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;=</span><span class="crayon-h"> </span><span class="crayon-e">strlen</span><span class="crayon-sy">(</span><span class="crayon-v">strHello</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc9656e211732152-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9656e211732152-10"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Letter #"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0022 seconds] -->
<p></p>
<p>5) cerr is another mechanism that is meant specifically for printing error messages.  <strong>cerr</strong> is an output stream (just like cout) that is also defined in iostream.h.  Typically, cerr writes the error messages on the screen (just like cout), but it can also be individually redirected to a file.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc96574472218979" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc96574472218979-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96574472218979-2">2</div><div class="crayon-num" data-line="crayon-555d78dc96574472218979-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96574472218979-4">4</div><div class="crayon-num" data-line="crayon-555d78dc96574472218979-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96574472218979-6">6</div><div class="crayon-num" data-line="crayon-555d78dc96574472218979-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc96574472218979-8">8</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc96574472218979-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">PrintString</span><span class="crayon-sy">(</span><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96574472218979-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d78dc96574472218979-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Only print if strString is non-null</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96574472218979-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">strString</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc96574472218979-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strString</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96574472218979-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span></div><div class="crayon-line" id="crayon-555d78dc96574472218979-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">cerr</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"PrintString received a null parameter"</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc96574472218979-8"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0012 seconds] -->
<p></p>
<p>6) If working in some kind of graphical environment (eg. MFC or SDL), it is common to pop up a message box with an error code and then terminate the program.</p>
<p><strong>Assert</strong></p>
<p>Using a conditional statement to detect a violated assumption, along with printing an error message and terminating the program is such a common response to problems that C++ provides a shortcut method for doing this.  This shortcut is called an assert.</p>
<p>An <strong>assert statement</strong> is a preprocessor macro that evaluates a conditional expression.  If the conditional expression is true, the assert statement does nothing.  If the conditional expression evaluates to false, an error message is displayed and the program is terminated.  This error message contains the conditional expression that failed, along with the name of the code file and the line number of the assert.  This makes it very easy to tell not only what the problem was, but where in the code the problem occurred.  This can help with debugging efforts immensely.</p>
<p>The assert functionality lives in the cassert header, and is often used both to check that the parameters passed to a function are valid, and to check that the return value of a function call is valid.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc9657c607333256" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc9657c607333256-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9657c607333256-2">2</div><div class="crayon-num" data-line="crayon-555d78dc9657c607333256-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9657c607333256-4">4</div><div class="crayon-num" data-line="crayon-555d78dc9657c607333256-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9657c607333256-6">6</div><div class="crayon-num" data-line="crayon-555d78dc9657c607333256-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9657c607333256-8">8</div><div class="crayon-num" data-line="crayon-555d78dc9657c607333256-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc9657c607333256-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc9657c607333256-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">g_anArray</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// a global array of 10 characters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9657c607333256-2">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc9657c607333256-3"><span class="crayon-p">#include &lt;cassert&gt; // for assert()</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9657c607333256-4"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetArrayValue</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc9657c607333256-5"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9657c607333256-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// we're asserting that nIndex is between 0 and 9</span></div><div class="crayon-line" id="crayon-555d78dc9657c607333256-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">assert</span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">&amp;&amp;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-cn">9</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// this is line 7 in Test.cpp</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9657c607333256-8">&nbsp;</div><div class="crayon-line" id="crayon-555d78dc9657c607333256-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">g_anArray</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc9657c607333256-10"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0017 seconds] -->
<p></p>
<p>If the user calls GetValue(-3), the program prints the following message:</p>
<pre>
Assertion failed: nIndex &gt;= 0 &amp;&amp; nIndex &lt;=9, file C:VCProjectsTest.cpp, line 7
</pre>
<p>We strongly encourage you to use assert statements liberally throughout your code.</p>
<p><strong>Exceptions</strong></p>
<p>C++ provides one more method for detecting and handling errors known as exception handling.  The basic idea is that when an error occurs, it is &#8220;thrown&#8221;.  If the current function does not &#8220;catch&#8221; the error, the caller of the function has a chance to catch the error.  If the caller does not catch the error, the caller&#8217;s caller has a chance to catch the error.  The error progressively moves up the stack until it is either caught and handled, or until main() fails to handle the error.  If nobody handles the error, the program typically terminates with an exception error.</p>
<p>Exception handling is an advanced C++ topic, and we cover it in much detail in chapter 15 of this tutorial.</p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/713-command-line-arguments/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 7.13 -- Command line arguments</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter7" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/710-recursion/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 7.10 -- Recursion</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-147" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-147" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-147" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-147" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">14 comments to 7.12 &#8212; Handling errors (assert, cerr, exit, and exceptions)</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-6239">
		<div id="div-comment-6239" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abhishek</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-6239">
		January 18, 2008 at 8:04 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=6239#respond' onclick='return addComment.moveForm( "comment-6239", "6239", "respond", "147" )' aria-label='Reply to Abhishek'> &middot; Reply</a></span>		 
		</div>
		<p>ok</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-10273">
		<div id="div-comment-10273" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/610e617df852214cfe41e0914a4112a5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/610e617df852214cfe41e0914a4112a5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-10273">
		March 24, 2008 at 9:29 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=10273#respond' onclick='return addComment.moveForm( "comment-10273", "10273", "respond", "147" )' aria-label='Reply to Tom'> &middot; Reply</a></span>		 
		</div>
		<p>Again, very clear and concise.</p>
<p>Two small typos:</p>
<p>&#8220;Defensive programming is <b>a</b> form of program design that&#8230;&#8221;</p>
<p>&#8220;// <b>Delcare</b> an array of 10 integers&#8221;</p>
<p>Thanks!</p>
<p>[ No, thank you! -Alex ]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-18131">
		<div id="div-comment-18131" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2801ebb69cf34044b29bc09ded8bd1ec?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2801ebb69cf34044b29bc09ded8bd1ec?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Arjun</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-18131">
		June 3, 2008 at 1:59 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=18131#respond' onclick='return addComment.moveForm( "comment-18131", "18131", "respond", "147" )' aria-label='Reply to Arjun'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc99dad011874942" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc99dad011874942-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99dad011874942-2">2</div><div class="crayon-num" data-line="crayon-555d78dc99dad011874942-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99dad011874942-4">4</div><div class="crayon-num" data-line="crayon-555d78dc99dad011874942-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99dad011874942-6">6</div><div class="crayon-num" data-line="crayon-555d78dc99dad011874942-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99dad011874942-8">8</div><div class="crayon-num" data-line="crayon-555d78dc99dad011874942-9">9</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc99dad011874942-1"><span class="crayon-t">char</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Hello, world!"</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99dad011874942-2"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d78dc99dad011874942-3"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99dad011874942-4"><span class="crayon-st">do</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d78dc99dad011874942-5"><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99dad011874942-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&gt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d78dc99dad011874942-7"><span class="crayon-sy">}</span><span class="crayon-h"> </span><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">strlen</span><span class="crayon-sy">(</span><span class="crayon-v">strHello</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99dad011874942-8"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d78dc99dad011874942-9"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"Letter #"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" is "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">strHello</span><span class="crayon-sy">[</span><span class="crayon-v">nIndex</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span><span class="crayon-h"> </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0021 seconds] -->
<p></p>
<p>In this Example, Shouldn&#8217;t it be </p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc99db8114098300" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc99db8114098300-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc99db8114098300-1"><span class="crayon-st">while</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&gt;</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-h"> </span><span class="crayon-o">||</span><span class="crayon-h"> </span><span class="crayon-v">nIndex</span><span class="crayon-h"> </span><span class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span class="crayon-e">strlen</span><span class="crayon-sy">(</span><span class="crayon-v">strHello</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0006 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-60545">
		<div id="div-comment-60545" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d8449124a25e626bd85d8261fbbb963a?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d8449124a25e626bd85d8261fbbb963a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">anwaar</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-60545">
		May 11, 2009 at 5:15 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=60545#respond' onclick='return addComment.moveForm( "comment-60545", "60545", "respond", "147" )' aria-label='Reply to anwaar'> &middot; Reply</a></span>		 
		</div>
		<p>no arjun! ur while is just for to check validity of positive numbers within the bound of lenght of declared string, but other one was also to check the either user has also entered a negative number.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-64150">
		<div id="div-comment-64150" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/76ef53557a67cf0c34819164fd7e2717?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/76ef53557a67cf0c34819164fd7e2717?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.iroms55.webs.com' rel='external nofollow' class='url'>Michel</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-64150">
		July 11, 2009 at 9:24 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=64150#respond' onclick='return addComment.moveForm( "comment-64150", "64150", "respond", "147" )' aria-label='Reply to Michel'> &middot; Reply</a></span>		 
		</div>
		<p>On Visual Studio 2008 Professional Edition, when an error is created, it states all the information in the Error List including which file and which line in that file the error occured. Therefore, do you need to use the assert() function when you are using VS 08 Pro?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-64776">
		<div id="div-comment-64776" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/352d30aba50e66b679f4c820780f2d7c?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/352d30aba50e66b679f4c820780f2d7c?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://dustyghost.com' rel='external nofollow' class='url'>Dusty</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-64776">
		July 22, 2009 at 4:38 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=64776#respond' onclick='return addComment.moveForm( "comment-64776", "64776", "respond", "147" )' aria-label='Reply to Dusty'> &middot; Reply</a></span>		 
		</div>
		<p>To answer that question Michel, it&#8217;s good practice to put your own error handling in where ever possible.</p>
<p>The error handling can be used to put the errors into terms that the end user can understand, not just the programmer.</p>
<p>Error handling is not just good for debugging code, it&#8217;s also good to help point out errors in live programs being used by a client or user.</p>
<p>Alex THANK YOU FOR THIS ARTICLE!! I just sent it to a friend of mine who needed to see this, shall we say. ?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-64974">
		<div id="div-comment-64974" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3964cb63751c29a73b2d9b02b0a5573f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3964cb63751c29a73b2d9b02b0a5573f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Fred Schneider</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-64974">
		July 24, 2009 at 7:26 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=64974#respond' onclick='return addComment.moveForm( "comment-64974", "64974", "respond", "147" )' aria-label='Reply to Fred Schneider'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc99bfa663177299" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc99bfa663177299-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99bfa663177299-2">2</div><div class="crayon-num" data-line="crayon-555d78dc99bfa663177299-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99bfa663177299-4">4</div><div class="crayon-num" data-line="crayon-555d78dc99bfa663177299-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d78dc99bfa663177299-6">6</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc99bfa663177299-1"><span class="crayon-c">// Delcare an array of 10 integers</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99bfa663177299-2"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">panData</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">new</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">[</span><span class="crayon-cn">10</span><span class="crayon-sy">]</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d78dc99bfa663177299-3"><span class="crayon-c">// If something went wrong</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99bfa663177299-4"><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-o">!</span><span class="crayon-v">panData</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d78dc99bfa663177299-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">exit</span><span class="crayon-sy">(</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// exit the program with error code 2</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d78dc99bfa663177299-6"><span class="crayon-v">panData</span><span class="crayon-sy">[</span><span class="crayon-cn">5</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p></p>
<p>This example is extremely outdated (1993 or so).</p>
<p>Nowadays, new operators through a bad_alloc exception if it can&#8217;t allocate the memory.  So, it&#8217;s not necessary to check if panData==0 but exception handling should be implemented somewhere in your code.  If you don&#8217;t catch the error, and you don&#8217;t re-define the unexpected() or terminate() functions, your program will terminate anyways making the safety/correctness of the statement: panData[5]=3; irrelevant.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-66470">
		<div id="div-comment-66470" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-66470">
		August 17, 2009 at 6:28 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=66470#respond' onclick='return addComment.moveForm( "comment-66470", "66470", "respond", "147" )' aria-label='Reply to baldo'> &middot; Reply</a></span>		 
		</div>
		<p>You said: &#8220;<strong>cerr</strong> is an output stream (just like cout) that is also defined in iostream.h&#8221;. It is iostream or iostream.h?</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-91392">
		<div id="div-comment-91392" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f8830b6872829ad5cd49e7c98247dc4e?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f8830b6872829ad5cd49e7c98247dc4e?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Bob</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-91392">
		September 4, 2010 at 8:03 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=91392#respond' onclick='return addComment.moveForm( "comment-91392", "91392", "respond", "147" )' aria-label='Reply to Bob'> &middot; Reply</a></span>		 
		</div>
		<p>The actual file is obviously iostream.h, but when you include it it is </p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d78dc99a8c722658985" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d78dc99a8c722658985-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d78dc99a8c722658985-1"><span class="crayon-o">&lt;</span><span class="crayon-v">iostream</span><span class="crayon-o">&gt;</span><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p> You might wanna re-read the header file chapter.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-90624">
		<div id="div-comment-90624" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/5133cc6b13b0cd962b29f8fdec45bcb9?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/5133cc6b13b0cd962b29f8fdec45bcb9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-90624">
		August 20, 2010 at 2:15 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=90624#respond' onclick='return addComment.moveForm( "comment-90624", "90624", "respond", "147" )' aria-label='Reply to Tom'> &middot; Reply</a></span>		 
		</div>
		<p>If the user calls GetValue(-3), the program prints the following message:</p>
<p>Should be  GetArrayValue</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-95124">
		<div id="div-comment-95124" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">SWEngineer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-95124">
		January 23, 2011 at 3:28 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=95124#respond' onclick='return addComment.moveForm( "comment-95124", "95124", "respond", "147" )' aria-label='Reply to SWEngineer'> &middot; Reply</a></span>		 
		</div>
		<p>Thanks for the tutorial.</p>
<p>Shouldn&#8217;t &#8220;GetValue(-3)&#8221; here under &#8220;Assert&#8221; be &#8220;GetArrayValue(-3)&#8221;?</p>
<p>If the user calls GetValue(-3), the program prints the following message: &#8230;..</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-95331">
		<div id="div-comment-95331" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/976fc6c0b77af195f4427f5edeac36f5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">newUser</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-95331">
		April 14, 2011 at 5:56 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=95331#respond' onclick='return addComment.moveForm( "comment-95331", "95331", "respond", "147" )' aria-label='Reply to newUser'> &middot; Reply</a></span>		 
		</div>
		<p>I&#8217;m still wondering how a good assert should be written. Like should it be written a line above a for statement while copying the statement&#8217;s arguements? If this is correct, might we want to put this in the tutorial as a &#8220;best practices&#8221; while giving context to how it&#8217;s written?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-251053">
		<div id="div-comment-251053" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/541956ebf7b19923310cf86604b21819?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/541956ebf7b19923310cf86604b21819?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Alex</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-251053">
		January 2, 2015 at 7:21 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=251053#respond' onclick='return addComment.moveForm( "comment-251053", "251053", "respond", "147" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>I&#8217;m not sure if this only happens in more recent versions of C++ or something, but I&#8217;m unable to use the exit(int) function without #including stdlib.h</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-251599">
		<div id="div-comment-251599" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/dfca50e786584292ec33e51c61d4c01c?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/dfca50e786584292ec33e51c61d4c01c?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Samir</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#comment-251599">
		February 23, 2015 at 7:36 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/?replytocom=251599#respond' onclick='return addComment.moveForm( "comment-251599", "251599", "respond", "147" )' aria-label='Reply to Samir'> &middot; Reply</a></span>		 
		</div>
		<p>Hi everyone,</p>
<p>It looks like the first example contains logical error; the condition 5 &gt; 6 evaluates to false and the statement under if is not executed so the program does not print &quot;not equal&quot; although 5 is not equal 6. One value is not equal to the other one when it is either greater or less than the other so both cases needed to be checked for: (5 &gt; 6) || (5 &lt; 6), or simply ( 5 != 6).</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>19 &#43; 13 = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4OTE0OHR5bTdtZjVxZ3o3ZGJwYWozMW04MzI=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432189148" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='147' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="cf66803402" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="46"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/712-handling-errors-assert-cerr-exit-and-exceptions\/":147};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'147',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '147' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.788 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:19:08 -->

<!-- Compression = gzip -->
<!-- super cache -->

