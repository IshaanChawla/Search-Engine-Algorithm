<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>12.1 &#8212; Pointers and references to the base class of derived objects &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 12.1 &#8212; Pointers and references to the base class of derived objects Comments Feed" href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"210.245.103.70","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/121-pointers-and-references-to-the-base-class-of-derived-objects\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Break Time &#8212; Saint Petersburg' href='http://www.learncpp.com/breaktime/break-time-saint-petersburg/' />
<link rel='next' title='12.2 &#8212; Virtual functions and polymorphism' href='http://www.learncpp.com/cpp-tutorial/122-virtual-functions/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=179' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="12.1 -- Pointers and references to the base class of derived objects" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/" />
<meta property="og:description" content="In the previous chapter, you learned all about how to use inheritance to derive new classes from existing classes. In this chapter, we are going to focus on one of the most important and powerful a..." />
<meta property="article:published_time" content="2008-01-29T23:45:11+00:00" />
<meta property="article:modified_time" content="2008-01-29T23:45:11+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-179 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-179 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-179">
						<div class="post-headline">		<h1>12.1 &#8212; Pointers and references to the base class of derived objects</h1>
		</div>		<div class="post-byline">By Alex, on January 29th, 2008</div>		<div class="post-bodycopy clearfix"><p>In the previous chapter, you learned all about how to use inheritance to derive new classes from existing classes.  In this chapter, we are going to focus on one of the most important and powerful aspects of inheritance -- virtual functions.</p>
<p>But before we discuss what virtual functions are, let&#8217;s first set the table for why we need them.</p>
<p>In the chapter on <a href="http://www.learncpp.com/cpp-tutorial/113-order-of-construction-of-derived-classes/">construction of derived classes</a>, you learned that when you create a derived class, it is composed of multiple parts: one part for each inherited class, and a part for itself.</p>
<p>For example, here&#8217;s a simple case:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8ba5596900921" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-2">2</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-4">4</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-6">6</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-8">8</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-10">10</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-12">12</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-14">14</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-16">16</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-18">18</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-20">20</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-22">22</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-24">24</div><div class="crayon-num" data-line="crayon-555d737de8ba5596900921-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8ba5596900921-26">26</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8ba5596900921-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-3"><span class="crayon-m">protected</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nValue</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-6"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Base</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_nValue</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-11">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Base"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nValue</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-14"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-15">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-16"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Derived</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Base</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-17"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-18"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Base</span><span class="crayon-sy">(</span><span class="crayon-v">nValue</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-23">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Derived"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8ba5596900921-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetValueDoubled</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nValue</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8ba5596900921-26"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0035 seconds] -->
<p></p>
<p>When we create a Derived object, it contains a Base part (which is constructed first), and a Derived part (which is constructed second).  Remember that inheritance implies an is-a relationship between two classes.  Since a Derived is-a Base, it is appropriate that Derived contain a Base part of it.</p>
<p><strong>Pointers, references, and derived classes</strong></p>
<p>It should be fairly intuitive that we can set Derived pointers and references to Derived objects:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8bb7128582160" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-2">2</div><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-4">4</div><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-6">6</div><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-8">8</div><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-10">10</div><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-12">12</div><div class="crayon-num" data-line="crayon-555d737de8bb7128582160-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bb7128582160-14">14</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8bb7128582160-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bb7128582160-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived </span><span class="crayon-e">cDerived</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bb7128582160-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"cDerived is a "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDerived</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" and has value "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDerived</span><span class="crayon-sy">.</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-6">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bb7128582160-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Derived</span><span class="crayon-h"> </span><span class="crayon-v">&amp;rDerived </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cDerived</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"rDerived is a "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">rDerived</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" and has value "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">rDerived</span><span class="crayon-sy">.</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bb7128582160-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Derived</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pDerived</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cDerived</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bb7128582160-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pDerived is a "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pDerived</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" and has value "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pDerived</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-12">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bb7128582160-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bb7128582160-14"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0035 seconds] -->
<p></p>
<p>This produces the following output:</p>
<pre>
cDerived is a Derived and has value 5
rDerived is a Derived and has value 5
pDerived is a Derived and has value 5
</pre>
<p>However, since Derived has a Base part, a more interesting question is whether C++ will let us set a Base pointer or reference to a Derived object.  It turns out, we can!</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8bbe383893317" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-2">2</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-4">4</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-6">6</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-8">8</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-10">10</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-12">12</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bbe383893317-14">14</div><div class="crayon-num" data-line="crayon-555d737de8bbe383893317-15">15</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8bbe383893317-1"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Derived </span><span class="crayon-e">cDerived</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// These are both legal!</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Base</span><span class="crayon-h"> </span><span class="crayon-v">&amp;rBase </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cDerived</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Base</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pBase</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cDerived</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"cDerived is a "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDerived</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" and has value "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDerived</span><span class="crayon-sy">.</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"rBase is a "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">rBase</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" and has value "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">rBase</span><span class="crayon-sy">.</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pBase is a "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pBase</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" and has value "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pBase</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetValue</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bbe383893317-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bbe383893317-15"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0035 seconds] -->
<p></p>
<p>This produces the result:</p>
<pre>
cDerived is a Derived and has value 5
rBase is a Base and has value 5
pBase is a Base and has value 5
</pre>
<p>This result may not be quite what you were expecting at first!</p>
<p>It turns out that because rBase and pBase are a Base reference and pointer, they can only see members of Base (or any classes that Base inherited).  So even though Derived::GetName() is an override of Base::GetName(), the Base pointer/reference can not see Derived::GetName().  Consequently, they call Base::GetName(), which is why rBase and pBase report that they are a Base rather than a Derived.</p>
<p>Note that this also means it is not possible to call Derived::GetValueDoubled() using rBase or pBase.  They are unable to see anything in Derived.</p>
<p>Here&#8217;s another slightly more complex example that we&#8217;ll build on in the next lesson:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8bc6752394446" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-2">2</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-4">4</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-6">6</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-8">8</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-10">10</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-12">12</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-14">14</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-16">16</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-18">18</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-20">20</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-22">22</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-24">24</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-26">26</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-28">28</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-30">30</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-32">32</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-34">34</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-36">36</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-38">38</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-40">40</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-42">42</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-44">44</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-46">46</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-48">48</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-50">50</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-52">52</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-54">54</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bc6752394446-56">56</div><div class="crayon-num" data-line="crayon-555d737de8bc6752394446-57">57</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8bc6752394446-1"><span class="crayon-p">#include &lt;string&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-4"><span class="crayon-m">protected</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-6">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bc6752394446-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// We're making this constructor protected because</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// we don't want people creating Animal objects directly,</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// but we still want derived classes to be able to use it.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">m_strName</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-14">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bc6752394446-15"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_strName</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"???"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-18"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-20"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Cat</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-21"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-22"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cat</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-27">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Meow"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-29"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-30">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bc6752394446-31"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Dog</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-m">public</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-32"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-33"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-34"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Dog</span><span class="crayon-sy">(</span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-o">:</span><span class="crayon-h"> </span><span class="crayon-e">Animal</span><span class="crayon-sy">(</span><span class="crayon-v">strName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-36"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-38">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bc6752394446-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">const</span><span class="crayon-h"> </span><span class="crayon-t">char</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-s">"Woof"</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-40"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-41">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-42"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-43"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-44"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Cat </span><span class="crayon-e">cCat</span><span class="crayon-sy">(</span><span class="crayon-s">"Fred"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-45"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"cCat is named "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCat</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">", and it says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCat</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-46">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bc6752394446-47"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Dog </span><span class="crayon-e">cDog</span><span class="crayon-sy">(</span><span class="crayon-s">"Garbo"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-48"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"cDog is named "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDog</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">", and it says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDog</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-49">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-50"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Animal</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pAnimal</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cCat</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-51"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pAnimal is named "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pAnimal</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">", and it says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pAnimal</span><span class="crayon-o">-&gt;</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-52">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bc6752394446-53"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">Animal</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">pAnimal</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cDog</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-54"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"pAnimal is named "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pAnimal</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">", and it says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">pAnimal</span><span class="crayon-o">-&gt;</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-55">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bc6752394446-56"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bc6752394446-57"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0088 seconds] -->
<p></p>
<p>This produces the result:</p>
<pre>
cCat is named Fred, and it says Meow
cDog is named Garbo, and it says Woof
pAnimal is named Fred, and it says ???
pAnimal is named Garbo, and it says ???
</pre>
<p>We see the same issue here.  Because pAnimal is an Animal pointer, it can only see the Animal class.  Consequently, <code>pAnimal-&gt;Speak()</code> calls Animal::Speak() rather than the Dog::Speak() or Cat::Speak() function.</p>
<p><strong>Use for pointers and references to base classes</strong></p>
<p>Now you might be saying, &#8220;The above examples seem kind of silly.  Why would I set a pointer or reference to the base class of a derived object when I can just use the derived object?&#8221;  It turns out that there are quite a few good reasons.</p>
<p>First, let&#8217;s say you wanted to write a function that printed an animal&#8217;s name and sound.  Without using a pointer to a base class, you&#8217;d have to write it like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8bcf829984474" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8bcf829984474-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bcf829984474-2">2</div><div class="crayon-num" data-line="crayon-555d737de8bcf829984474-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bcf829984474-4">4</div><div class="crayon-num" data-line="crayon-555d737de8bcf829984474-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bcf829984474-6">6</div><div class="crayon-num" data-line="crayon-555d737de8bcf829984474-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bcf829984474-8">8</div><div class="crayon-num" data-line="crayon-555d737de8bcf829984474-9">9</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8bcf829984474-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">Report</span><span class="crayon-sy">(</span><span class="crayon-v">Cat</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cCat</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bcf829984474-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bcf829984474-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCat</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cCat</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bcf829984474-4"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d737de8bcf829984474-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bcf829984474-6"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">Report</span><span class="crayon-sy">(</span><span class="crayon-v">Dog</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cDog</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8bcf829984474-7"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bcf829984474-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDog</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDog</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bcf829984474-9"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0019 seconds] -->
<p></p>
<p>Not too difficult, but consider what would happen if we had 30 different animal types instead of 2.  You&#8217;d have to write 30 almost identical functions!   Plus, if you ever added a new type of animal, you&#8217;d have to write a new function for that one too.  This is a huge waste of time considering the only real difference is the type of the parameter.</p>
<p>However, because Cat and Dog are derived from Animal, Cat and Dog have an Animal part.  Therefore, it makes sense that we should be able to do something like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8bd6745177277" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8bd6745177277-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bd6745177277-2">2</div><div class="crayon-num" data-line="crayon-555d737de8bd6745177277-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bd6745177277-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8bd6745177277-1"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">Report</span><span class="crayon-sy">(</span><span class="crayon-v">Animal</span><span class="crayon-h"> </span><span class="crayon-v">&amp;rAnimal</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bd6745177277-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d737de8bd6745177277-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">rAnimal</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">rAnimal</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bd6745177277-4"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>This would let us pass in any class derived from Animal, even ones that we haven&#8217;t thought of yet!  Instead of one function per animal, we get one function that works with all classes derived from Animal!</p>
<p>The problem, is of course, that because cAnimal is an Animal reference, <code>cAnimal.Speak()</code> will call Animal::Speak() instead of the derived version of Speak().</p>
<p>Second, let&#8217;s say you had 3 cats and 3 dogs that you wanted to keep in an array for easy access.  Because arrays can only hold objects of one type, without a pointer or reference to a base class, you&#8217;d have to do it like this:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8bdd825766029" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8bdd825766029-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bdd825766029-2">2</div><div class="crayon-num" data-line="crayon-555d737de8bdd825766029-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bdd825766029-4">4</div><div class="crayon-num" data-line="crayon-555d737de8bdd825766029-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bdd825766029-6">6</div><div class="crayon-num" data-line="crayon-555d737de8bdd825766029-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8bdd825766029-8">8</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8bdd825766029-1"><span class="crayon-e">Cat </span><span class="crayon-v">acCats</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-e">Cat</span><span class="crayon-sy">(</span><span class="crayon-s">"Fred"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Cat</span><span class="crayon-sy">(</span><span class="crayon-s">"Tyson"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Cat</span><span class="crayon-sy">(</span><span class="crayon-s">"Zeke"</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bdd825766029-2"><span class="crayon-e">Dog </span><span class="crayon-v">acDogs</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-e">Dog</span><span class="crayon-sy">(</span><span class="crayon-s">"Garbo"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Dog</span><span class="crayon-sy">(</span><span class="crayon-s">"Pooky"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">Dog</span><span class="crayon-sy">(</span><span class="crayon-s">"Truffle"</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8bdd825766029-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bdd825766029-4"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8bdd825766029-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">acCats</span><span class="crayon-sy">[</span><span class="crayon-v">iii</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">acCats</span><span class="crayon-sy">[</span><span class="crayon-v">iii</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bdd825766029-6">&nbsp;</div><div class="crayon-line" id="crayon-555d737de8bdd825766029-7"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8bdd825766029-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">acDogs</span><span class="crayon-sy">[</span><span class="crayon-v">iii</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">acDogs</span><span class="crayon-sy">[</span><span class="crayon-v">iii</span><span class="crayon-sy">]</span><span class="crayon-sy">.</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0039 seconds] -->
<p></p>
<p>Now, consider what would happen if you had 30 different types of animals.  You&#8217;d need 30 arrays, one for each type of animal!</p>
<p>However, because both Cat and Dog are Animal, it makes sense that we should be able to do something like this:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737de8be4409374094" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737de8be4409374094-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8be4409374094-2">2</div><div class="crayon-num" data-line="crayon-555d737de8be4409374094-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8be4409374094-4">4</div><div class="crayon-num" data-line="crayon-555d737de8be4409374094-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737de8be4409374094-6">6</div><div class="crayon-num" data-line="crayon-555d737de8be4409374094-7">7</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737de8be4409374094-1"><span class="crayon-e">Cat </span><span class="crayon-e">cFred</span><span class="crayon-sy">(</span><span class="crayon-s">"Fred"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">cTyson</span><span class="crayon-sy">(</span><span class="crayon-s">"Tyson"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">cZeke</span><span class="crayon-sy">(</span><span class="crayon-s">"Zeke"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8be4409374094-2"><span class="crayon-e">Dog </span><span class="crayon-e">cGarbo</span><span class="crayon-sy">(</span><span class="crayon-s">"Garbo"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">cPooky</span><span class="crayon-sy">(</span><span class="crayon-s">"Pooky"</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">cTruffle</span><span class="crayon-sy">(</span><span class="crayon-s">"Truffle"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d737de8be4409374094-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8be4409374094-4"><span class="crayon-c">// Set up an array of pointers to animals, and set those pointers to our Cat and Dog objects</span></div><div class="crayon-line" id="crayon-555d737de8be4409374094-5"><span class="crayon-v">Animal</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-v">apcAnimals</span><span class="crayon-sy">[</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cFred</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cGarbo</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cPooky</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cTruffle</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cTyson</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">&amp;cZeke </span><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737de8be4409374094-6"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">6</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-v">iii</span><span class="crayon-o">++</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d737de8be4409374094-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">apcAnimals</span><span class="crayon-sy">[</span><span class="crayon-v">iii</span><span class="crayon-sy">]</span><span class="crayon-o">-&gt;</span><span class="crayon-e">GetName</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">" says "</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">apcAnimals</span><span class="crayon-sy">[</span><span class="crayon-v">iii</span><span class="crayon-sy">]</span><span class="crayon-o">-&gt;</span><span class="crayon-e">Speak</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0030 seconds] -->
<p></p>
<p>While this compiles and executes, unfortunately the fact that apcAnimals is a pointer to an Animal means that <code>apcAnimals[iii]-&gt;Speak()</code> will call Animal::Speak() instead of the proper derived class version of Speak().</p>
<p>Although both of these techniques could save us a lot of time and energy, they have the same problem.  The pointer or reference to the base class calls the base version of the function rather than the derived version.  If only there was some way to make those base pointers call the derived version of a function instead of the base version&#8230;</p>
<p>Want to take a guess what virtual functions are for? <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/122-virtual-functions/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 12.2 -- Virtual functions</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter12" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/118-virtual-base-classes/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 11.8 -- Virtual base classes</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-179" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-179" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-179" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-179" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">24 comments to 12.1 &#8212; Pointers and references to the base class of derived objects</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-17589">
		<div id="div-comment-17589" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/84dbbe3f8e2a74428021596d36a362c5?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/84dbbe3f8e2a74428021596d36a362c5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Nassos Katsadim</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-17589">
		May 26, 2008 at 12:42 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=17589#respond' onclick='return addComment.moveForm( "comment-17589", "17589", "respond", "179" )' aria-label='Reply to Nassos Katsadim'> &middot; Reply</a></span>		 
		</div>
		<p>Thank you for this tutorial. This is a fantastic prephase for understanding how late binding and polymorphism works</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-23052">
		<div id="div-comment-23052" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/43d1ef868eba221c26cc7d6b9bafc546?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/43d1ef868eba221c26cc7d6b9bafc546?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ben</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-23052">
		August 7, 2008 at 4:31 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=23052#respond' onclick='return addComment.moveForm( "comment-23052", "23052", "respond", "179" )' aria-label='Reply to Ben'> &middot; Reply</a></span>		 
		</div>
		<p>In the big example above &#8220;Use for pointers and references to base classes&#8221; (The one with the Dog and the Cat), you got this snippet of code:</p>
<p>  &#8230;<br />
  Animal* pAnimal = &amp;cCat;<br />
  std::cout &lt;&lt; &quot;pAnimal is named &quot; &lt;&lt; pAnimal-&gt;GetName()<br />
            &lt;&lt; &quot; and it says &quot; &lt;&lt; pAnimal-&gt;Speak()<br />
            &lt;&lt; std::endl;</p>
<p>  Animal* pAnimal = &amp;cDog;<br />
  &#8230;<br />
<!--formatted--><br />
So pAnimal is declared twice. The second declaration should be changed to:<br />
pAnimal = &cDog;</p>
<p>Ben</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-23054">
		<div id="div-comment-23054" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/43d1ef868eba221c26cc7d6b9bafc546?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/43d1ef868eba221c26cc7d6b9bafc546?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ben</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-23054">
		August 7, 2008 at 4:33 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=23054#respond' onclick='return addComment.moveForm( "comment-23054", "23054", "respond", "179" )' aria-label='Reply to Ben'> &middot; Reply</a></span>		 
		</div>
		<p>P.S.: I wrapped code tags around my code, but they were somehow removed.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-34058">
		<div id="div-comment-34058" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/5bce745218b9872c6e51d55c2682f54e?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/5bce745218b9872c6e51d55c2682f54e?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Kinten</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-34058">
		December 9, 2008 at 1:35 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=34058#respond' onclick='return addComment.moveForm( "comment-34058", "34058", "respond", "179" )' aria-label='Reply to Kinten'> &middot; Reply</a></span>		 
		</div>
		<p>Everyting ok, butttt!, you can&#8217;t call a cat &#8220;tyson&#8221;!! that&#8217;s a dog name :[</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-47127">
		<div id="div-comment-47127" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/b672696b1dc9f61706756156eb708d26?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/b672696b1dc9f61706756156eb708d26?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">DaJones</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-47127">
		February 25, 2009 at 12:41 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=47127#respond' onclick='return addComment.moveForm( "comment-47127", "47127", "respond", "179" )' aria-label='Reply to DaJones'> &middot; Reply</a></span>		 
		</div>
		<p>&#8220;So even though Derived::GetName() has overridden Base::GetName(), the Base pointer/reference can not see Derived::GetName().&#8221;</p>
<p>In the example you&#8217;re talking about (the topmost code) Derived::GetName() has **hidden** Base::GetName() and not **overriden** it.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-65236">
		<div id="div-comment-65236" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/352d30aba50e66b679f4c820780f2d7c?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/352d30aba50e66b679f4c820780f2d7c?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://dustyghost.com' rel='external nofollow' class='url'>Dusty</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-65236">
		July 29, 2009 at 4:49 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=65236#respond' onclick='return addComment.moveForm( "comment-65236", "65236", "respond", "179" )' aria-label='Reply to Dusty'> &middot; Reply</a></span>		 
		</div>
		<p>Great stuff!! Took me a while to get it, but I&#8217;m there I now.</p>
<p>I think you need to edit that last example a bit maybe?</p>
<p>you missed out the<br />
<code> #include &lt;iostream&gt; <!--formatted--></code></p>
<p>and the<br />
<code>using namespace::std;</code><br />
after the int main()</p>
<p>Petty things I know. <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-68983">
		<div id="div-comment-68983" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4f10e210be3d65ff2c867bea8b51ffa4?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4f10e210be3d65ff2c867bea8b51ffa4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Wei</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-68983">
		September 24, 2009 at 2:06 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=68983#respond' onclick='return addComment.moveForm( "comment-68983", "68983", "respond", "179" )' aria-label='Reply to Wei'> &middot; Reply</a></span>		 
		</div>
		<p>This is a great website and the contents here are pretty good for studying C++.<br />
As a graduate student in Computer Science, I am very thankful to Alex. This is great!!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-73809">
		<div id="div-comment-73809" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/e6b8651d5d193a2a8bcd59e1bfef1608?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/e6b8651d5d193a2a8bcd59e1bfef1608?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://rokonz.webs.com' rel='external nofollow' class='url'>Bazlur Rahman</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-73809">
		December 7, 2009 at 11:14 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=73809#respond' onclick='return addComment.moveForm( "comment-73809", "73809", "respond", "179" )' aria-label='Reply to Bazlur Rahman'> &middot; Reply</a></span>		 
		</div>
		<p>I think this is the best tutorial whatever I have read &#8230;.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-76435">
		<div id="div-comment-76435" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a850576d92c34a71c99d9a40bb9886fe?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a850576d92c34a71c99d9a40bb9886fe?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://nosite.com' rel='external nofollow' class='url'>Rahul yadav</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-76435">
		January 14, 2010 at 6:46 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=76435#respond' onclick='return addComment.moveForm( "comment-76435", "76435", "respond", "179" )' aria-label='Reply to Rahul yadav'> &middot; Reply</a></span>		 
		</div>
		<p>This is one of the best article I found on the internet for the need of base class pointer or references for objects. It is easy to understand the virtual function mechanism and the syntax but really painful to udnerstand the need when we can achieve interclass polymorphism using the derived class object.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-76437">
		<div id="div-comment-76437" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a850576d92c34a71c99d9a40bb9886fe?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a850576d92c34a71c99d9a40bb9886fe?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://nosite.com' rel='external nofollow' class='url'>Rahul yadav</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-76437">
		January 14, 2010 at 6:58 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=76437#respond' onclick='return addComment.moveForm( "comment-76437", "76437", "respond", "179" )' aria-label='Reply to Rahul yadav'> &middot; Reply</a></span>		 
		</div>
		<p>[code]<br />
This is one of the best article I found on the internet for the need of base class pointer or references for objects. It is easy to understand the virtual function mechanism and the syntax but really painful to udnerstand the need when we can achieve interclass polymorphism using the derived class object.</p>
<p>[code]</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-80838">
		<div id="div-comment-80838" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/9185d3a52d52d4e5ffab2160e7d1ace6?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/9185d3a52d52d4e5ffab2160e7d1ace6?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Deepak</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-80838">
		March 18, 2010 at 1:52 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=80838#respond' onclick='return addComment.moveForm( "comment-80838", "80838", "respond", "179" )' aria-label='Reply to Deepak'> &middot; Reply</a></span>		 
		</div>
		<p>I have no word for this site , thanks alot for such a nice tutorial.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-88842">
		<div id="div-comment-88842" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/fe43713f6c825dd103c9480ba6dd9d35?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/fe43713f6c825dd103c9480ba6dd9d35?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Biraj</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-88842">
		July 20, 2010 at 11:31 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=88842#respond' onclick='return addComment.moveForm( "comment-88842", "88842", "respond", "179" )' aria-label='Reply to Biraj'> &middot; Reply</a></span>		 
		</div>
		<p>So far the Best Website to understand C++ &#8230;Great work done by Alex  !!!! Thanks a lot it helps a lot in understanding C++ in depth &#8230;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-90783">
		<div id="div-comment-90783" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/7e87614fd0537166873b4d56ef6f01c2?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/7e87614fd0537166873b4d56ef6f01c2?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">saini</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-90783">
		August 24, 2010 at 12:28 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=90783#respond' onclick='return addComment.moveForm( "comment-90783", "90783", "respond", "179" )' aria-label='Reply to saini'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d737dec1ae044189438" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d737dec1ae044189438-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737dec1ae044189438-2">2</div><div class="crayon-num" data-line="crayon-555d737dec1ae044189438-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d737dec1ae044189438-4">4</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d737dec1ae044189438-1"><span class="crayon-h"> </span><span class="crayon-e">HI </span><span class="crayon-e">Alex</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737dec1ae044189438-2"><span class="crayon-e">you </span><span class="crayon-i">said</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-e">base </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">pointer </span><span class="crayon-e">can </span><span class="crayon-e">point </span><span class="crayon-e">derived </span><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-t">object</span><span class="crayon-sy">,</span><span class="crayon-i">how</span><span class="crayon-h"> </span><span class="crayon-sy">?</span></div><div class="crayon-line" id="crayon-555d737dec1ae044189438-3"><span class="crayon-e">please </span><span class="crayon-e">explain </span><span class="crayon-v">me</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d737dec1ae044189438-4"><span class="crayon-st">And</span><span class="crayon-h"> </span><span class="crayon-e">thanks </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">your </span><span class="crayon-e">great </span><span class="crayon-v">tutorial</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0011 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-95155">
		<div id="div-comment-95155" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f8f9403c2858fa98b93a6181aa066e2f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f8f9403c2858fa98b93a6181aa066e2f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">shivamgarg100</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-95155">
		February 5, 2011 at 9:46 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=95155#respond' onclick='return addComment.moveForm( "comment-95155", "95155", "respond", "179" )' aria-label='Reply to shivamgarg100'> &middot; Reply</a></span>		 
		</div>
		<p>what does this mean can anyone eloborate<br />
Derived &amp;rDerived = cDerived;<br />
	    cout &lt;&lt; &quot;rDerived is a &quot; &lt;&lt; rDerived.GetName() &lt;&lt; &quot; and has value &quot; &lt;&lt; rDerived.GetValue() &lt;&lt; endl;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-95156">
		<div id="div-comment-95156" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f8f9403c2858fa98b93a6181aa066e2f?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f8f9403c2858fa98b93a6181aa066e2f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">shivamgarg100</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-95156">
		February 5, 2011 at 9:57 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=95156#respond' onclick='return addComment.moveForm( "comment-95156", "95156", "respond", "179" )' aria-label='Reply to shivamgarg100'> &middot; Reply</a></span>		 
		</div>
		<p>okay, the prob got clear!!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-96040">
		<div id="div-comment-96040" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/278427af4f0cf01029be5a78f97d2603?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/278427af4f0cf01029be5a78f97d2603?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">pshetty</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-96040">
		September 19, 2011 at 5:53 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=96040#respond' onclick='return addComment.moveForm( "comment-96040", "96040", "respond", "179" )' aria-label='Reply to pshetty'> &middot; Reply</a></span>		 
		</div>
		<p>great tutorial alex&#8230;wish you many more newcastles <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":-)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-97311">
		<div id="div-comment-97311" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/65ebe8d848387bae0916fccd4b9e3fe5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/65ebe8d848387bae0916fccd4b9e3fe5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">hfs</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-97311">
		May 2, 2012 at 2:31 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=97311#respond' onclick='return addComment.moveForm( "comment-97311", "97311", "respond", "179" )' aria-label='Reply to hfs'> &middot; Reply</a></span>		 
		</div>
		<p>I am enjoying every bit of this tutorial. it contains everything in which i always used to  stuck while programming in C++.<br />
Thanks a lot</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-97746">
		<div id="div-comment-97746" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/b77321e1411823d683fe4b6036fc28ee?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/b77321e1411823d683fe4b6036fc28ee?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">krish</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-97746">
		August 20, 2012 at 6:16 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=97746#respond' onclick='return addComment.moveForm( "comment-97746", "97746", "respond", "179" )' aria-label='Reply to krish'> &middot; Reply</a></span>		 
		</div>
		<p>#include<br />
#include<br />
#include</p>
<p>class Animal<br />
{<br />
protected:<br />
    std::string m_strName;</p>
<p>   Animal(std::string strName)<br />
        : m_strName(strName)<br />
    {<br />
    }</p>
<p>public:<br />
    std::string GetName() { return m_strName; }<br />
    const char* Speak() { return &#8220;???&#8221;; }<br />
};</p>
<p>class Cat: public Animal<br />
{<br />
public:<br />
    Cat(std::string strName)<br />
        : Animal(strName)<br />
    {<br />
    }</p>
<p>    const char* Speak() { return &#8220;Meow&#8221;; }<br />
};</p>
<p>int main()<br />
{<br />
 Cat cCat(&#8220;Fred&#8221;);</p>
<p>   Report(CCat);<br />
}<br />
  void Report(Cat &amp;cCat)<br />
    {<br />
        using namespace std;<br />
    cout &lt;&lt; cCat.GetName() &lt;&lt; &quot; says &quot; &lt;&lt; cCat.Speak() &lt;&lt; endl;<br />
    }<br />
how should i call report() and wt parameters need pass at main&#039;s report()&#8230;&#8230;&#8230;.plz&#8230;&#8230;&#8230;&#8230;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-98047">
		<div id="div-comment-98047" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2618e5347d3c9f43f4b0cec86200ff6e?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2618e5347d3c9f43f4b0cec86200ff6e?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">prakash</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-98047">
		December 25, 2012 at 7:20 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=98047#respond' onclick='return addComment.moveForm( "comment-98047", "98047", "respond", "179" )' aria-label='Reply to prakash'> &middot; Reply</a></span>		 
		</div>
		<p>Alex,</p>
<p>some correction needed on this page.<br />
Replace:</p>
<p>    Animal *pAnimal = &amp;cCat;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
<p>    Animal *pAnimal = &amp;cDog;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
<p>with:</p>
<p>    Animal *pAnimal = &amp;cCat;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
<p>    pAnimal = &amp;cDog; // *pAnimal already defined.<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-98218">
		<div id="div-comment-98218" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/852cda50c1ede23d31f56b65851cf95f?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/852cda50c1ede23d31f56b65851cf95f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">HJ</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-98218">
		March 4, 2013 at 10:32 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=98218#respond' onclick='return addComment.moveForm( "comment-98218", "98218", "respond", "179" )' aria-label='Reply to HJ'> &middot; Reply</a></span>		 
		</div>
		<p>Hmm&#8230;Alex, I am speechless. I am relearning C++ again. Most of the stuffs here, I just took them upstairs over a period of coding but never knew why things were so. I thank you so much for clarity and simplicity. You have done more than a professor would do. Thanks</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-116388">
		<div id="div-comment-116388" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/85a77d2590fcdf46d5d78d24075e67a9?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/85a77d2590fcdf46d5d78d24075e67a9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">pranesh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-116388">
		January 6, 2014 at 4:43 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=116388#respond' onclick='return addComment.moveForm( "comment-116388", "116388", "respond", "179" )' aria-label='Reply to pranesh'> &middot; Reply</a></span>		 
		</div>
		<p>In the animal example, the snippet down here says that since panimal is an animal pointer and so it can only see inside animal then how come it prints the name of cat as fred but prints speaks as &#8216;???&#8217;.please expain me.</p>
<p>int main()<br />
{<br />
    Cat cCat(&#8220;Fred&#8221;);<br />
    cout &lt;&lt; &quot;cCat is named &quot; &lt;&lt; cCat.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cCat.Speak() &lt;&lt; endl;</p>
<p>    Dog cDog(&quot;Garbo&quot;);<br />
    cout &lt;&lt; &quot;cDog is named &quot; &lt;&lt; cDog.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cDog.Speak() &lt;&lt; endl;</p>
<p>    Animal *pAnimal = &amp;cCat;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
<p>    Animal *pAnimal = &amp;cDog;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
<p>    return 0;<br />
}<br />
This produces the result:</p>
<p>cCat is named Fred, and it says Meow<br />
cDog is named Garbo, and it says Woof<br />
pAnimal is named Fred, and it says ???<br />
pAnimal is named Garbo, and it says ???</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-124197">
		<div id="div-comment-124197" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2616c31c98686cb2c98b7764a67cce00?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2616c31c98686cb2c98b7764a67cce00?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.ictvpn.net' rel='external nofollow' class='url'>ict_ifycent2</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-124197">
		February 10, 2014 at 4:49 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=124197#respond' onclick='return addComment.moveForm( "comment-124197", "124197", "respond", "179" )' aria-label='Reply to ict_ifycent2'> &middot; Reply</a></span>		 
		</div>
		<p>or copy dis below:&#8230;</p>
<p>int main()<br />
{<br />
    Cat cCat(&#8220;Fred&#8221;);<br />
    cout &lt;&lt; &quot;cCat is named &quot; &lt;&lt; cCat.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cCat.Speak() &lt;&lt; endl;</p>
<p>    Dog cDog(&quot;Garbo&quot;);<br />
    cout &lt;&lt; &quot;cDog is named &quot; &lt;&lt; cDog.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cDog.Speak() &lt;&lt; endl;</p>
<p>	Bird cbird(&quot;Dove&quot;);<br />
	cout &lt;&lt; &quot;cBird is named &quot; &lt;&lt; cbird.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cbird.Speak() &lt;&lt; endl;</p>
<p>    Animal *pAnimal = &amp;cCat;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;</p>
<p>    Animal *pAnimal2 = &amp;cDog;<br />
    cout &lt;&lt; &quot;pAnimal is named &quot; &lt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;Speak() &lt;&lt; endl;<br />
	cin.get();<br />
    return 0;<br />
}</p>
<p>thanks alot Mr.alex</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-251904">
		<div id="div-comment-251904" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/2cf3231d504dbc61f512dbea3d826a2f?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/2cf3231d504dbc61f512dbea3d826a2f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">thang</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-251904">
		March 23, 2015 at 1:48 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=251904#respond' onclick='return addComment.moveForm( "comment-251904", "251904", "respond", "179" )' aria-label='Reply to thang'> &middot; Reply</a></span>		 
		</div>
		<p>i use VS2010, copied and pasted:<br />
#include &lt;string&gt;<br />
class Animal<br />
{<br />
protected:<br />
&nbsp;&nbsp;&nbsp;&nbsp;std::string m_strName;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;// We&#8217;re making this constructor protected because<br />
&nbsp;&nbsp;&nbsp;&nbsp;// we don&#8217;t want people creating Animal objects directly,<br />
&nbsp;&nbsp;&nbsp;&nbsp;// but we still want derived classes to be able to use it.<br />
&nbsp;&nbsp;&nbsp;&nbsp;Animal(std::string strName)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: m_strName(strName)<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>public:<br />
&nbsp;&nbsp;&nbsp;&nbsp;std::string GetName() { return m_strName; }<br />
&nbsp;&nbsp;&nbsp;&nbsp;const char* Speak() { return &quot;???&quot;; }<br />
};</p>
<p>class Cat: public Animal<br />
{<br />
public:<br />
&nbsp;&nbsp;&nbsp;&nbsp;Cat(std::string strName)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: Animal(strName)<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;const char* Speak() { return &quot;Meow&quot;; }<br />
};</p>
<p>class Dog: public Animal<br />
{<br />
public:<br />
&nbsp;&nbsp;&nbsp;&nbsp;Dog(std::string strName)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: Animal(strName)<br />
&nbsp;&nbsp;&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;const char* Speak() { return &quot;Woof&quot;; }<br />
};</p>
<p>int main()<br />
{<br />
&nbsp;&nbsp;&nbsp;&nbsp;Cat cCat(&quot;Fred&quot;);<br />
&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt; &quot;cCat is named &quot; &lt;&lt; cCat.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cCat.Speak() &lt;&lt; endl;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dog cDog(&quot;Garbo&quot;);<br />
&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt; &quot;cDog is named &quot; &lt;&lt; cDog.GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; cDog.Speak() &lt;&lt; endl;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Animal *pAnimal = &amp;cCat;<br />
&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt; &quot;pAnimal is named &quot; &lt;&lt; pAnimal-&gt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; pAnimal-&gt;Speak() &lt;&lt; endl;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Animal *pAnimal = &amp;cDog;<br />
&nbsp;&nbsp;&nbsp;&nbsp;cout &lt;&lt; &quot;pAnimal is named &quot; &lt;&lt; pAnimal-&gt;GetName() &lt;&lt; &quot;, and it says &quot; &lt;&lt; pAnimal-&gt;Speak() &lt;&lt; endl;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<br />
}</p>
<p>But when i tried build, its showed errors like:<br />
Error&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;error C2679: binary &#8216;&lt;&lt;&#8216; : no operator found which takes a right-hand operand of type &#8216;std::string&#8217; (or there is no acceptable conversion)&nbsp;&nbsp;&nbsp;&nbsp;c:\users\haminh\documents\visual studio 2010\projects\1\1\1.cpp&nbsp;&nbsp;&nbsp;&nbsp;48&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;1</p>
<p>How can i fix this issue, thanks!</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-252281">
		<div id="div-comment-252281" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/19ccec347d22b7942c97599d851224af?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/19ccec347d22b7942c97599d851224af?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">anonymous</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#comment-252281">
		April 28, 2015 at 12:59 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/?replytocom=252281#respond' onclick='return addComment.moveForm( "comment-252281", "252281", "respond", "179" )' aria-label='Reply to anonymous'> &middot; Reply</a></span>		 
		</div>
		<p>The best tutorial I have ever read and not just for programming. LearnCPP is a hell of a good work!</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>3 &#215; 4 = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4Nzc3NHR5bTdtZjVxZ3o3ZGJwYWozMW04MTI=" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432187774" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='179' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="cd2ed94a25" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="70"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/121-pointers-and-references-to-the-base-class-of-derived-objects\/":179};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/121-pointers-and-references-to-the-base-class-of-derived-objects/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'179',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '179' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.794 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 21:56:14 -->

<!-- Compression = gzip -->
<!-- super cache -->

