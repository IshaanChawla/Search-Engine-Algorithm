<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>8.5 &#8212; Constructors &laquo; Learn C++</title>
	<link rel="shortcut icon" href="http://www.learncpp.com/blog/wp-content/ata-images/learncpp.ico" />
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="http://www.learncpp.com/blog/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Feed" href="http://www.learncpp.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; Comments Feed" href="http://www.learncpp.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Learn C++ &raquo; 8.5 &#8212; Constructors Comments Feed" href="http://www.learncpp.com/cpp-tutorial/85-constructors/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.learncpp.com\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='crayon-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/css/min/crayon.min.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-theme-familiar-learncppcom-css'  href='http://www.learncpp.com/blog/wp-content/uploads/crayon-syntax-highlighter/themes/familiar-learncppcom/familiar-learncppcom.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=2.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='http://www.learncpp.com/blog/wp-content/plugins/jetpack/css/jetpack.css?ver=3.5.3' type='text/css' media='all' />
<!-- This site uses the Google Analytics by Yoast plugin v5.4.2 - Universal disabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">

	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-2173612-1']);
	_gaq.push(['_gat._forceSSL']);
	_gaq.push(['_trackPageview']);

	(function () {
		var ga = document.createElement('script');
		ga.type = 'text/javascript';
		ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0];
		s.parentNode.insertBefore(ga, s);
	})();

</script>
<!-- / Google Analytics by Yoast -->
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery.js?ver=1.11.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxCheckClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"12738d6e92"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/checkclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var AjaxUpdateClicks = {"ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","nonce":"441c3b4826"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/updateclicks.js?ver=4.2.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.7.1","is_admin":"0","ajaxurl":"http:\/\/www.learncpp.com\/blog\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/crayon-syntax-highlighter/js/min/crayon.min.js?ver=2.7.1'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var clientcfmonitor = {"client_ip":"103.243.226.101","clickcount":"8","bannedperiod":"1","preurl":"http:\/\/www.learncpp.com\/blog\/wp-content\/plugins\/adsense-click-fraud-monitoring\/clickupdate.php","firstclickdate":[[""],[""]],"updatedVisitCount":"0","isblockedcount":"0","customclass":"cf_monitor","firstclick":"false","disablead":"false","currentURL":"\/cpp-tutorial\/85-constructors\/"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/adsense-click-fraud-monitoring/js/check_min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/themes/atahualpa/js/DD_roundies.js?ver=0.0.2a'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.learncpp.com/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.learncpp.com/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='8.4 &#8212; Access functions and encapsulation' href='http://www.learncpp.com/cpp-tutorial/84-access-functions-and-encapsulation/' />
<link rel='next' title='8.6 &#8212; Destructors' href='http://www.learncpp.com/cpp-tutorial/86-destructors/' />
<link rel='canonical' href='http://www.learncpp.com/cpp-tutorial/85-constructors/' />
<link rel='shortlink' href='http://www.learncpp.com/?p=128' />
<script type="text/javascript">
    window._mNHandle = window._mNHandle || {};
    window._mNHandle.queue = window._mNHandle.queue || [];
    medianet_versionId = "121199"; 
    (function() {
        var sct = document.createElement("script"),
        sctHl = document.getElementsByTagName("script")[0],
        isSSL = 'https:' == document.location.protocol;
        sct.type = "text/javascript";
        sct.src = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/dmedianet.js?cid=8CUIE2148' + (isSSL ? '&https=1' : '')+'';
        sct.async = "async";
        sctHl.parentNode.insertBefore(sct, sctHl);
    })();
</script>
<!-- wpSolution Code -->
        <script type="text/javascript">
            function wpSolutionToggle(solution, link, showtext, hidetext) {
                if (solution.style.display != 'none') {
                    solution.style.display = 'none';
                    link.innerHTML = showtext;
                    link.className = 'solution_link_show';
                } else {
                    solution.style.display = 'block';
                    link.innerHTML = hidetext;
                    link.className = 'solution_link_hide';
                }
            }
          </script>
<style type='text/css'>img#wpstats{display:none}</style><style type="text/css">body{text-align:center;margin:0;padding:0;font-family:verdana,arial,sans-serif;font-size:13px;line-height:1.4;color:#000000;background:#bbb;padding-bottom:20px}a:link,a:visited,a:active{color:#365DA0;font-weight:bold;text-decoration:none;}a:hover{color:#365DA0;font-weight:bold;text-decoration:underline}ul,ol,dl,p,h1,h2,h3,h4,h5,h6{margin-top:10px;margin-bottom:10px;padding-top:0;padding-bottom:0;}ul ul,ul ol,ol ul,ol ol{margin-top:0;margin-bottom:0}code,pre{font-family:"Courier New",Courier,monospace;font-size:1em}pre{overflow:auto;word-wrap:normal;padding-bottom:1.5em;overflow-y:hidden;width:99%}abbr[title],acronym[title]{border-bottom:1px dotted}hr{display:block;height:2px;border:none;margin:0.5em auto;color:#cccccc;background-color:#cccccc}table{font-size:1em;}div.post,ul.commentlist li,ol.commentlist li{word-wrap:break-word;}pre,.wp_syntax{word-wrap:normal;}div#wrapper{text-align:center;margin-left:auto;margin-right:auto;display:block;width:100%}div#container{padding:20px;box-shadow:0 0 15px #333;-moz-box-shadow:0 0 15px #333;width:auto;margin-left:auto;margin-right:auto;text-align:left;display:block}table#layout{font-size:100%;width:100%;table-layout:fixed}.colone{width:200px}.colone-inner{width:10px}.coltwo{width:100% }.colthree-inner{width:10px}.colthree{width:200px}div#header.full-width{width:100%}div#header,td#header{width:auto;padding:0}table#logoarea,table#logoarea tr,table#logoarea td{margin:0;padding:0;background:none;border:0}table#logoarea{width:100%;border-spacing:0px}img.logo{display:block;margin:0 10px 0 0}td.logoarea-logo{width:1%}h1.blogtitle,h2.blogtitle{ display:block;margin:0;padding:0;letter-spacing:-1px;line-height:1.0em;font-size:200%;text-transform:uppercase;font-smooth:always}h1.blogtitle a:link,h1.blogtitle a:visited,h1.blogtitle a:active,h2.blogtitle a:link,h2.blogtitle a:visited,h2.blogtitle a:active{ text-decoration:none;color:#000000;font-weight:normal;font-smooth:always}h1.blogtitle a:hover,h2.blogtitle a:hover{ text-decoration:none;color:#AC161B;font-weight:normal}p.tagline{margin:0;padding:0;font-size:1.2em;font-weight:normal;color:#444}td.feed-icons{white-space:nowrap;}div.rss-box{height:1%;display:block;padding:10px 0 10px 10px;margin:0;width:280px}a.comments-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:22px;display:block;text-decoration:none;float:right;white-space:nowrap}a.comments-icon:link,a.comments-icon:active,a.comments-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment-gray.png) no-repeat scroll center left}a.comments-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/comment.png) no-repeat scroll center left}a.posts-icon{height:22px;line-height:22px;margin:0 5px 0 0;padding-left:20px;display:block;text-decoration:none;float:right;white-space:nowrap}a.posts-icon:link,a.posts-icon:active,a.posts-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss-gray.png) no-repeat scroll center left}a.posts-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/rss.png) no-repeat scroll center left}a.email-icon{height:22px;line-height:22px;margin:0 5px 0 5px;padding-left:24px;display:block;text-decoration:none;float:right;white-space:nowrap}a.email-icon:link,a.email-icon:active,a.email-icon:visited{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email-gray.png) no-repeat scroll center left}a.email-icon:hover{background:transparent url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/email.png) no-repeat scroll center left}td.search-box{height:1%}div.searchbox{height:35px;border-bottom:0;width:200px;margin:0;padding:0}div.searchbox-form{margin:5px 10px 5px 10px}div.horbar1,div.horbar2{font-size:1px;clear:both;display:block;position:relative;padding:0;margin:0}div.horbar1{height:0px;background:#ffffff;border-top:dashed 1px #cccccc}div.horbar2{height:0px;background:#ffffff;border-bottom:dashed 1px #cccccc}div.header-image-container-pre{position:relative;margin:0;padding:0;height:150px;}div.header-image-container{position:relative;margin:0;padding:0;height:150px;}div.codeoverlay{position:absolute;top:0;left:0;width:100%;height:100%}div.clickable{position:absolute;top:0;left:0;z-index:3;margin:0;padding:0;width:100%;height:150px;}a.divclick:link,a.divclick:visited,a.divclick:active,a.divclick:hover{width:100%;height:100%;display:block;text-decoration:none}td#left{vertical-align:top;padding-right:10px}td#left-inner{vertical-align:top;padding-right:10px}td#right{vertical-align:top;padding-left:10px}td#right-inner{vertical-align:top;padding-left:10px}td#middle{vertical-align:top;width:100%;background:#fff;padding-left:15px!important;padding-right:15px!important;border:solid 4px #eee}div#footer.full-width{width:100%}div#footer,td#footer{width:auto;background-color:#f7f7f7;border:solid 4px #eee;padding:10px;text-align:center;color:#888;font-size:11px;margin-left:220px;margin-right:220px;margin-top:20px;width:auto!important}div#footer a:link,div#footer a:visited,div#footer a:active,td#footer a:link,td#footer a:visited,td#footer a:active{text-decoration:none;color:#777777;font-weight:normal}div#footer a:hover,td#footer a:hover{text-decoration:none;color:#777777;font-weight:normal}div.widget{display:block;width:auto;font-size:12px;margin:0 0 10px 0;padding:10px;border:solid 4px #eee;background:#fff}div.widget-title{display:block;width:auto}div.widget-title h3,td#left h3.tw-widgettitle,td#right h3.tw-widgettitle,td#left ul.tw-nav-list,td#right ul.tw-nav-list{padding:0;margin:0;font-size:0.9em;text-align:center;font-weight:normal;text-transform:uppercase;letter-spacing:1px;color:#333;border-bottom:solid 1px #eee;padding-bottom:10px;margin-bottom:10px}div.widget ul,div.textwidget{display:block;width:auto;background:#fff}div.widget select{width:98%;margin-top:5px;}div.widget ul{list-style-type:none;margin:0;padding:0;width:auto}div.widget ul li{display:block;margin:2px 0 2px 0px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget ul li:hover,div.widget ul li.sfhover{display:block;width:auto;border-left:solid 0px #000000;}div.widget ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li:hover,div.widget ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget ul li ul li ul li{margin:2px 0 2px 5px;padding:0 0 0 0px;border-left:solid 0px #CCCCCC;}div.widget ul li ul li ul li:hover,div.widget ul li ul li ul li.sfhover{border-left:solid 0px #000000;}div.widget a:link,div.widget a:visited,div.widget a:active,div.widget td a:link,div.widget td a:visited,div.widget td a:active,div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active{text-decoration:none;font-weight:normal;color:#365DA0;font-weight:normal;}div.widget ul li ul li a:link,div.widget ul li ul li a:visited,div.widget ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget ul li ul li ul li a:link,div.widget ul li ul li ul li a:visited,div.widget ul li ul li ul li a:active{color:#365DA0;font-weight:normal;}div.widget a:hover,div.widget ul li a:hover{color:#365DA0;}div.widget ul li ul li a:hover{color:#365DA0;}div.widget ul li ul li ul li a:hover{color:#365DA0;}div.widget ul li a:link,div.widget ul li a:visited,div.widget ul li a:active,div.widget ul li a:hover{display:inline}* html div.widget ul li a:link,* html div.widget ul li a:visited,* html div.widget ul li a:active,* html div.widget ul li a:hover{height:1%; } div.widget_nav_menu ul li,div.widget_pages ul li,div.widget_categories ul li{border-left:0 !important;padding:0 !important}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:active,div.widget_pages ul li a:link,div.widget_pages ul li a:visited,div.widget_pages ul li a:active,div.widget_categories ul li a:link,div.widget_categories ul li a:visited,div.widget_categories ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:hover,div.widget_categories ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li a:link,div.widget_nav_menu ul li ul li a:visited,div.widget_nav_menu ul li ul li a:active,div.widget_pages ul li ul li a:link,div.widget_pages ul li ul li a:visited,div.widget_pages ul li ul li a:active,div.widget_categories ul li ul li a:link,div.widget_categories ul li ul li a:visited,div.widget_categories ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li a:hover,div.widget_pages ul li ul li a:hover,div.widget_categories ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li ul li ul li a:link,div.widget_nav_menu ul li ul li ul li a:visited,div.widget_nav_menu ul li ul li ul li a:active,div.widget_pages ul li ul li ul li a:link,div.widget_pages ul li ul li ul li a:visited,div.widget_pages ul li ul li ul li a:active,div.widget_categories ul li ul li ul li a:link,div.widget_categories ul li ul li ul li a:visited,div.widget_categories ul li ul li ul li a:active{padding:0 0 0 0px;border-left:solid 0px #CCCCCC}div.widget_nav_menu ul li ul li ul li a:hover,div.widget_pages ul li ul li ul li a:hover,div.widget_categories ul li ul li ul li a:hover{border-left:solid 0px #000000;}div.widget_nav_menu ul li a:link,div.widget_nav_menu ul li a:active,div.widget_nav_menu ul li a:visited,div.widget_nav_menu ul li a:hover,div.widget_pages ul li a:link,div.widget_pages ul li a:active,div.widget_pages ul li a:visited,div.widget_pages ul li a:hover{display:block !important}div.widget_categories ul li a:link,div.widget_categories ul li a:active,div.widget_categories ul li a:visited,div.widget_categories ul li a:hover{display:inline !important}table.subscribe{width:100%}table.subscribe td.email-text{padding:0 0 5px 0;vertical-align:top}table.subscribe td.email-field{padding:0;width:100%}table.subscribe td.email-button{padding:0 0 0 5px}table.subscribe td.post-text{padding:7px 0 0 0;vertical-align:top}table.subscribe td.comment-text{padding:7px 0 0 0;vertical-align:top}div.post,div.page{display:block;margin:0 0 30px 0;padding-top:20px}div.sticky{background:#eee url('<?php bloginfo('template_directory');?>/images/sticky.gif') 99% 5% no-repeat;border:dashed 1px #cccccc;padding:10px}div.post-kicker{margin:0 0 5px 0}div.post-kicker a:link,div.post-kicker a:visited,div.post-kicker a:active{color:#999;text-decoration:none;text-transform:uppercase;letter-spacing:1px}div.post-kicker a:hover{color:#cc0000}div.post-headline{}div.post-headline h1,div.post-headline h2{ margin:0; padding:0;padding:0;margin:0;font-size:1.7em}div.post-headline h2 a:link,div.post-headline h2 a:visited,div.post-headline h2 a:active,div.post-headline h1 a:link,div.post-headline h1 a:visited,div.post-headline h1 a:active{}div.post-headline h2 a:hover,div.post-headline h1 a:hover{}div.post-byline{margin:5px 0 10px 0;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-byline a:link,div.post-byline a:visited,div.post-byline a:active{}div.post-byline a:hover{}div.post-bodycopy{}div.post-bodycopy p{margin:1em 0;padding:0;display:block}div.post-pagination{}div.post-footer{clear:both;display:block;color:#999;text-transform:uppercase;letter-spacing:1px;font-size:11px}div.post-footer a:link,div.post-footer a:visited,div.post-footer a:active{color:#999;font-weight:normal;text-decoration:none}div.post-footer a:hover{color:#333;font-weight:normal;text-decoration:underline}div.post-kicker img,div.post-byline img,div.post-footer img{border:0;padding:0;margin:0 0 -1px 0;background:none}span.post-ratings{display:inline-block;width:auto;white-space:nowrap}div.navigation-top{border-top:solid 4px #eee;padding:8px 0}div.navigation-middle{margin:10px 0 20px 0;padding:8px 0;border-top:solid 4px #eee;border-bottom:solid 4px #eee}div.navigation-bottom{margin:20px 0 0 0;padding:10px 0 0 0;border-top:solid 4px #eee}div.navigation-comments-above{margin:0 0 10px 0;padding:5px 0 5px 0}div.navigation-comments-below{margin:0 0 10px 0;padding:5px 0 5px 0}div.older{float:left;width:48%;text-align:left;margin:0;padding:0}div.newer{float:right;width:48%;text-align:right;margin:0;padding:0;}div.older-home{float:left;width:44%;text-align:left;margin:0;padding:0}div.newer-home{float:right;width:44%;text-align:right;margin:0;padding:0;}div.home{float:left;width:8%;text-align:center;margin:0;padding:0}form,.feedburner-email-form{margin:0;padding:0;}fieldset{border:1px solid #cccccc;width:auto;padding:0.35em 0.625em 0.75em;display:block;}legend{color:#000000;background:#f4f4f4;border:1px solid #cccccc;padding:2px 6px;margin-bottom:15px;}form p{margin:5px 0 0 0;padding:0;}div.xhtml-tags p{margin:0}label{margin-right:0.5em;font-family:arial;cursor:pointer;}input.text,input.textbox,input.password,input.file,input.TextField,textarea{padding:3px;color:#000000;border-top:solid 1px #333333;border-left:solid 1px #333333;border-right:solid 1px #999999;border-bottom:solid 1px #cccccc;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/inputbackgr.gif) top left no-repeat}textarea{width:96%;}input.inputblur{color:#777777;width:95%}input.inputfocus{color:#000000;width:95%}input.highlight,textarea.highlight{background:#e8eff7;border-color:#37699f}.button,.Button,input[type=submit]{padding:0 2px;height:24px;line-height:16px;background-color:#777777;color:#ffffff;border:solid 2px #555555;font-weight:bold}input.buttonhover{padding:0 2px;cursor:pointer;background-color:#6b9c6b;color:#ffffff;border:solid 2px #496d49}form#commentform input#submit{ padding:0 .25em; overflow:visible}form#commentform input#submit[class]{width:auto}form#commentform input#submit{padding:4px 10px 4px 10px;font-size:1.2em;line-height:1.5em;height:36px}table.searchform{width:100%}table.searchform td.searchfield{padding:0;width:100%}table.searchform td.searchbutton{padding:0 0 0 5px}table.searchform td.searchbutton input{padding:0 0 0 5px}blockquote{height:1%;display:block;clear:both;color:#555555;padding:1em 1em;background:#f4f4f4;border:solid 1px #e1e1e1}blockquote blockquote{height:1%;display:block;clear:both;color:#444444;padding:1em 1em;background:#e1e1e1;border:solid 1px #d3d3d3}div.post table{border-collapse:collapse;margin:10px 0}div.post table caption{width:auto;margin:0 auto;background:#eeeeee;border:#999999;padding:4px 8px;color:#666666}div.post table th{background:#888888;color:#ffffff;font-weight:bold;font-size:90%;padding:4px 8px;border:solid 1px #ffffff;text-align:left}div.post table td{padding:4px 8px;background-color:#ffffff;border-bottom:1px solid #dddddd;text-align:left}div.post table tfoot td{}div.post table tr.alt td{background:#f4f4f4}div.post table tr.over td{background:#e2e2e2}#calendar_wrap{padding:0;border:none}table#wp-calendar{width:100%;font-size:90%;border-collapse:collapse;background-color:#ffffff;margin:0 auto}table#wp-calendar caption{width:auto;background:#eeeeee;border:none;;padding:3px;margin:0 auto;font-size:1em}table#wp-calendar th{border:solid 1px #eeeeee;background-color:#999999;color:#ffffff;font-weight:bold;padding:2px;text-align:center}table#wp-calendar td{padding:0;line-height:18px;background-color:#ffffff;border:1px solid #dddddd;text-align:center}table#wp-calendar tfoot td{border:solid 1px #eeeeee;background-color:#eeeeee}table#wp-calendar td a{display:block;background-color:#eeeeee;width:100%;height:100%;padding:0}div#respond{margin:25px 0;padding:25px;background:#eee;-moz-border-radius:8px;-khtml-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}p.thesetags{margin:10px 0}h3.reply,h3#reply-title{margin:0;padding:0 0 10px 0}ol.commentlist{margin:15px 0 25px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ol.commentlist li{padding:15px 10px;display:block;height:1%;margin:0;background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ol.commentlist li.alt{display:block;height:1%;background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ol.commentlist li.authorcomment{display:block;height:1%;background-color:#D8D8FA}ol.commentlist span.authorname{font-weight:bold;font-size:110%}ol.commentlist span.commentdate{color:#666666;font-size:90%;margin-bottom:5px;display:block}ol.commentlist span.editcomment{display:block}ol.commentlist li p{margin:2px 0 5px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}textarea#comment{width:98%;margin:10px 0;display:block}ul.commentlist{margin:15px 0 15px 0;list-style-type:none;padding:0;display:block;border-top:dotted 1px #cccccc}ul.commentlist ul{margin:0;border:none;list-style-type:none;padding:0}ul.commentlist li{padding:0; margin:0;display:block;clear:both;height:1%;}ul.commentlist ul.children li{ margin-left:30px}ul.commentlist div.comment-container{padding:10px;margin:0}ul.children div.comment-container{background-color:transparent;border:dotted 1px #ccc;padding:10px;margin:0 10px 8px 0; border-radius:5px}ul.children div.bypostauthor{}ul.commentlist li.thread-even{background-color:#FFFFFF;border-bottom:dotted 1px #cccccc}ul.commentlist li.thread-odd{background-color:#EEEEEE;border-bottom:dotted 1px #cccccc}ul.commentlist div.bypostauthor{background-color:#D8D8FA}ul.children div.bypostauthor{border:dotted 1px #BFBCFB}ul.commentlist span.authorname{font-size:110%}div.comment-meta a:link,div.comment-meta a:visited,div.comment-meta a:active,div.comment-meta a:hover{font-weight:normal}div#cancel-comment-reply{margin:-5px 0 10px 0}div.comment-number{float:right;font-size:2em;line-height:2em;font-family:georgia,serif;font-weight:bold;color:#ddd;margin:-10px 0 0 0;position:relative;height:1%}div.comment-number a:link,div.comment-number a:visited,div.comment-number a:active{color:#ccc}.page-numbers{padding:2px 6px;border:solid 1px #000000;border-radius:6px}span.current{background:#ddd}a.prev,a.next{border:none}a.page-numbers:link,a.page-numbers:visited,a.page-numbers:active{text-decoration:none;color:#365DA0;border-color:#365DA0}a.page-numbers:hover{text-decoration:none;color:#365DA0;border-color:#365DA0}div.xhtml-tags{display:none}abbr em{border:none !important;border-top:dashed 1px #aaa !important;display:inline-block !important;background:url(http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/commentluv.gif) 0% 90% no-repeat;margin-top:8px;padding:5px 5px 2px 20px !important;font-style:normal}p.subscribe-to-comments{margin-bottom:10px}div#gsHeader{display:none;}div.g2_column{margin:0 !important;width:100% !important;font-size:1.2em}div#gsNavBar{border-top-width:0 !important}p.giDescription{font-size:1.2em;line-height:1 !important}p.giTitle{margin:0.3em 0 !important;font-size:1em;font-weight:normal;color:#666}div#wp-email img{border:0;padding:0}div#wp-email input,div#wp-email textarea{margin-top:5px;margin-bottom:2px}div#wp-email p{margin-bottom:10px}input#wp-email-submit{ padding:0; font-size:30px; height:50px; line-height:50px; overflow:visible;}img.WP-EmailIcon{ vertical-align:text-bottom !important}.tw-accordion .tw-widgettitle,.tw-accordion .tw-widgettitle:hover,.tw-accordion .tw-hovered,.tw-accordion .selected,.tw-accordion .selected:hover{ background:transparent !important; background-image:none !important}.tw-accordion .tw-widgettitle span{ padding-left:0 !important}.tw-accordion h3.tw-widgettitle{border-bottom:solid 1px #ccc}.tw-accordion h3.selected{border-bottom:none}td#left .without_title,td#right .without_title{ margin-top:0;margin-bottom:0}ul.tw-nav-list{border-bottom:solid 1px #999;display:block;margin-bottom:5px !important}td#left ul.tw-nav-list li,td#right ul.tw-nav-list li{padding:0 0 1px 0;margin:0 0 -1px 5px; border:solid 1px #ccc;border-bottom:none;border-radius:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;background:#eee}td#left ul.tw-nav-list li.ui-tabs-selected,td#right ul.tw-nav-list li.ui-tabs-selected{ background:none;border:solid 1px #999;border-bottom:solid 1px #fff !important}ul.tw-nav-list li a:link,ul.tw-nav-list li a:visited,ul.tw-nav-list li a:active,ul.tw-nav-list li a:hover{padding:0 8px !important;background:none;border-left:none !important;outline:none}td#left ul.tw-nav-list li.ui-tabs-selected a,td#left li.ui-tabs-selected a:hover,td#right ul.tw-nav-list li.ui-tabs-selected a,td#right li.ui-tabs-selected a:hover{ color:#000000; text-decoration:none;font-weight:bold;background:none !important;outline:none}td#left .ui-tabs-panel,td#right .ui-tabs-panel{ margin:0; padding:0}img{border:0}#dbem-location-map img{ background:none !important}.post img{padding:5px;border:solid 1px #dddddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}.post img.size-full{max-width:96%;width:auto;margin:5px 0 5px 0}div.post img[class~=size-full]{height:auto;}.post img.alignleft{float:left;margin:10px 10px 5px 0;}.post img.alignright{float:right;margin:10px 0 5px 10px;}.post img.aligncenter{display:block;margin:10px auto}.aligncenter,div.aligncenter{ display:block; margin-left:auto; margin-right:auto}.alignleft,div.alignleft{float:left;margin:10px 10px 5px 0}.alignright,div.alignright{ float:right; margin:10px 0 5px 10px}div.archives-page img{border:0;padding:0;background:none;margin-bottom:0;vertical-align:-10%}.wp-caption{max-width:96%;width:auto 100%;height:auto;display:block;border:1px solid #dddddd;text-align:center;background-color:#f3f3f3;padding-top:4px;margin:10px 0 0 0;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}* html .wp-caption{height:100%;}.wp-caption img{ margin:0 !important; padding:0 !important; border:0 none !important}.wp-caption p.wp-caption-text{font-size:0.8em;line-height:13px;padding:2px 4px 5px;margin:0;color:#666666}img.wp-post-image{float:left;border:0;padding:0;background:none;margin:0 10px 5px 0}img.wp-smiley{ float:none;border:none !important;margin:0 1px -1px 1px;padding:0 !important;background:none !important}img.avatar{float:left;display:block;margin:0 8px 1px 0;padding:3px;border:solid 1px #ddd;background-color:#f3f3f3;-moz-border-radius:3px;-khtml-border-radius:3px;-webkit-border-radius:3px;border-radius:3px}#comment_quicktags{text-align:left;padding:10px 0 2px 0;display:block}#comment_quicktags input.ed_button{background:#f4f4f4;border:2px solid #cccccc;color:#444444;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px}#comment_quicktags input.ed_button_hover{background:#dddddd;border:2px solid #666666;color:#000000;margin:2px 4px 2px 0;width:auto;padding:0 4px;height:24px;line-height:16px;cursor:pointer}#comment_quicktags #ed_strong{font-weight:bold}#comment_quicktags #ed_em{font-style:italic}@media print{body{background:white;color:black;margin:0;font-size:10pt !important;font-family:arial,sans-serif;}div.post-footer{line-height:normal !important;color:#555 !important;font-size:9pt !important}a:link,a:visited,a:active,a:hover{text-decoration:underline !important;color:#000}h2{color:#000;font-size:14pt !important;font-weight:normal !important}h3{color:#000;font-size:12pt !important;}#header,#footer,.colone,.colone-inner,.colthree-inner,.colthree,.navigation,.navigation-top,.navigation-middle,.navigation-bottom,.wp-pagenavi-navigation,#comment,#respond,.remove-for-print{display:none}td#left,td#right,td#left-inner,td#right-inner{width:0;display:none}td#middle{width:100% !important;display:block}*:lang(en) td#left{ display:none}*:lang(en) td#right{ display:none}*:lang(en) td#left-inner{ display:none}*:lang(en) td#right-inner{ display:none}td#left:empty{ display:none}td#right:empty{ display:none}td#left-inner:empty{ display:none}td#right-inner:empty{ display:none}}ul.rMenu,ul.rMenu ul,ul.rMenu li,ul.rMenu a{display:block;margin:0;padding:0}ul.rMenu,ul.rMenu li,ul.rMenu ul{list-style:none}ul.rMenu ul{display:none}ul.rMenu li{position:relative;z-index:1}ul.rMenu li:hover{z-index:999}ul.rMenu li:hover > ul{display:block;position:absolute}ul.rMenu li:hover{background-position:0 0} ul.rMenu-hor li{float:left;width:auto}ul.rMenu-hRight li{float:right}ul.sub-menu li,ul.rMenu-ver li{float:none}.clearfix:after{ content:".";display:block;height:0;clear:both;visibility:hidden}.clearfix{min-width:0;display:inline-block;display:block}* html .clearfix{height:1%;}.clearboth{clear:both;height:1%;font-size:1%;line-height:1%;display:block;padding:0;margin:0}.page-id-8 .post-headline{display:none;} div.useCode{background:linear-gradient(#FFFF66,#CCCC00);border-radius:8px;padding-left:10px;padding-right:10px;padding-top:2px;padding-bottom:2px;font-size:10pt;text-align:left;display:inline-block;font-weight:550;}td#header{padding-bottom:15px;}td#middle{padding:0}div.searchbox-form{margin:5px 0 15px 5px}div#menu1 ul.rMenu{background:transparent;border:none}div#imagecontainer{border-top:solid 0px #333;border-bottom:solid 5px #333;}div.widget ul li{padding:1px 5px 1px 12px !important;background:url('<?php bloginfo('template_directory');?>/images/bullets/round-gray.gif') no-repeat 0 7px}ul.rMenu-hor ul,ul.rMenu-hRight ul{margin-top:0px;}ul.rMenu-hor li{margin-bottom:0px;margin-top:0px;margin-left:0px;}ul.rMenu-hor{padding-left:0px;}ul.rMenu-ver li{margin-top:0xp;}div#menu1 ul.rMenu li a,div#menu2 ul.rMenu li a{padding:6px 10px}div#menu1 ul.rMenu li{margin-right:5px}div#menu1 ul.rMenu li li{margin-right:0}div#menu1 ul.rMenu li,div#menu1 ul.rMenu li a{-webkit-border-top-left-radius:5px;-webkit-border-top-right-radius:5px;-moz-border-radius-topleft:5px;-moz-border-radius-topright:5px;border-top-left-radius:5px;border-top-right-radius:5px}div#menu1 ul.rMenu li li,div#menu1 ul.rMenu li li a{-webkit-border-top-left-radius:0;-webkit-border-top-right-radius:0;-moz-border-radius-topleft:0;-moz-border-radius-topright:0;border-top-left-radius:0;border-top-right-radius:0}div#menu2{ border:dashed 1px #ffffff}ul{list-style-position:inside}</style>
<script type="text/javascript">
//<![CDATA[



/* JQUERY */
jQuery(document).ready(function(){ 
    
   
  

	/* jQuery('ul#rmenu').superfish(); */
	/* jQuery('ul#rmenu').superfish().find('ul').bgIframe({opacity:false}); */
 
	/* For IE6 */
	if (jQuery.browser.msie && /MSIE 6\.0/i.test(window.navigator.userAgent) && !/MSIE 7\.0/i.test(window.navigator.userAgent) && !/MSIE 8\.0/i.test(window.navigator.userAgent)) {

		/* Max-width for images in IE6 */		
		var centerwidth = jQuery("td#middle").width(); 
		
		/* Images without caption */
		jQuery(".post img").each(function() { 
			var maxwidth = centerwidth - 10 + 'px';
			var imgwidth = jQuery(this).width(); 
			var imgheight = jQuery(this).height(); 
			var newimgheight = (centerwidth / imgwidth * imgheight) + 'px';	
			if (imgwidth > centerwidth) { 
				jQuery(this).css({width: maxwidth}); 
				jQuery(this).css({height: newimgheight}); 
			}
		});
		
		/* Images with caption */
		jQuery("div.wp-caption").each(function() { 
			var captionwidth = jQuery(this).width(); 
			var maxcaptionwidth = centerwidth + 'px';
			var captionheight = jQuery(this).height();
			var captionimgwidth =  jQuery("div.wp-caption img").width();
			var captionimgheight =  jQuery("div.wp-caption img").height();
			if (captionwidth > centerwidth) { 
				jQuery(this).css({width: maxcaptionwidth}); 
				var newcaptionheight = (centerwidth / captionwidth * captionheight) + 'px';
				var newcaptionimgheight = (centerwidth / captionimgwidth * captionimgheight) + 'px';
				jQuery(this).css({height: newcaptionheight}); 
				jQuery("div.wp-caption img").css({height: newcaptionimgheight}); 
				}
		});
		
		/* sfhover for LI:HOVER support in IE6: */
		jQuery("ul li").
			hover( function() {
					jQuery(this).addClass("sfhover")
				}, 
				function() {
					jQuery(this).removeClass("sfhover")
				} 
			); 

	/* End IE6 */
	}
	
	
	
	/* Since 3.7.8: Auto resize videos (embed and iframe elements) 
	TODO: Parse parent's dimensions only once per layout column, not per video
	*/
	function bfa_resize_video() {
		jQuery('embed, iframe').each( function() {
			var video = jQuery(this),
			videoWidth = video.attr('width'); // use the attr here, not width() or css()
			videoParent = video.parent(),
			videoParentWidth = parseFloat( videoParent.css( 'width' ) ),
			videoParentBorder = parseFloat( videoParent.css( 'border-left-width' ) ) 
										+  parseFloat( videoParent.css( 'border-right-width' ) ),
			videoParentPadding = parseFloat( videoParent.css( 'padding-left' ) ) 
										+  parseFloat( videoParent.css( 'padding-right' ) ),
			maxWidth = videoParentWidth - videoParentBorder - videoParentPadding;

			if( videoWidth > maxWidth ) {
				var videoHeight = video.attr('height'),
				videoMaxHeight = ( maxWidth / videoWidth * videoHeight );
				video.attr({ width: maxWidth, height: videoMaxHeight });
			} 

		});	
	}
	bfa_resize_video();
	jQuery(window).resize( bfa_resize_video );

		
	jQuery(".post table tr").
		mouseover(function() {
			jQuery(this).addClass("over");
		}).
		mouseout(function() {
			jQuery(this).removeClass("over");
		});

	
	jQuery(".post table tr:even").
		addClass("alt");

	
	jQuery("input.text, input.TextField, input.file, input.password, textarea").
		focus(function () {  
			jQuery(this).addClass("highlight"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("highlight"); 
		})
	
	jQuery("input.inputblur").
		focus(function () {  
			jQuery(this).addClass("inputfocus"); 
		}).
		blur(function () { 
			jQuery(this).removeClass("inputfocus"); 
		})

		

	
	jQuery("input.button, input.Button, input#submit").
		mouseover(function() {
			jQuery(this).addClass("buttonhover");
		}).
		mouseout(function() {
			jQuery(this).removeClass("buttonhover");
		});

	/* toggle "you can use these xhtml tags" */
	jQuery("a.xhtmltags").
		click(function(){ 
			jQuery("div.xhtml-tags").slideToggle(300); 
		});

	/* For the Tabbed Widgets plugin: */
	jQuery("ul.tw-nav-list").
		addClass("clearfix");

		
	
});

//]]>
</script>

<!--[if IE 6]>
<script type="text/javascript">DD_roundies.addRule("a.posts-icon, a.comments-icon, a.email-icon, img.logo");</script>
<![endif]-->

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="8.5 -- Constructors" />
<meta property="og:url" content="http://www.learncpp.com/cpp-tutorial/85-constructors/" />
<meta property="og:description" content="Constructors A constructor is a special kind of class member function that is executed when an object of that class is instantiated. Constructors are typically used to initialize member variables o..." />
<meta property="article:published_time" content="2007-09-05T23:10:27+00:00" />
<meta property="article:modified_time" content="2007-09-05T23:10:27+00:00" />
<meta property="article:author" content="http://www.learncpp.com/author/alex/" />
<meta property="og:site_name" content="Learn C++" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/next.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/up.png" />
<meta property="og:image" content="http://www.learncpp.com/images/CppTutorial/prev.png" />
<meta property="og:locale" content="en_US" />
<meta name="twitter:image" content="http://www.learncpp.com/images/CppTutorial/next.png?w=240" />
<meta name="twitter:card" content="summary" />
</head>
<body class="single single-post postid-128 single-format-standard category-cpp-tutorial">

		<!-- Full Width Header -->
		<div id="header" class="full-width">
		<div id="imagecontainer-pre" class="header-image-container-pre">    <div id="imagecontainer" class="header-image-container" style="background: url('http://www.learncpp.com/blog/wp-content/ata-images/header/LearnCppHeader3_800.jpg') top center no-repeat;"></div><div class="clickable"><a class="divclick" title="Learn C++" href ="http://www.learncpp.com/">&nbsp;</a></div><div class="codeoverlay"></div></div>		</div>
		<!-- / Full Width Header -->
<div id="wrapper">
<div id="container">
<table id="layout" border="0" cellspacing="0" cellpadding="0">
<colgroup>
<col class="colone" /><col class="coltwo" />
<col class="colthree" /></colgroup> 

	<!-- Main Body -->	
	<tr id="bodyrow">

				<!-- Left Sidebar -->
		<td id="left">

			<div id="text-2" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="/"><big><big>Main Page</big></big></a>
<li><a href="
/featured-articles/">Featured Articles</a>
</ul>
<hr>
<ul>
<li><a href="/site-news/find-something-wrong/">Report an Issue</a>
<li><a href="/about/">About / Contact</a>
<li><a href="/about/#Support">Support LearnCpp</a>
</ul>
</div>
		</div><div id="text-3" class="widget widget_text"><div class="widget-title"><h3>Search</h3></div>			<div class="textwidget"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.com/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="center">

<!--<br/>-->
<input type="hidden" name="domains" value="LearnCpp.com"></input>
<label for="sbi" style="display: none">Enter your search terms</label>
<input type="text" name="q" size="16" maxlength="255" value="" id="sbi"></input>
</td></tr>
<tr>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="hidden" name="sitesearch" value="www.LearnCpp.com" checked id="ss1"></input>
<label for="ss1" title="Search LearnCpp.com"></label></td>
</tr>
</table>
<label for="sbb" style="display: none">Submit search form</label>
<input type="submit" name="sa" value="Google Search" id="sbb"></input>
<input type="hidden" name="client" value="pub-0588844875925051"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="7774154974"></input>
<input type="hidden" name="ie" value="ISO-8859-1"></input>
<input type="hidden" name="oe" value="ISO-8859-1"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="flav" value="0000"></input>
<input type="hidden" name="sig" value="q6fLrjobHHgL00cW"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
		</div>    
<!-- 
	Plugin: Custom Meta Widget	Plugin URL: http://shinraholdings.com/plugins/custom-meta-widget/-->


	<div id="custommetawidget-2" class="widget customMetaWidget">	<div class="widget-title"><h3>Meta</h3></div>	<ul>
	
	
    <li><a href="http://www.learncpp.com/blog/wp-login.php">Log in</a></li>	
	</ul>
    
	</div><div id="text-9" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "2780990843";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Left Sidebar - Wide Skyscraper -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
		</td>
		<!-- / Left Sidebar -->
		
				

		<!-- Main Column -->
		<td id="middle">

    
		
	<div class='code-block code-block-1' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-0588844875925051";
/* Content Page Top Large */
google_ad_slot = "7945645163";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>	
								<div class="post-128 post type-post status-publish format-standard hentry category-cpp-tutorial odd" id="post-128">
						<div class="post-headline">		<h1>8.5 &#8212; Constructors</h1>
		</div>		<div class="post-byline">By Alex, on September 5th, 2007</div>		<div class="post-bodycopy clearfix"><p><strong>Constructors</strong></p>
<p>A <strong>constructor</strong> is a special kind of class member function that is executed when an object of that class is instantiated.  Constructors are typically used to initialize member variables of the class to appropriate default values, or to allow the user to easily initialize those member variables to whatever values are desired.</p>
<p>Unlike normal functions, constructors have specific rules for how they must be named:<br />
1) Constructors should always have the same name as the class (with the same capitalization)<br />
2) Constructors have no return type (not even void)</p>
<p>A constructor that takes no parameters (or has all optional parameters) is called a <strong>default constructor</strong>.</p>
<p>Here is an example of a class that has a default constructor:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e51ea161251606" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-2">2</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-4">4</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-6">6</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-8">8</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-10">10</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-12">12</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-14">14</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51ea161251606-16">16</div><div class="crayon-num" data-line="crayon-555d7673e51ea161251606-17">17</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e51ea161251606-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Fraction</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-3"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-6">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e51ea161251606-7"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Fraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-c">// default constructor</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">m_nNumerator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">m_nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-13">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetNumerator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetDenominator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51ea161251606-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">GetFraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e51ea161251606-17"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0050 seconds] -->
<p></p>
<p>This class was designed to hold a fractional value as an integer numerator and denominator.  We have defined a default constructor named Fraction (the same as the class).  When we create an instance of the Fraction class, this default constructor will be called immediately after memory is allocated, and our object will be initialized.  For example, the following snippet:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e51f9625674540" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e51f9625674540-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e51f9625674540-2">2</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e51f9625674540-1"><span class="crayon-e">Fraction </span><span class="crayon-v">cDefault</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// calls Fraction() constructor</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e51f9625674540-2"><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-r">cout</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDefault</span><span class="crayon-sy">.</span><span class="crayon-e">GetNumerator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-s">"/"</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">cDefault</span><span class="crayon-sy">.</span><span class="crayon-e">GetDenominator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;&lt;</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-o">::</span><span class="crayon-v">endl</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0010 seconds] -->
<p></p>
<p>produces the output:</p>
<pre>
0/1
</pre>
<p>Note that our numerator and denominator were initialized with the values we set in our default constructor!  This is such a useful feature that almost every class includes a default constructor.  Without a default constructor, the numerator and denominator would have garbage values until we explicitly assigned them reasonable values.</p>
<p><strong>Constructors with parameters</strong></p>
<p>While the default constructor is great for ensuring our classes are initialized with reasonable default values, often times we want instances of our class to have specific values.  Fortunately, constructors can also be declared with parameters.  Here is an example of a constructor that takes two integer parameters that are used to initialize the numerator and denominator:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e5200068201640" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e5200068201640-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-2">2</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-4">4</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-6">6</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-8">8</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-10">10</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-12">12</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-14">14</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-16">16</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-18">18</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-20">20</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-22">22</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-24">24</div><div class="crayon-num" data-line="crayon-555d7673e5200068201640-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5200068201640-26">26</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e5200068201640-1"><span class="crayon-p">#include &lt;cassert&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Fraction</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-4"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-8"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Fraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-c">// default constructor</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">m_nNumerator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">m_nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-14">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5200068201640-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Constructor with parameters</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Fraction</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nNumerator</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nDenominator</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">assert</span><span class="crayon-sy">(</span><span class="crayon-v">nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">!=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nNumerator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nNumerator</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nDenominator</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-22">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5200068201640-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetNumerator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetDenominator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e5200068201640-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">GetFraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5200068201640-26"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0047 seconds] -->
<p></p>
<p>Note that we now have two constructors: a default constructor that will be called in the default case, and a second constructor that takes two parameters.  These two constructors can coexist peacefully in the same class due to function overloading.  In fact, you can define as many constructors as you want, so long as each has a unique signature (number and type of parameters).</p>
<p>So how do we use this constructor with parameters?  It&#8217;s simple:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e5208851997851" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e5208851997851-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e5208851997851-1"><span class="crayon-e">Fraction </span><span class="crayon-e">cFiveThirds</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// calls Fraction(int, int) constructor</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0005 seconds] -->
<p></p>
<p>This particular fraction will be initialized to the fraction 5/3!</p>
<p>Note that we have made use of a default value for the second parameter of the constructor with parameters, so the following is also legal:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e520f246266797" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e520f246266797-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e520f246266797-1"><span class="crayon-e">Fraction </span><span class="crayon-e">Six</span><span class="crayon-sy">(</span><span class="crayon-cn">6</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// calls Fraction(int, int) constructor</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
<p>In this case, our default constructor is actually somewhat redundant.  We could simplify this class as follows:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e5215912114744" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e5215912114744-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-2">2</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-4">4</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-6">6</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-8">8</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-10">10</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-12">12</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-14">14</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-16">16</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-18">18</div><div class="crayon-num" data-line="crayon-555d7673e5215912114744-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5215912114744-20">20</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e5215912114744-1"><span class="crayon-p">#include &lt;cassert&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-2"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Fraction</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-3"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-4"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-8"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Default constructor</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Fraction</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nNumerator</span><span class="crayon-o">=</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nDenominator</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">assert</span><span class="crayon-sy">(</span><span class="crayon-v">nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">!=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nNumerator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nNumerator</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nDenominator</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-16">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5215912114744-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetNumerator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetDenominator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e5215912114744-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">GetFraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5215912114744-20"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0033 seconds] -->
<p></p>
<p>This constructor has been defined in a way that allows it to serve as both a default and a non-default constructor!</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e521b208943997" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e521b208943997-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e521b208943997-2">2</div><div class="crayon-num" data-line="crayon-555d7673e521b208943997-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e521b208943997-1"><span class="crayon-e">Fraction </span><span class="crayon-v">cDefault</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// will call Fraction(0, 1)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e521b208943997-2"><span class="crayon-e">Fraction </span><span class="crayon-e">cSix</span><span class="crayon-sy">(</span><span class="crayon-cn">6</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// will call Fraction(6, 1)</span></div><div class="crayon-line" id="crayon-555d7673e521b208943997-3"><span class="crayon-e">Fraction </span><span class="crayon-e">cFiveThirds</span><span class="crayon-sy">(</span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// will call Fraction(5,3)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0013 seconds] -->
<p></p>
<p><strong>Classes without default constructors</strong></p>
<p>What happens if we do not declare a default constructor and then instantiate our class?  The answer is that C++ will allocate space for our class instance, but will not initialize the members of the class (similar to what happens when you declare an int, double, or other basic data type).  For example:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e5222032621279" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e5222032621279-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-2">2</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-4">4</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-6">6</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-8">8</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-10">10</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-12">12</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-14">14</div><div class="crayon-num" data-line="crayon-555d7673e5222032621279-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5222032621279-16">16</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e5222032621279-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Date</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e5222032621279-3"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nMonth</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5222032621279-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDay</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nYear</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5222032621279-7"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5222032621279-9"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-10"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e5222032621279-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-v">cDate</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// cDate's member variables now contain garbage</span></div><div class="crayon-line" id="crayon-555d7673e5222032621279-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Who knows what date we'll get?</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-14">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5222032621279-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5222032621279-16"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0018 seconds] -->
<p></p>
<p>In the above example, because we declared a Date object, but there is no default constructor, m_nMonth, m_nDay, and m_nYear were never initialized.  Consequently, they will hold garbage values.  Generally speaking, this is why providing a default constructor is almost always a good idea:</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e5229530762753" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e5229530762753-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-2">2</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-4">4</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-6">6</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-8">8</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-10">10</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-12">12</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-14">14</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-16">16</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-18">18</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-20">20</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-22">22</div><div class="crayon-num" data-line="crayon-555d7673e5229530762753-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e5229530762753-24">24</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e5229530762753-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Date</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-3"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nMonth</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDay</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nYear</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-8"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nMonth</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nDay</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nYear</span><span class="crayon-o">=</span><span class="crayon-cn">1970</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nMonth</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nMonth</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nDay</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nDay</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nYear</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nYear</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-15"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-16">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5229530762753-17"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-18"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e5229530762753-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-v">cDate</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// cDate is initialized to Jan 1st, 1970 instead of garbage</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-20">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5229530762753-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-e">cToday</span><span class="crayon-sy">(</span><span class="crayon-cn">9</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2007</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// cToday is initialized to Sept 5th, 2007</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-22">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e5229530762753-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e5229530762753-24"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0029 seconds] -->
<p></p>
<table border=0 cellpadding=3>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/86-destructors/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/next.png" align=middle> 8.6 -- Destructors</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/#Chapter8" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/up.png" align=middle> Index</a>
</td>
</tr>
<tr>
<td>
        <a href="http://www.learncpp.com/cpp-tutorial/84-access-functions-and-encapsulation/" style="text-decoration:none"><img src="http://www.learncpp.com/images/CppTutorial/prev.png" align=middle> 8.4 -- Access functions and encapsulation</a>
</td>
</tr>
</table>
<div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-email"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/85-constructors/?share=email" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-facebook"><a rel="nofollow" data-shared="sharing-facebook-128" class="share-facebook sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/85-constructors/?share=facebook" target="_blank" title="Share on Facebook"><span>Facebook</span></a></li><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-128" class="share-twitter sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/85-constructors/?share=twitter" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-128" class="share-google-plus-1 sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/85-constructors/?share=google-plus-1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pinterest"><a rel="nofollow" data-shared="sharing-pinterest-128" class="share-pinterest sd-button share-icon" href="http://www.learncpp.com/cpp-tutorial/85-constructors/?share=pinterest" target="_blank" title="Click to share on Pinterest"><span>Pinterest</span></a></li><li class="share-end"></li></ul></div></div></div><div class='code-block code-block-2' style='float:left;margin:8px 8px 8px 0px;'><div class="cf_monitor">
<div id="171844866">
    <script type="text/javascript">
    try {
        window._mNHandle.queue.push(function () {
		    window._mNDetails.loadTag("171844866", "336x280", "171844866");
		    });
		}
    catch (error) {}
	</script>
</div>
</div></div></div>						<div class="post-footer"><img src="http://www.learncpp.com/blog/wp-content/themes/atahualpa/images/icons/folder-gray.gif" alt="" /> <a class="cpp-tutorial" href="http://www.learncpp.com/category/cpp-tutorial/" title="View all posts in C++ Tutorial">C++ Tutorial</a>   | <a href="http://www.learncpp.com/cpp-tutorial/85-constructors/print/" title="Print This Post" rel="nofollow"><img class="WP-PrintIcon" src="http://www.learncpp.com/blog/wp-content/plugins/wp-print/images/printer_famfamfam.gif" alt="Print This Post" title="Print This Post" style="border: 0px;" /></a>&nbsp;<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/print/" title="Print This Post" rel="nofollow">Print This Post</a></div>		</div><!-- / Post -->	
						
	
			

	<a name="comments"></a><!-- named anchor for skip links -->
	<h3 id="comments">43 comments to 8.5 &#8212; Constructors</h3>

	
	<!-- Comment List -->
	<ul class="commentlist">
		
			<li class="comment even thread-even depth-1 clearfix" id="comment-5171">
		<div id="div-comment-5171" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/66ac6df2d5b3175463af0df308d3c747?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/66ac6df2d5b3175463af0df308d3c747?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Cody</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-5171">
		December 28, 2007 at 4:42 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=5171#respond' onclick='return addComment.moveForm( "comment-5171", "5171", "respond", "128" )' aria-label='Reply to Cody'> &middot; Reply</a></span>		 
		</div>
		<p>As a review you could include protecting m_nDenominator from invalid assumptions by making sure it is not set to 0. This is because, if I remember correctly, dividing anything by zero will probably cause the program to crash so the function GetFraction() would most likely crash the program if the denominator is 0.</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor odd alt depth-2 clearfix" id="comment-5173">
		<div id="div-comment-5173" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-5173">
		December 28, 2007 at 5:32 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=5173#respond' onclick='return addComment.moveForm( "comment-5173", "5173", "respond", "128" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>Great point!  I updated the example.  Dividing by 0 will definitely crash the program.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-5906">
		<div id="div-comment-5906" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/0195bf75f2f76e29b4f52f919e1cec59?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Abhishek</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-5906">
		January 12, 2008 at 12:16 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=5906#respond' onclick='return addComment.moveForm( "comment-5906", "5906", "respond", "128" )' aria-label='Reply to Abhishek'> &middot; Reply</a></span>		 
		</div>
		<p>what&#8217;s assert()      ?</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor odd alt depth-2 clearfix" id="comment-5927">
		<div id="div-comment-5927" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-5927">
		January 12, 2008 at 11:09 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=5927#respond' onclick='return addComment.moveForm( "comment-5927", "5927", "respond", "128" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>I talk about assert in <a href="http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exceptions/" rel="nofollow">section 7.12</a>.  In short, it&#8217;s a way to test whether an expression is true, and if not, stop the program at that point.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-6032">
		<div id="div-comment-6032" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/57af6323e74fcdae7cab644d32b4b6bd?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/57af6323e74fcdae7cab644d32b4b6bd?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Renu</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-6032">
		January 14, 2008 at 4:17 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=6032#respond' onclick='return addComment.moveForm( "comment-6032", "6032", "respond", "128" )' aria-label='Reply to Renu'> &middot; Reply</a></span>		 
		</div>
		<p>double GetFraction() { return static_cast(m_nNumerator)/nDenominator; }  </p>
<p>&#8220;m_nNumerator)/nDenominator&#8221;  should be &#8220;m_nNumerator)/m_nDenominator &#8221;<br />
at all three places in the tutorial.</p>
<p>Thanks,<br />
Renu</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-6033">
		<div id="div-comment-6033" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/57af6323e74fcdae7cab644d32b4b6bd?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/57af6323e74fcdae7cab644d32b4b6bd?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Renu</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-6033">
		January 14, 2008 at 4:22 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=6033#respond' onclick='return addComment.moveForm( "comment-6033", "6033", "respond", "128" )' aria-label='Reply to Renu'> &middot; Reply</a></span>		 
		</div>
		<p>class Fraction<br />
{<br />
private:<br />
    int m_nNumerator =10;<br />
    int m_nDenominator=20;   </p>
<p>public:<br />
    Fraction() // default constructor   &#8230;&#8230;.</p>
<p>I tried initialising m_nNumerator =10 and  int m_nDenominator=20 </p>
<p>got this error &#8221; only static const can be initialised &#8230;.&#8221;</p>
<p>Then I tried </p>
<p>private:<br />
    static const int m_nValue=22;<br />
    int m_nNumerator ;<br />
    int m_nDenominator;<br />
It worked.</p>
<p>Could you please explain? Does that mean private member variable cannot be initialised when they are declared? If so ,is there any specific reason for that?</p>
<p>Thanks,<br />
Renu</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-6036">
		<div id="div-comment-6036" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-6036">
		January 14, 2008 at 4:52 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=6036#respond' onclick='return addComment.moveForm( "comment-6036", "6036", "respond", "128" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>In a class, you can&#8217;t initialize values on the line they are declared like that.  Non-static class values should be initialized in the constructor body or initialization list.  Static class values should be initialized in the body of the class definition.</p>
<p>I am not sure what the reasoning is for this design decision.  I presume simply because the constructor is the function that is supposed to initialize your values.  If you were allowed to do default values this way, then many variables would be initialized twice (once in the declaration, once in the constructor).  This would be both inefficient and confusing.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt depth-2 clearfix" id="comment-46505">
		<div id="div-comment-46505" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/719fcbfcb8d73ba577c4ea55bc13b7b9?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/719fcbfcb8d73ba577c4ea55bc13b7b9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">prabodh</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-46505">
		February 23, 2009 at 6:37 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=46505#respond' onclick='return addComment.moveForm( "comment-46505", "46505", "respond", "128" )' aria-label='Reply to prabodh'> &middot; Reply</a></span>		 
		</div>
		<p>hi renu,</p>
<p>     there is not specific reason why we can not initialize private data in class &#8230; It&#8217;s C++ basic rule that user shouldn&#8217;t initialize private,protected or public data inside class without using function or constructor&#8230;..</p>
		</div>
<ul class="children">
		<li class="comment even depth-3 clearfix" id="comment-72231">
		<div id="div-comment-72231" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/3f62d162a86344eb9d17a40e9142f8d8?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/3f62d162a86344eb9d17a40e9142f8d8?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vivek</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-72231">
		November 13, 2009 at 9:42 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=72231#respond' onclick='return addComment.moveForm( "comment-72231", "72231", "respond", "128" )' aria-label='Reply to Vivek'> &middot; Reply</a></span>		 
		</div>
		<p>I believe this may be because the time you are declaring your classes, memory is not allocated to it. It&#8217;s merely a declaration of the class where you are trying to initialize the member variable whose memory hasn&#8217;t yet alloted.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-10480">
		<div id="div-comment-10480" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/610e617df852214cfe41e0914a4112a5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/610e617df852214cfe41e0914a4112a5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-10480">
		March 27, 2008 at 8:37 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=10480#respond' onclick='return addComment.moveForm( "comment-10480", "10480", "respond", "128" )' aria-label='Reply to Tom'> &middot; Reply</a></span>		 
		</div>
		<p>Typo:</p>
<p>&#8220;Date cToday(9, 5, 2007); // cDate is initialized to Sept 5th, 2007 &#8221;</p>
<p>Should be:</p>
<p>&#8220;Date cToday(9, 5, 2007); // <b>cToday</b> is initialized to Sept 5th, 2007 &#8221;</p>
<p>[ Fixed.  Thanks!  -Alex ]</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-95574">
		<div id="div-comment-95574" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/063d3a8f56059f88844e33145cc53ba5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/063d3a8f56059f88844e33145cc53ba5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">gantashalavenki</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-95574">
		June 16, 2011 at 11:37 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=95574#respond' onclick='return addComment.moveForm( "comment-95574", "95574", "respond", "128" )' aria-label='Reply to gantashalavenki'> &middot; Reply</a></span>		 
		</div>
		<p>can we call constructor manually like any other member functions?&#8230;.after intializing varialbes using constructor can we call constructor once again to reinitialize?</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-101611">
		<div id="div-comment-101611" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f1a3d9b17df8ed5b684bd8102637e325?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f1a3d9b17df8ed5b684bd8102637e325?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">codeez</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-101611">
		July 28, 2013 at 8:01 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=101611#respond' onclick='return addComment.moveForm( "comment-101611", "101611", "respond", "128" )' aria-label='Reply to codeez'> &middot; Reply</a></span>		 
		</div>
		<p>I don&#8217;t think so, no. You could just create a void setter function to call that does the same thing though.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-31372">
		<div id="div-comment-31372" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/57b5cb82c2bf26e62fb41ca13a74e917?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/57b5cb82c2bf26e62fb41ca13a74e917?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://gr8guyraja.blogspot.com/' rel='external nofollow' class='url'>Rajkumar</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-31372">
		October 30, 2008 at 10:24 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=31372#respond' onclick='return addComment.moveForm( "comment-31372", "31372", "respond", "128" )' aria-label='Reply to Rajkumar'> &middot; Reply</a></span>		 
		</div>
		<p>It&#8217;s really help full for students like for me .<br />
I had recommended this to my fiends too.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-39342">
		<div id="div-comment-39342" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/49536ff6dbe5bc32e2cb1fbfb5247e50?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/49536ff6dbe5bc32e2cb1fbfb5247e50?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://david-floyd.blogspot.com' rel='external nofollow' class='url'>Dave</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-39342">
		January 26, 2009 at 4:08 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=39342#respond' onclick='return addComment.moveForm( "comment-39342", "39342", "respond", "128" )' aria-label='Reply to Dave'> &middot; Reply</a></span>		 
		</div>
		<p>Do constructors must have same name as class or can have different name?</p>
<p>thanks.</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-41999">
		<div id="div-comment-41999" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-41999">
		February 6, 2009 at 12:07 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=41999#respond' onclick='return addComment.moveForm( "comment-41999", "41999", "respond", "128" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>Constructors always have the same name as the class.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-39417">
		<div id="div-comment-39417" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/966d66750bd2b3e91da9eacc9b17f3a5?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/966d66750bd2b3e91da9eacc9b17f3a5?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Spock</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-39417">
		January 27, 2009 at 12:07 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=39417#respond' onclick='return addComment.moveForm( "comment-39417", "39417", "respond", "128" )' aria-label='Reply to Spock'> &middot; Reply</a></span>		 
		</div>
		<p>So I tried compiling a really simple example from above (constructors with parameters) using </p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e92a2252780353" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-2">2</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-4">4</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-6">6</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-8">8</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-10">10</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-12">12</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-14">14</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-16">16</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-18">18</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-20">20</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-22">22</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-24">24</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-26">26</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-28">28</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-30">30</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-32">32</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-34">34</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e92a2252780353-36">36</div><div class="crayon-num" data-line="crayon-555d7673e92a2252780353-37">37</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e92a2252780353-1"><span class="crayon-p">#include &lt;iostream&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-2"><span class="crayon-p">#include &lt;cassert&gt;&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-4"><span class="crayon-r">using</span><span class="crayon-h"> </span><span class="crayon-t">namespace</span><span class="crayon-h"> </span><span class="crayon-v">std</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-5"><span class="crayon-h"> </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-6"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Fraction</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-7"><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-8"><span class="crayon-m">private</span><span class="crayon-o">:</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-11"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-12"><span class="crayon-m">public</span><span class="crayon-o">:</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Fraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-c">// default constructor&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">m_nNumerator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="crayon-v">m_nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-18"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// Constructor with parameters&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Fraction</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nNumerator</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nDenominator</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">assert</span><span class="crayon-sy">(</span><span class="crayon-v">nDenominator</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nNumerator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nNumerator</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nDenominator</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-26"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetNumerator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">GetDenominator</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">m_nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">double</span><span class="crayon-h"> </span><span class="crayon-e">GetFraction</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-h"> </span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-r">static_cast</span><span class="crayon-o">&lt;</span><span class="crayon-t">double</span><span class="crayon-o">&gt;</span><span class="crayon-sy">(</span><span class="crayon-v">m_nNumerator</span><span class="crayon-sy">)</span><span class="crayon-o">/</span><span class="crayon-v">nDenominator</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-sy">}</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-30"><span class="crayon-sy">}</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-31"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-32"><span class="crayon-h">&nbsp;&nbsp;</span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-33"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-34"><span class="crayon-sy">{</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e92a2252780353-36"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span><span class="crayon-h">&nbsp;&nbsp; </span></div><div class="crayon-line" id="crayon-555d7673e92a2252780353-37"><span class="crayon-sy">}</span><span class="crayon-h"> </span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0066 seconds] -->
<p></p>
<p>So this is pretty much exactly what you have, except that I included a simple main so that I could see if it compiles, however I get:</p>
<p>construct.cc: In member function &#8216;double Fraction::GetFraction()':<br />
construct.cc:28: error: &#8216;nDenominator&#8217; undeclared (first use of this function)<br />
construct.cc:28: error: (each undeclared identifier is reported only once for each function it appera in).</p>
<p>This should have been foolprooooof!  HELP!</p>
		</div>
<ul class="children">
		<li class="comment byuser comment-author-alex bypostauthor even depth-2 clearfix" id="comment-42001">
		<div id="div-comment-42001" class="clearfix comment-container bypostauthor">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a4e62d28c29f6c864923207d4c17993b?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://www.tarindel.com' rel='external nofollow' class='url'>Alex</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-42001">
		February 6, 2009 at 12:09 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=42001#respond' onclick='return addComment.moveForm( "comment-42001", "42001", "respond", "128" )' aria-label='Reply to Alex'> &middot; Reply</a></span>		 
		</div>
		<p>I had a typo in the example.  In GetFraction(), nDenominator should be m_nDenominator.  I&#8217;ve fixed the examples in the lesson.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-46460">
		<div id="div-comment-46460" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/888e83bb7364e072c383091b3401c4c1?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/888e83bb7364e072c383091b3401c4c1?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Maryam</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-46460">
		February 23, 2009 at 2:16 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=46460#respond' onclick='return addComment.moveForm( "comment-46460", "46460", "respond", "128" )' aria-label='Reply to Maryam'> &middot; Reply</a></span>		 
		</div>
		<p>THANKU guys&#8230;. i was facing problem in parameterized constructor. thanks a lot again&#8230;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-64704">
		<div id="div-comment-64704" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/1e26b6faedc7af3234635dc36fd1008a?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/1e26b6faedc7af3234635dc36fd1008a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vijendra</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-64704">
		July 21, 2009 at 4:11 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=64704#respond' onclick='return addComment.moveForm( "comment-64704", "64704", "respond", "128" )' aria-label='Reply to Vijendra'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e9086046714716" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e9086046714716-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e9086046714716-2">2</div><div class="crayon-num" data-line="crayon-555d7673e9086046714716-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e9086046714716-4">4</div><div class="crayon-num" data-line="crayon-555d7673e9086046714716-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e9086046714716-6">6</div><div class="crayon-num" data-line="crayon-555d7673e9086046714716-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e9086046714716-8">8</div><div class="crayon-num" data-line="crayon-555d7673e9086046714716-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e9086046714716-10">10</div><div class="crayon-num" data-line="crayon-555d7673e9086046714716-11">11</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e9086046714716-1"><span class="crayon-e">Hi </span><span class="crayon-v">Alex</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e9086046714716-2">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e9086046714716-3"><span class="crayon-i">I</span><span class="crayon-h"> </span><span class="crayon-i">have</span><span class="crayon-h"> </span><span class="crayon-i">a</span><span class="crayon-h"> </span><span class="crayon-e">constructor </span><span class="crayon-e">with </span><span class="crayon-e">two </span><span class="crayon-e">parameters </span><span class="crayon-st">and</span><span class="crayon-h"> </span><span class="crayon-e">there </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-e">no </span><span class="crayon-st">default</span><span class="crayon-h"> </span><span class="crayon-e">constructor </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">my </span><span class="crayon-t">class</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e9086046714716-4">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e9086046714716-5"><span class="crayon-st">While</span><span class="crayon-h"> </span><span class="crayon-e">creating </span><span class="crayon-e">the </span><span class="crayon-t">object</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-i">I</span><span class="crayon-h"> </span><span class="crayon-e">am </span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-e">supplying </span><span class="crayon-e">any </span><span class="crayon-v">parameter</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-r">This</span><span class="crayon-h"> </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">per </span><span class="crayon-e">my </span><span class="crayon-e">knowledge </span><span class="crayon-e">generate </span><span class="crayon-e">the </span><span class="crayon-e">error</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e9086046714716-6">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e9086046714716-7"><span class="crayon-e">error </span><span class="crayon-e">because </span><span class="crayon-e">we </span><span class="crayon-e">should </span><span class="crayon-e">provide </span><span class="crayon-e">the </span><span class="crayon-st">default</span><span class="crayon-h"> </span><span class="crayon-v">constructor</span><span class="crayon-o">/</span><span class="crayon-e">constructor </span><span class="crayon-e">without </span><span class="crayon-e">any </span><span class="crayon-e">argument </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">order </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-e">create </span><span class="crayon-t">object</span><span class="crayon-h"> </span><span class="crayon-e">without </span><span class="crayon-e">any </span><span class="crayon-v">argument</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e9086046714716-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e9086046714716-9"><span class="crayon-e">My </span><span class="crayon-e">question </span><span class="crayon-st">is</span><span class="crayon-h"> </span><span class="crayon-v">that</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">how </span><span class="crayon-i">can</span><span class="crayon-h"> </span><span class="crayon-i">I</span><span class="crayon-h"> </span><span class="crayon-e">edit </span><span class="crayon-e">the </span><span class="crayon-e">constructor </span><span class="crayon-e">with </span><span class="crayon-e">two </span><span class="crayon-e">argument </span><span class="crayon-e">so </span><span class="crayon-e">that </span><span class="crayon-e">it </span><span class="crayon-e">will </span><span class="crayon-e">consider </span><span class="crayon-e">the </span><span class="crayon-e">objects </span><span class="crayon-e">without </span><span class="crayon-e">any </span><span class="crayon-v">parameter</span><span class="crayon-sy">.</span><span class="crayon-h"> </span><span class="crayon-i">I</span><span class="crayon-h"> </span><span class="crayon-st">do</span><span class="crayon-h"> </span><span class="crayon-st">not</span><span class="crayon-h"> </span><span class="crayon-e">want </span><span class="crayon-st">to</span><span class="crayon-h"> </span><span class="crayon-e">create </span><span class="crayon-e">any </span><span class="crayon-r">new</span><span class="crayon-h"> </span><span class="crayon-v">constructor</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">only </span><span class="crayon-e">through </span><span class="crayon-e">modifying </span><span class="crayon-e">existing </span><span class="crayon-v">one</span><span class="crayon-sy">.</span><span class="crayon-h"> </span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e9086046714716-10"><span class="crayon-e">Any </span><span class="crayon-v">Idea</span><span class="crayon-sy">?</span></div><div class="crayon-line" id="crayon-555d7673e9086046714716-11"><span class="crayon-v">Thanks</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0037 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-66158">
		<div id="div-comment-66158" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/81bd2d059cd551dbfbf59944f3c4596d?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/81bd2d059cd551dbfbf59944f3c4596d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vishal</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-66158">
		August 12, 2009 at 11:44 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=66158#respond' onclick='return addComment.moveForm( "comment-66158", "66158", "respond", "128" )' aria-label='Reply to Vishal'> &middot; Reply</a></span>		 
		</div>
		<p>hello alex,<br />
 When i compiled following program i got an error that-</p>
<p><b>Ambiguity between Con::Con(int) &amp; Con::Con(float)</b><br />
my query is that Why this is so? We can do same thing with functions(i did it in this program too) then why cant with Constructors???</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8fb7464896276" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-2">2</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-4">4</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-6">6</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-8">8</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-10">10</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-12">12</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-14">14</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-16">16</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-18">18</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-20">20</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-22">22</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-24">24</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-26">26</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-28">28</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-30">30</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-32">32</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-34">34</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-36">36</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-38">38</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-40">40</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-42">42</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-44">44</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-46">46</div><div class="crayon-num" data-line="crayon-555d7673e8fb7464896276-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8fb7464896276-48">48</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8fb7464896276-1"><span class="crayon-p">#include&lt;iostream.h&gt;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-2"><span class="crayon-p">#include&lt;conio.h&gt;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-3"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Con</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-4"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">float</span><span class="crayon-h"> </span><span class="crayon-v">f</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">i</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-8"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-10"><span class="crayon-e">Con</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">it</span><span class="crayon-sy">)</span><span class="crayon-c">//overloaded constructors</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-11"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-12"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">i</span><span class="crayon-o">=</span><span class="crayon-v">it</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-13"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-14"><span class="crayon-e">Con</span><span class="crayon-sy">(</span><span class="crayon-t">float</span><span class="crayon-h"> </span><span class="crayon-v">ft</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-15"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-16"><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">f</span><span class="crayon-o">=</span><span class="crayon-v">ft</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-17"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-18">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-19"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">fun1</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">p</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-c">//overloaded functions</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-20"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-21"><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">p</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-22"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-23"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">fun2</span><span class="crayon-sy">(</span><span class="crayon-t">float</span><span class="crayon-h"> </span><span class="crayon-v">q</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-24"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-25"><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">q</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-26"><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-27">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-28"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">printI</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-29"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-30"><span class="crayon-h"> </span><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">i</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-31"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-32"><span class="crayon-t">void</span><span class="crayon-h"> </span><span class="crayon-e">printF</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-33"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-34"><span class="crayon-r">cout</span><span class="crayon-o">&lt;&lt;</span><span class="crayon-v">f</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-35"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-36"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-37"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-38"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-39"><span class="crayon-e">clrscr</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-40"><span class="crayon-i">Con</span><span class="crayon-h"> </span><span class="crayon-e">c</span><span class="crayon-sy">(</span><span class="crayon-cn">10.8</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">//error</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-41">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-42"><span class="crayon-v">c</span><span class="crayon-sy">.</span><span class="crayon-e">printI</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-43"><span class="crayon-v">c</span><span class="crayon-sy">.</span><span class="crayon-e">fun1</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-44"><span class="crayon-v">c</span><span class="crayon-sy">.</span><span class="crayon-e">fun2</span><span class="crayon-sy">(</span><span class="crayon-cn">20.3</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-45"><span class="crayon-e">getch</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-46"><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8fb7464896276-47"><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8fb7464896276-48"><span class="crayon-o">&lt;</span><span class="crayon-o">!</span><span class="crayon-o">--</span><span class="crayon-v">formatted</span><span class="crayon-o">--</span><span class="crayon-o">&gt;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0041 seconds] -->
<p></p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-66490">
		<div id="div-comment-66490" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/40a4b0df164b54012f6cfaa38c06e2ea?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">baldo</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-66490">
		August 17, 2009 at 11:54 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=66490#respond' onclick='return addComment.moveForm( "comment-66490", "66490", "respond", "128" )' aria-label='Reply to baldo'> &middot; Reply</a></span>		 
		</div>
		<p>The error appears because the compiler treats the number 10.8 as double by default. That is why you get the ambiguity error. Replace 10.8 with 10.8f so the compiler knows that the number is a float number.</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-3 clearfix" id="comment-66643">
		<div id="div-comment-66643" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/81bd2d059cd551dbfbf59944f3c4596d?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/81bd2d059cd551dbfbf59944f3c4596d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vishal</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-66643">
		August 19, 2009 at 3:01 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=66643#respond' onclick='return addComment.moveForm( "comment-66643", "66643", "respond", "128" )' aria-label='Reply to Vishal'> &middot; Reply</a></span>		 
		</div>
		<p>Gotcha!!! look what i did under the comment overloaded functions!!!!<br />
grrrr silly thing&#8230;anyways thanx man!!!!</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-66526">
		<div id="div-comment-66526" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/51a8a8e16988d503e8f4ac97968f72f9?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/51a8a8e16988d503e8f4ac97968f72f9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://practicaluseful.com' rel='external nofollow' class='url'>Jamie</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-66526">
		August 17, 2009 at 9:55 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=66526#respond' onclick='return addComment.moveForm( "comment-66526", "66526", "respond", "128" )' aria-label='Reply to Jamie'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>A small suggestion on preventing the pain of date ambiguity!</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8e15375608959" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8e15375608959-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8e15375608959-1"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-e">cToday</span><span class="crayon-sy">(</span><span class="crayon-cn">9</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2007</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>Could mean 9th May 2007 or 5th Sept 2007, in fact it means the former everywhere except the US.</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8e1f559210198" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8e1f559210198-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8e1f559210198-1"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-e">cToday</span><span class="crayon-sy">(</span><span class="crayon-cn">2007</span><span class="crayon-sy">,</span><span class="crayon-cn">9</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0004 seconds] -->
<p></p>
<p>Definitely means 2007 September 5th for everyone!</p>
<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8e26900612341" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-2">2</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-4">4</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-6">6</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-8">8</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-10">10</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-12">12</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-14">14</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-16">16</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-18">18</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-20">20</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-22">22</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8e26900612341-24">24</div><div class="crayon-num" data-line="crayon-555d7673e8e26900612341-25">25</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8e26900612341-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Date</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-2"><span class="crayon-sy">{</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-3"><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nYear</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nMonth</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">m_nDay</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-8">&nbsp;</div><div class="crayon-line" id="crayon-555d7673e8e26900612341-9"><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nYear</span><span class="crayon-o">=</span><span class="crayon-cn">1970</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nMonth</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">nDay</span><span class="crayon-o">=</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nYear</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nYear</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nMonth</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nMonth</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">m_nDay</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">nDay</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-16"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-17">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-18"><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-e">main</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-19"><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-v">cDate</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// cDate is initialized to Jan 1st, 1970 instead of garbage</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-21">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Date </span><span class="crayon-e">cToday</span><span class="crayon-sy">(</span><span class="crayon-cn">2007</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">9</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span><span class="crayon-h"> </span><span class="crayon-c">// cToday is initialized to Sept 5th, 2007</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-23">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8e26900612341-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8e26900612341-25"><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0029 seconds] -->
<p></p>
<p>As long as you&#8217;re training new programers (and doing an excellent job too) I&#8217;d say this is another well recommended habit to learn in case you work on a project with an international team in the future!</p>
<p>Cheers,</p>
<p>Jamie</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-69941">
		<div id="div-comment-69941" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/c25e26fadac031df53d2391d2872c6fb?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/c25e26fadac031df53d2391d2872c6fb?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Paulius</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-69941">
		October 8, 2009 at 12:48 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=69941#respond' onclick='return addComment.moveForm( "comment-69941", "69941", "respond", "128" )' aria-label='Reply to Paulius'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,<br />
I have the following class:</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8c5e871517147" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8c5e871517147-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8c5e871517147-2">2</div><div class="crayon-num" data-line="crayon-555d7673e8c5e871517147-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8c5e871517147-4">4</div><div class="crayon-num" data-line="crayon-555d7673e8c5e871517147-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8c5e871517147-6">6</div><div class="crayon-num" data-line="crayon-555d7673e8c5e871517147-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8c5e871517147-8">8</div><div class="crayon-num" data-line="crayon-555d7673e8c5e871517147-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-555d7673e8c5e871517147-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8c5e871517147-1"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-e">Point</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8c5e871517147-2"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">private</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e8c5e871517147-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">posX</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">posY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8c5e871517147-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-m">public</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-555d7673e8c5e871517147-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-e">Point</span><span class="crayon-sy">(</span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">n_posX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-h"> </span><span class="crayon-v">n_posY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-sy">{</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8c5e871517147-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">posX</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">n_posX</span><span class="crayon-sy">;</span></div><div class="crayon-line" id="crayon-555d7673e8c5e871517147-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">posY</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">n_posY</span><span class="crayon-sy">;</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8c5e871517147-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">}</span></div><div class="crayon-line" id="crayon-555d7673e8c5e871517147-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c">// more stuff here</span></div><div class="crayon-line crayon-striped-line" id="crayon-555d7673e8c5e871517147-10"><span class="crayon-sy">}</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0017 seconds] -->
<p></p>
<p>and using this</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8c68626529593" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8c68626529593-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8c68626529593-1"><span class="crayon-e">Point </span><span class="crayon-e">point</span><span class="crayon-sy">(</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p>initializes posX to 10. Is there a way, i can initialize first constructor parameter to default value, and second one to something else?</p>
<p>I want to do something like this: (ofc, this example doesn&#8217;t compile)</p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e8c6f961441917" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e8c6f961441917-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e8c6f961441917-1"><span class="crayon-e">Point </span><span class="crayon-e">point</span><span class="crayon-sy">(</span><span class="crayon-st">default</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p> </p>
<p>Thanks,<br />
Paulius</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-101612">
		<div id="div-comment-101612" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f1a3d9b17df8ed5b684bd8102637e325?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f1a3d9b17df8ed5b684bd8102637e325?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">codeez</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-101612">
		July 28, 2013 at 8:11 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=101612#respond' onclick='return addComment.moveForm( "comment-101612", "101612", "respond", "128" )' aria-label='Reply to codeez'> &middot; Reply</a></span>		 
		</div>
		<p>No, remember parameters replace from left to right. It wouldn&#8217;t hurt to just call it with point(0, 10); though.</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-71472">
		<div id="div-comment-71472" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/83573ad551e4269d0412c11cb9ec817d?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/83573ad551e4269d0412c11cb9ec817d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Ramakrishna</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-71472">
		November 2, 2009 at 4:57 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=71472#respond' onclick='return addComment.moveForm( "comment-71472", "71472", "respond", "128" )' aria-label='Reply to Ramakrishna'> &middot; Reply</a></span>		 
		</div>
		<p>hello Alex,<br />
          This is the first time iam seeing this site actually iam<br />
from non computer background, eventhen iam able to understand easily..<br />
Really good job<br />
thanks Alexji&#8230;&#8230;&#8230;..</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-71999">
		<div id="div-comment-71999" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4742be65fb71afb0914bbd3454da858f?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4742be65fb71afb0914bbd3454da858f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://rakahack.blogspot.com' rel='external nofollow' class='url'>Ryan</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-71999">
		November 9, 2009 at 6:52 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=71999#respond' onclick='return addComment.moveForm( "comment-71999", "71999", "respond", "128" )' aria-label='Reply to Ryan'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex.  This has been some very helpful reading.  I&#8217;m better understanding what is going on with the OOP side of C++.</p>
<p>At the moment I don&#8217;t have the code in front of me, but here&#8217;s the summary:<br />
I attempted to initialize an array of values that are intended to be constant.  In the object constructor, the array is initialized as a pointer, say:</p>
<p>class Foo {<br />
    private:<br />
    float *array;<br />
    public:<br />
     //some public variables<br />
    // more stuff here<br />
};</p>
<p>Now I&#8217;m not sure what is the best way to proceed.  Right now it is initialized in a function say,</p>
<p>Foo::foobar() {<br />
 //set array size<br />
 //set individual constant values.<br />
 // foobar&#8217;s functions<br />
}</p>
<p>It works to do it this way, but I know it is a kludge to initialize an array of constant values every time the function is called.  </p>
<p>It looks like I could do this by making a public function to do this, but how can I prevent this from being changed by functions not belonging to the class?  Maybe I just need to keep reading your tutorials and I&#8217;ll find out.</p>
<p>But, if you find this an interesting topic, then what is the best way to initialize an array of constants that is global to the class in an object oriented language?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-72662">
		<div id="div-comment-72662" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/4742be65fb71afb0914bbd3454da858f?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/4742be65fb71afb0914bbd3454da858f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname"><a href='http://rakahack.blogspot.com' rel='external nofollow' class='url'>Ryan</a></span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-72662">
		November 20, 2009 at 3:24 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=72662#respond' onclick='return addComment.moveForm( "comment-72662", "72662", "respond", "128" )' aria-label='Reply to Ryan'> &middot; Reply</a></span>		 
		</div>
		<p>Ha.  I figured it out.  My problem was not from misusing the constructor, but that I had a loop in a cleanup function that was setting everything to 0.  This was meant to clean up other arrays that DO need to be reset each time the cleanup function was called, but for some reason I put my array of constants in the cleanup, and it was doing exactly what I told it to do.</p>
<p>Anyone who says computers do exactly what you tell them to do&#8230;<br />
+1 to that. <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-74717">
		<div id="div-comment-74717" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/da3e5d2c14738da6dd9cdcd6ec66ed31?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/da3e5d2c14738da6dd9cdcd6ec66ed31?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Aakash</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-74717">
		December 23, 2009 at 12:57 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=74717#respond' onclick='return addComment.moveForm( "comment-74717", "74717", "respond", "128" )' aria-label='Reply to Aakash'> &middot; Reply</a></span>		 
		</div>
		<p>Using a constructor, how would you initialize a string type with a string value?</p>
		</div>
<ul class="children">
		<li class="comment odd alt depth-2 clearfix" id="comment-90532">
		<div id="div-comment-90532" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/a6051acd4682609a7d58066e6e3d3d4a?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/a6051acd4682609a7d58066e6e3d3d4a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">avolc</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-90532">
		August 18, 2010 at 8:39 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=90532#respond' onclick='return addComment.moveForm( "comment-90532", "90532", "respond", "128" )' aria-label='Reply to avolc'> &middot; Reply</a></span>		 
		</div>
		<p></p><!-- Crayon Syntax Highlighter v2.7.1 -->

		<div id="crayon-555d7673e89cf178177324" class="crayon-syntax crayon-theme-familiar-learncppcom crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" no-popup minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-plain-wrap"></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-555d7673e89cf178177324-1">1</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-555d7673e89cf178177324-1"><span class="crayon-t">string</span><span class="crayon-h"> </span><span class="crayon-e">my_str</span><span class="crayon-sy">(</span><span class="crayon-s">"Hello World!"</span><span class="crayon-sy">)</span><span class="crayon-sy">;</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0003 seconds] -->
<p></p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-78577">
		<div id="div-comment-78577" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/43dcb568b77149a55b57143a2fd0c475?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/43dcb568b77149a55b57143a2fd0c475?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Mark</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-78577">
		February 18, 2010 at 4:01 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=78577#respond' onclick='return addComment.moveForm( "comment-78577", "78577", "respond", "128" )' aria-label='Reply to Mark'> &middot; Reply</a></span>		 
		</div>
		<p>I haven&#8217;t programmed for many years as OOP seemed too scary but it&#8217;s all coming together really clearly now thanks to this this site. I&#8217;m starting to see the elegance of this language. Many thanks Alex for your clear and concise tutorial.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-91331">
		<div id="div-comment-91331" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/5133cc6b13b0cd962b29f8fdec45bcb9?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/5133cc6b13b0cd962b29f8fdec45bcb9?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Tom</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-91331">
		September 3, 2010 at 8:56 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=91331#respond' onclick='return addComment.moveForm( "comment-91331", "91331", "respond", "128" )' aria-label='Reply to Tom'> &middot; Reply</a></span>		 
		</div>
		<p>I didn&#8217;t see any comments about #include  before it is used.</p>
<p>I assume that it is necessary for constructors?</p>
<p>Tom</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-93463">
		<div id="div-comment-93463" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/03ce75db57c8044e9f5410907ffab162?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/03ce75db57c8044e9f5410907ffab162?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vineet</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-93463">
		October 6, 2010 at 9:42 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=93463#respond' onclick='return addComment.moveForm( "comment-93463", "93463", "respond", "128" )' aria-label='Reply to Vineet'> &middot; Reply</a></span>		 
		</div>
		<p>hi,<br />
   Your tutorial is nice and gives a clear understanding of constructors. </p>
<p>Thanks,<br />
Vineet</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-93503">
		<div id="div-comment-93503" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f6fa144c158c610dc4d067e076af385a?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f6fa144c158c610dc4d067e076af385a?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">andi</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-93503">
		October 9, 2010 at 8:00 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=93503#respond' onclick='return addComment.moveForm( "comment-93503", "93503", "respond", "128" )' aria-label='Reply to andi'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,<br />
Just want to say &#8230; it&#8217;s really great tutorial. Thanx it helps me a lot. i like the way you make your explaination, it&#8217;s simple and easy to understand.<br />
cheers,<br />
andi</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-95125">
		<div id="div-comment-95125" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/55eddb03eeaf352cd86f04eaafe12131?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">SWEngineer</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-95125">
		January 23, 2011 at 5:04 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=95125#respond' onclick='return addComment.moveForm( "comment-95125", "95125", "respond", "128" )' aria-label='Reply to SWEngineer'> &middot; Reply</a></span>		 
		</div>
		<p>Simple well explained tutorial.</p>
<p>Thanks.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-96056">
		<div id="div-comment-96056" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/35d9f59345a15cdb73d24b35d3329036?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/35d9f59345a15cdb73d24b35d3329036?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">ccc</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-96056">
		September 21, 2011 at 11:00 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=96056#respond' onclick='return addComment.moveForm( "comment-96056", "96056", "respond", "128" )' aria-label='Reply to ccc'> &middot; Reply</a></span>		 
		</div>
		<p>Hi Alex,</p>
<p>  Thank you so much for such a great tutorial. However, I would like to use this section to indicate what is consistently missing in this tutorial. When discussing class, I think many reader will be more interested in object in the heap than stack. </p>
<p>***<br />
In the above example, because we declared a Date object, but there is no default constructor, m_nMonth, m_nDay, and m_nYear were never initialized. Consequently, they will hold garbage values. Generally speaking, this is why providing a default constructor is almost always a good idea:<br />
***</p>
<p>will be true for stack object but it will not be true for heap object. For example:</p>
<p>#include </p>
<p>using namespace std;</p>
<p>class Date<br />
{<br />
private:<br />
    int m_nMonth;<br />
    int m_nDay;<br />
    int m_nYear;<br />
public:<br />
	int getMonth(){return m_nMonth;}<br />
	int getDay(){return m_nDay;}<br />
	int getYear(){return m_nYear;}<br />
};</p>
<p>int main()<br />
{<br />
    Date cDate;<br />
    // cDate&#8217;s member variables now contain garbage<br />
    // Who knows what date we&#8217;ll get?</p>
<p>	cout &lt;&lt; cDate.getMonth() &lt;&lt; &quot;/&quot; &lt;&lt; cDate.getDay() &lt;&lt; &quot;/&quot; &lt;&lt; cDate.getYear() &lt;&lt; endl;<br />
	Date *pDate = new Date();<br />
	cout &lt;getMonth() &lt;&lt; &quot;/&quot; &lt;getDay() &lt;&lt; &quot;/&quot; &lt;getYear() &lt;&lt; endl;</p>
<p>    return 0;<br />
}</p>
<p>Output:<br />
-858993460/-858993460/-858993460<br />
0/0/0</p>
<p>I found this tutorial purposely omit this distinction. Is there reason for it. However, no matter what. It is really really the greatest c++ tutorial ever. Thank you so much Alex for your hard work.</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-97436">
		<div id="div-comment-97436" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/faab515e825f77c89ca3d22e451509e4?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/faab515e825f77c89ca3d22e451509e4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">spidey</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-97436">
		May 25, 2012 at 4:06 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=97436#respond' onclick='return addComment.moveForm( "comment-97436", "97436", "respond", "128" )' aria-label='Reply to spidey'> &middot; Reply</a></span>		 
		</div>
		<p>Hey!<br />
I joined in new and think I have the answer to Renu&#8217;s query(just a few years late, though) which is 3rd from the top.</p>
<p>Renu, classes are just the blueprint of how you want your object to look like and behave. It does not allocate any memory unless and untill an object fot it is instantiated. The very obvious reason why constructors are called only when an object is created. On the other hand, since static variables ought to get shared amongst multiple object, it has to be defined within the class itself. Otherwise, each instance might try to set a different value for it and &#8216;static&#8217; would lose its very meaning <img src="http://www.learncpp.com/blog/wp-includes/images/smilies/frownie.png" alt=":(" class="wp-smiley" style="height: 1em; max-height: 1em;" />  Moreover, trying to initialize a non-static variable inside a class would be synonymous to trying to install a television in the blueprint architechture of your living room(which is actually lying on the paper)  ?</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-101137">
		<div id="div-comment-101137" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/15e9699c844869c28b140dfd278aae7f?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/15e9699c844869c28b140dfd278aae7f?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">vitalreddy</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-101137">
		July 19, 2013 at 6:01 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=101137#respond' onclick='return addComment.moveForm( "comment-101137", "101137", "respond", "128" )' aria-label='Reply to vitalreddy'> &middot; Reply</a></span>		 
		</div>
		<p>HI&#8230;This is good tutorial..very nice&#8230; i studied the whole constructors  but in this lesson i have some doubt about constructors&#8230;..please give explanation about object because object can create memory?&#8230;why again constructor create memory&#8230;.how to it create&#8230;.without constructor we can&#8217;t create memory.? please give me reply for this one&#8230;&#8230;&#8230;&#8230;:)</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-odd thread-alt depth-1 clearfix" id="comment-102449">
		<div id="div-comment-102449" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/8a9c3d34b3257372cacb2326c324c0a0?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/8a9c3d34b3257372cacb2326c324c0a0?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Light_Ning</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-102449">
		August 14, 2013 at 7:24 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=102449#respond' onclick='return addComment.moveForm( "comment-102449", "102449", "respond", "128" )' aria-label='Reply to Light_Ning'> &middot; Reply</a></span>		 
		</div>
		<p>Thanks</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment odd alt thread-even depth-1 clearfix" id="comment-115769">
		<div id="div-comment-115769" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://1.gravatar.com/avatar/d2579c4cca6a1410d0ade334ff02b259?s=65&#038;d=mm&#038;r=g' srcset='http://1.gravatar.com/avatar/d2579c4cca6a1410d0ade334ff02b259?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">rmusty</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-115769">
		January 1, 2014 at 12:29 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=115769#respond' onclick='return addComment.moveForm( "comment-115769", "115769", "respond", "128" )' aria-label='Reply to rmusty'> &middot; Reply</a></span>		 
		</div>
		<p>Hi, I tried making a program that utilizes constructors and takes the users name and birthday as an input and outputs his/her age. I am getting the following problem:<br />
~~~~~~~~~~<br />
(56): error C2228: left of &#8216;.calc&#8217; must have class/struct/union<br />
(57): error C2228: left of &#8216;.output&#8217; must have class/struct/union<br />
~~~~~~~~~~</p>
<p>My code: </p>
<p>#include &#8220;stdafx.h&#8221;<br />
#include<br />
#include<br />
#include </p>
<p>using namespace std;</p>
<p>class Person<br />
{<br />
private:<br />
	char c_strName[25];<br />
	int c_month;<br />
	int c_day;<br />
	int c_year;<br />
	int c_age;</p>
<p>public:<br />
	Person(char *strName = &#8220;No Name&#8221;, int month = 1, int day = 1, int year = 1900)<br />
	{<br />
		strncpy_s(c_strName, strName, 25);<br />
		c_month = month;<br />
		c_day = day;<br />
		c_year = year;<br />
	}</p>
<p>	void calc()<br />
	{<br />
		time_t now = time(0);<br />
		tm *locTime = localtime(&amp;now);</p>
<p>		int curMonth = 1 + (locTime -&gt; tm_mon);<br />
		int curDay = locTime -&gt; tm_mday;<br />
		int curYear = 1900 + (locTime -&gt; tm_year);</p>
<p>		c_age = curYear - c_year; </p>
<p>		if(((curMonth - c_month) &gt; 0) &amp;&amp; ((curDay - c_day) &gt; 0))<br />
		{<br />
			c_age = c_age - 1;<br />
		}<br />
	}</p>
<p>	void output()<br />
	{<br />
		cout &lt;&lt; &quot;Your age is: &quot; &lt;&lt; c_age &lt;&lt; endl;<br />
	}</p>
<p>};</p>
<p>int _tmain(int argc, _TCHAR* argv[])<br />
{<br />
	Person cBob();<br />
	cBob.calc(); // ERROR POINTS TO THIS LINE<br />
	cBob.output(); // ERROR POINTS TO THIS LINE</p>
<p>	return 0;<br />
}</p>
		</div>
<ul class="children">
		<li class="comment even depth-2 clearfix" id="comment-181822">
		<div id="div-comment-181822" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f23a193242eff4ca12a27a2eb88ebbfc?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f23a193242eff4ca12a27a2eb88ebbfc?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">McGlear</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-181822">
		September 18, 2014 at 2:50 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=181822#respond' onclick='return addComment.moveForm( "comment-181822", "181822", "respond", "128" )' aria-label='Reply to McGlear'> &middot; Reply</a></span>		 
		</div>
		<p>In case somebody has a similar problem:</p>
<p>When creating an instance of a class, you have to omit the parentheses! You are not calling a function but creating an instance of your Person class.</p>
<p>int _tmain(int argc, _TCHAR* argv[])<br />
{<br />
Person cBob; // This should do the trick<br />
cBob.calc(); // No error anymore<br />
cBob.output(); // Compiles fine as well.</p>
<p>return 0;<br />
}</p>
		</div>
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
		<li class="comment odd alt thread-odd thread-alt depth-1 clearfix" id="comment-151578">
		<div id="div-comment-151578" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://0.gravatar.com/avatar/f9793453ab66f74a2079f25b8c31915d?s=65&#038;d=mm&#038;r=g' srcset='http://0.gravatar.com/avatar/f9793453ab66f74a2079f25b8c31915d?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">kekie</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-151578">
		June 11, 2014 at 12:41 pm</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=151578#respond' onclick='return addComment.moveForm( "comment-151578", "151578", "respond", "128" )' aria-label='Reply to kekie'> &middot; Reply</a></span>		 
		</div>
		<p>Okay, so default constructors with optional parameters I get, but I don&#8217;t really see the point of default constructors with no parameters. Why not just set the member vars where they&#8217;re declared?</p>
<p>So, to clarify, why do this;</p>
<p>int m_var;<br />
public:<br />
Classname()<br />
{<br />
m_var = 6;<br />
}</p>
<p>When you can do this;<br />
int m_var = 6;</p>
		</div>
</li><!-- #comment-## -->
		<li class="comment even thread-even depth-1 clearfix" id="comment-251130">
		<div id="div-comment-251130" class="clearfix comment-container">
		<div class="comment-author vcard">
		<img alt='' src='http://2.gravatar.com/avatar/849921b5ce284840c1c0c1e6fd6162e4?s=65&#038;d=mm&#038;r=g' srcset='http://2.gravatar.com/avatar/849921b5ce284840c1c0c1e6fd6162e4?s=130&amp;d=mm&amp;r=g 2x' class='avatar avatar-65 photo' height='65' width='65' />		<span class="authorname">Vinay</span>
		</div>
				<div class="comment-meta commentmetadata">
		<a href="http://www.learncpp.com/cpp-tutorial/85-constructors/#comment-251130">
		January 12, 2015 at 12:15 am</a>
        <span class="comment-reply-link"><a class='comment-reply-link' href='/cpp-tutorial/85-constructors/?replytocom=251130#respond' onclick='return addComment.moveForm( "comment-251130", "251130", "respond", "128" )' aria-label='Reply to Vinay'> &middot; Reply</a></span>		 
		</div>
		<p>Hi, i have developed a code  that can capture and display students name, age, department and university seat number. In this code, i have used the new operator for dynamic allocation of arrays. I&#8217;d like to know how this code can be further optimized using parametric constructor, copy operator and equal to operator.</p>
<p>#include<br />
#include<br />
#include<br />
#include</p>
<p>using namespace std;</p>
<p>class Student<br />
	{<br />
		private:<br />
			char *m_strName;<br />
			char *m_strDept;<br />
			int m_iAge;<br />
			int m_iUSN;<br />
		public:<br />
				FILE *Datafile;<br />
				Student()<br />
					{<br />
						int n =0;<br />
						int i=0;<br />
						int m_iUSN = 0;<br />
						int m_iAge=0;<br />
						cout &lt;&lt; &quot;Enter the size of n: &quot; &lt;&gt; n;<br />
						for(i=0; i&lt;n ; i++)<br />
						{<br />
							m_strName = new char[i];<br />
							m_strDept = new char[i];<br />
						}<br />
				}<br />
				~Student()<br />
					{<br />
						delete[] m_strName;<br />
						delete[] m_strDept;<br />
					}</p>
<p>void Data_entry()<br />
		{<br />
			cout &lt;&lt; &quot;Enter the Name of the Student: &quot; &lt;&gt; m_strName;<br />
			cout &lt;&lt; &quot;Enter the Department Name: &quot; &lt;&gt; m_strDept;<br />
			cout &lt;&lt;&quot;Enter the Students Age: &quot; &lt;&gt; m_iAge;<br />
			cout &lt;&lt; &quot;Enter the Students USN: &quot;&lt;&gt; m_iUSN;<br />
		}<br />
void Print_data()<br />
		{<br />
			cout &lt;&lt; &quot;Students Name: &quot; &lt;&lt; m_strName;<br />
			cout &lt;&lt; &quot;Department: &quot;&lt;&lt; m_strDept;<br />
			cout &lt;&lt; &quot;Age: &quot; &lt;&lt; m_iAge;<br />
			cout &lt;&lt; &quot;m_iUSN: &quot;&lt;&gt;a;</p>
<p>		return 0;<br />
}</p>
<p>How can i add insert an option to add new student? so that the code can take in data of multiple students and save it on a file. I have done the dynamic allocation of the arrays and getting results, but my guide tells me, i can further simply the code by using parameter constructors, copy constructor and equal to operator. Any help would be great!.</p>
		</div>
</li><!-- #comment-## -->
	
	</ul>
	<!-- / Comment List -->

	



						<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Comment <small><a rel="nofollow" id="cancel-comment-reply-link" href="/cpp-tutorial/85-constructors/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.learncpp.com/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p><input class="text author" id="author" name="author" type="text" value="" size="30" tabindex="1" />&nbsp;&nbsp;<label for="author"><strong>Name </strong> (required)</label></p>
<p><input class="text email" id="email" name="email" type="text" value="" size="30"  tabindex="2" />&nbsp;&nbsp;<label for="email"><strong>Email</strong> (will not be published) (required)</label></p>
<p><input class="text url" id="url" name="url" type="text" value="" size="30"  tabindex="3" />&nbsp;&nbsp;<label for="url">Website</label></p>
<p class="aiowps-captcha"><label>Please enter an answer in digits:</label><div class="aiowps-captcha-equation"><strong>six &#8722; one = <input type="hidden" name="aiowps-captcha-string-info" id="aiowps-captcha-string-info" value="MTQzMjE4ODUzMnR5bTdtZjVxZ3o3ZGJwYWozMW04NQ==" /><input type="hidden" name="aiowps-captcha-temp-string" id="aiowps-captcha-temp-string" value="1432188532" /><input type="text" size="2" length="2" id="aiowps-captcha-answer" name="aiowps-captcha-answer" value="" /></strong></div></p>												<p><textarea name="comment" id="comment" rows="10" cols="10" tabindex="4"></textarea></p>						<div class="useCode">Put C++ code inside [code][/code] tags to use the syntax highlighter</div>
						<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='128' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="a46f943f4e" /></p>		<p class="antispam-group antispam-group-q" style="clear: both;">
			<label>Current ye@r <span class="required">*</span></label>
			<input type="hidden" name="antspm-a" class="antispam-control antispam-control-a" value="2015" />
			<input type="text" name="antspm-q" class="antispam-control antispam-control-q" value="3.5" />
		</p>
		<p class="antispam-group antispam-group-e" style="display: none;">
			<label>Leave this field empty</label>
			<input type="text" name="antspm-e-email-url-website" class="antispam-control antispam-control-e" value="" />
		</p>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="179"/></p>					</form>
							</div><!-- #respond -->
			<div class='code-block code-block-7' style='margin:8px 0px;'><div class="cf_monitor">
<div id="Content Below Comment">
    <script type="text/javascript">
    var width = 0;
    if (document.getElementById('middle'))
        width = document.getElementById('middle').clientWidth;
    else
        width = document.innerWidth;

    if (width >= 768)
    {
        try {
            window._mNHandle.queue.push(function () {
		        window._mNDetails.loadTag("Content Below Comment", "728x90", "287758258");
		        });
		    }
        catch (error) {}
    }
	</script>
</div>
</div></div>		
    

</td>
<!-- / Main Column -->

<!-- Right Inner Sidebar -->

<!-- Right Sidebar -->
<td id="right">

	<div id="text-7" class="widget widget_text">			<div class="textwidget"><div class="cf_monitor">
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript">
    google_ad_client = "ca-pub-0588844875925051";
    google_ad_slot = "0955932809";
    google_ad_width = 160;
    google_ad_height = 600;
</script>
<!-- Post - Right Sidebar - Wide Sky -->
<script type="text/javascript"
src="//pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
		</div>
</td>
<!-- / Right Sidebar -->

</tr>
<!-- / Main Body -->


</table><!-- / layout -->
</div><!-- / container -->
</div><!-- / wrapper -->
		<!-- Full Width Footer -->
		<div id="footer" class="full-width">
    LearnCpp.com -- Teaching you how to program in C++ since May 25, 2007.&nbsp;&nbsp;Copyright &copy; 2015 <a href="http://www.learncpp.com/">Learn C++</a> - All Rights Reserved<br />Powered by <a href="http://wordpress.org/">WordPress</a> &amp; <a href="http://forum.bytesforall.com/">Atahualpa</a>    
    
    
	<script type="text/javascript">
		window.WPCOM_sharing_counts = {"http:\/\/www.learncpp.com\/cpp-tutorial\/85-constructors\/":128};
		window.WPCOM_jetpack = true;
				window.WPCOM_site_ID = 3928254;
			</script>
	<div id="sharing_email" style="display: none;">
		<form action="/cpp-tutorial/85-constructors/" method="post">
			<label for="target_email">Send to Email Address</label>
			<input type="email" name="target_email" id="target_email" value="" />

			
				<label for="source_name">Your Name</label>
				<input type="text" name="source_name" id="source_name" value="" />

				<label for="source_email">Your Email Address</label>
				<input type="email" name="source_email" id="source_email" value="" />

						<input type="text" id="jetpack-source_f_name" name="source_f_name" class="input" value="" size="25" autocomplete="off" />
			<script> document.getElementById('jetpack-source_f_name').value = ''; </script>
			
			<img style="float: right; display: none" class="loading" src="http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/images/loading.gif" alt="loading" width="16" height="16" />
			<input type="submit" value="Send Email" class="sharing_send" />
			<a rel="nofollow" href="#cancel" class="sharing_cancel">Cancel</a>

			<div class="errors errors-1" style="display: none;">
				Post was not sent - check your email addresses!			</div>

			<div class="errors errors-2" style="display: none;">
				Email check failed, please try again			</div>

			<div class="errors errors-3" style="display: none;">
				Sorry, your blog cannot share posts by email.			</div>
		</form>
	</div>
		<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-facebook' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomfacebook', 'menubar=1,resizable=1,width=600,height=400' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-twitter' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomtwitter', 'menubar=1,resizable=1,width=600,height=350' );
				return false;
			});
		});
		</script>
				<script type="text/javascript">
			var windowOpen;
		jQuery(document).on( 'ready post-load', function(){
			jQuery( 'a.share-google-plus-1' ).on( 'click', function() {
				if ( 'undefined' !== typeof windowOpen ){ // If there's another sharing window open, close it.
					windowOpen.close();
				}
				windowOpen = window.open( jQuery(this).attr( 'href' ), 'wpcomgoogle-plus-1', 'menubar=1,resizable=1,width=480,height=550' );
				return false;
			});
		});
		</script>
							<script type="text/javascript">
			jQuery(document).on('ready', function(){
				jQuery('body').on('click', 'a.share-pinterest', function(e){
					e.preventDefault();

					// Load Pinterest Bookmarklet code
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = window.location.protocol + "//assets.pinterest.com/js/pinmarklet.js?r=" + ( Math.random() * 99999999 );
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);

					// Trigger Stats
					var s = document.createElement("script");
					s.type = "text/javascript";
					s.src = this + ( this.toString().indexOf( '?' ) ? '&' : '?' ) + 'js_only=1';
					var x = document.getElementsByTagName("script")[0];
					x.parentNode.insertBefore(s, x);
				});
			});
			</script>
		<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.1.1'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-includes/js/comment-reply.min.js?ver=4.2.2'></script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/anti-spam/js/anti-spam-3.5.js'></script>
<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201521'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var sharing_js_options = {"lang":"en","counts":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.learncpp.com/blog/wp-content/plugins/jetpack/modules/sharedaddy/sharing.js?ver=3.5.3'></script>
<script type='text/javascript' src='http://stats.wp.com/e-201521.js' async defer></script>
<script type='text/javascript'>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:3.5.3',blog:'3928254',post:'128',tz:'-8',srv:'www.learncpp.com'} ]);
	_stq.push([ 'clickTrackerInit', '3928254', '128' ]);
</script>
		</div>
		<!-- / Full Width Footer -->

</body>
</html>
<!-- Dynamic page generated in 0.921 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-05-20 22:08:52 -->

<!-- Compression = gzip -->
<!-- super cache -->

